<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>第一个博客</title>
    <url>/%E6%97%A5%E5%B8%B8/1/</url>
    <content><![CDATA[<p>博客建成：Hello World</p>
<span id="more"></span>
<ul>
<li>前言</li>
</ul>
<p>之前常常看博客学习内容，想着自己也可以做一个博客，记录自己的学习内容。所以此博客随之诞生。取名Fingsinz’s space。</p>
<ul>
<li>用途</li>
</ul>
<p>我想着，这个博客分为几个栏目，可以记录我的学习笔记，可以分享我平常使用体验较好的软件网站，甚至可以分享我毫无营养的日常……看看侧栏，于是分成了主页、日常、比较、好物分享、归档、关于几个模块。我还增加了搜索功能，便于搜索关键词。</p>
<ul>
<li>更多</li>
</ul>
<p>我并不是主攻前端方向，学习到的知识也较为浅薄，所以该博客还有很大改进空间。</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>日常</category>
      </categories>
  </entry>
  <entry>
    <title>Qt5.14.2项目打包成软件记录</title>
    <url>/%E6%97%A5%E5%B8%B8/10/</url>
    <content><![CDATA[<p>介绍如何将Qt项目打包成软件发布</p>
<p>关键词：C++、Qt</p>
<span id="more"></span>
<hr>
<!-- toc -->
<h1>1.编译出.exe文件</h1>
<p>打开需要打包的项目，在左下角选择合适的构建部件和版本，版本要选择<code>Release</code>，至于64bit还是32bit看需求。</p>
<p>选择后点击锤子编译项目，此处我以<code>MinGWx64,Release</code>编译。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/10_qt.jpg" alt="选择构建部件和版本"><figcaption>选择构建部件和版本</figcaption></figure></p>
<p>点击左侧的项目，查看构建目录（项目目录跟构建目录尽量别带中文）。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/10_qt2.jpg" alt="查看构建目录"><figcaption>查看构建目录</figcaption></figure></p>
<p>打开构建目录，发现出现一个.exe文件。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/10_exe.jpg" alt="编译出.exe文件"><figcaption>编译出.exe文件</figcaption></figure></p>
<h1>2.打包项目</h1>
<p>将刚才构建出来的.exe文件复制到一个新的文件夹（目录尽量不带中文），该目录作为软件的工作目录。比如我复制到<code>F:\test\HelloWorld1.0</code>，软件工作目录就是这个文件夹，test目录下的一个新建文件夹。</p>
<p>接着打开Qt的安装目录下的bin文件夹，找到<code>windeployqt.exe</code>，复制其路径，我的<code>windeployqt.exe</code>位于<code>D:\Qt\5.14.2\mingw73_64\bin</code>。</p>
<p>回到软件的工作目录（新建的文件夹），在地址栏输入cmd打开命令提示符，按格式输入：</p>
<p><code>windeployqt文件路径 发布软件的路径</code></p>
<p>如：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">D:\Qt\5.14.2\mingw73_64\bin\windeployqt.exe HelloWorld.exe</span><br></pre></td></tr></table></figure></div>
<p>慢慢等待打包完成。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/10_finish.jpg" alt="打包完成"><figcaption>打包完成</figcaption></figure></p>
<p>之后就可以直接打开软件工作目录下的exe执行。</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>Qt</tag>
      </tags>
  </entry>
  <entry>
    <title>Visual Studio2022的C++项目打包成软件记录</title>
    <url>/%E6%97%A5%E5%B8%B8/11/</url>
    <content><![CDATA[<p>介绍如何将VS的C++项目打包</p>
<p>关键词：C++</p>
<span id="more"></span>
<hr>
<!-- toc -->
<h1>1.编译出.exe文件</h1>
<p>选择Release生成，我在此是<code>Realease x64</code>编译。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/11_vs.jpg" alt="编译"><figcaption>编译</figcaption></figure></p>
<h1>2.打包项目</h1>
<p>将刚才构建出来的.exe文件复制到一个新的文件夹（目录尽量不带中文），该目录作为软件的工作目录。比如我复制到F:\test\HelloWorld1.0，软件工作目录就是这个文件夹，test目录下的一个新建文件夹。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/11_exe.jpg" alt="软件工作目录"><figcaption>软件工作目录</figcaption></figure></p>
<p>打开Visual Studio的安装目录，找到<code>dumpbin.exe</code>并复制其路径，可以按照下面的路径查找：<br>
<code>E:\Microsoft_Visual_Studio\VS\VC\Tools\MSVC\14.36.32532\bin\Hostx64\x64</code></p>
<p>回到软件工作目录，在地址栏输入cmd打开命令提示符，按格式输入：<br>
<code>dumpbin.exe路径 /dependents 发布软件的路径</code></p>
<p>如：</p>
<div class="highlight-container" data-rel="Cmd"><figure class="iseeu highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">E:\<span class="title">Microsoft_Visual_Studio</span>\<span class="title">VS</span>\<span class="title">VC</span>\<span class="title">Tools</span>\<span class="title">MSVC</span>\14.36.32532\<span class="title">bin</span>\<span class="title">Hostx64</span>\<span class="title">x64</span>\<span class="title">dumpbin.exe</span> /<span class="title">dependents</span> <span class="title">HelloWorld.exe</span></span></span><br></pre></td></tr></table></figure></div>
<p>接着将出现的.dll文件找出来，推荐使用<a class="link" href="https://www.voidtools.com/zh-cn/downloads/">Everything软件 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>搜索，选择路径上对应的平台（x86或x64），复制到软件的工作目录即可。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/11_dependents.jpg" alt="软件依赖"><figcaption>软件依赖</figcaption></figure></p>
<p>如图：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/11_last.jpg" alt="完整的软件工作目录"><figcaption>完整的软件工作目录</figcaption></figure></p>
<p>这样即可直接点击.exe文件运行。</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>Python源代码打包成.exe文件记录</title>
    <url>/%E6%97%A5%E5%B8%B8/12/</url>
    <content><![CDATA[<p>使用auto-py-to-exe将.py打包成.exe</p>
<p>关键词：Python</p>
<span id="more"></span>
<hr>
<!-- toc -->
<h1>安装auto-py-to-exe</h1>
<p>打开cmd命令提示符，输入：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">pip install auto-py-to-exe</span><br></pre></td></tr></table></figure></div>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/12_download.jpg" alt="下载auto-py-to-exe"><figcaption>下载auto-py-to-exe</figcaption></figure></p>
<p>等待下载完成……</p>
<h1>使用auto-py-to-exe</h1>
<p>下载安装完成后，选择文件夹作为输出文件夹，我的选择的路径为 <code>F:\</code>，在此路径打开cmd命令提示符或者通过cmd命令进入到该路径。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/12_cmd.jpg" alt="cmd窗口"><figcaption>cmd窗口</figcaption></figure></p>
<p>输入：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">auto-py-to-exe</span><br></pre></td></tr></table></figure></div>
<p>即可打开打包窗口。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/12_use.jpg" alt="打包窗口"><figcaption>打包窗口</figcaption></figure></p>
<ul>
<li>
<p>脚本位置：选择需要打包的.py文件</p>
</li>
<li>
<p>单文件/单目录：选择打包的形式，选择将依赖整体打包成一个.exe还是依赖库分离+.exe文件</p>
</li>
<li>
<p>控制台窗口：自行选择</p>
</li>
<li>
<p>图标、附加文件、高级、设置：自行选择</p>
</li>
</ul>
<p>我的打包结果：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/12_result.jpg" alt="单文件打包结果"><figcaption>单文件打包结果</figcaption></figure></p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/12_result1.jpg" alt="单目录打包结果"><figcaption>单目录打包结果</figcaption></figure></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>如何暂停Windows的系统升级</title>
    <url>/%E6%97%A5%E5%B8%B8/13/</url>
    <content><![CDATA[<p>关闭Windows的自动更新</p>
<p>关键词：Windows</p>
<span id="more"></span>
<hr>
<!-- toc -->
<h1>1.修改注册表编辑器</h1>
<p>按住 <code>Win</code> + <code>R</code> 输入 <code>regedit</code> 进入注册表编辑器。</p>
<p>找到 <code>HKEY_LOCAL_MACHINE → SOFTWARE → Microsoft → WindowsUpdate → UX → Settings</code></p>
<p>点击右边空白处，选择新建DWORD（32位）值，重命名为 <code>FlightSettingsMaxPauseDays</code> ，</p>
<p>双击打开，选择十进制，输入想要暂停的最大天数，我这里输入 <code>8888</code> 。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/13_1.jpg" alt="添加新项"><figcaption>添加新项</figcaption></figure></p>
<h1>2.打开系统设置</h1>
<p>按住 <code>Win</code> + <code>I</code> 打开系统设置，搜索 <code>Windows更新</code> ，进入Windows更新设置，在暂停更新处选择最大值即可。</p>
<p>Windows 10的暂停更新在 <code>Windows 更新设置 → 高级选项 → 暂停更新</code></p>
<p>效果如图：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/13_2.jpg" alt="暂停8888天"><figcaption>暂停8888天</figcaption></figure></p>
<h1>3.恢复更新</h1>
<p>直接点击继续更新即可。</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Qt的安装记录</title>
    <url>/%E6%97%A5%E5%B8%B8/14/</url>
    <content><![CDATA[<p>Qt（C++）和pyQt的安装记录</p>
<p>关键词：Qt</p>
<span id="more"></span>
<hr>
<!-- toc -->
<h1>Qt（C plus plus）</h1>
<ul>
<li>
<p><a class="link" href="https://www.qt.io/offline-installers">开源版离线官网下载 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</li>
<li>
<p><a class="link" href="https://mirrors.tuna.tsinghua.edu.cn/qt/archive/">清华镜像下载 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</li>
</ul>
<h1>Qt（Python）</h1>
<p>参考<a class="link" href="https://zhuanlan.zhihu.com/p/162866700">此篇文章 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<ol>
<li>下载PyQt5</li>
</ol>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">pip install PyQt5</span><br></pre></td></tr></table></figure></div>
<p>网络不好的可选择豆瓣的镜像：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">pip install PyQt5 -i https://pypi.douban.com/simple</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>下载PyQt5-tools</li>
</ol>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">pip install PyQt5-tools</span><br></pre></td></tr></table></figure></div>
<p>网络不好的可选择豆瓣的镜像：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">pip install PyQt5-tools -i https://pypi.douban.com/simple</span><br></pre></td></tr></table></figure></div>
<p>PyQt 5.15.x 之前，安装完成后在 <code>%Python_path%\Lib\site-packages</code> 目录中可以看到PyQt5、pyqt5-tools、PyQt5-sip 目录。</p>
<p>PyQt 5.15.x 之后，安装完成后在 <code>%Python_path%\Lib\site-packages</code> 目录中可以看到PyQt5、pyqt5-tools、PyQt5-sip 以及多了的 qt_applications 、qt5-tools 目录。</p>
<ol start="3">
<li>添加环境变量</li>
</ol>
<p>在系统变量Path中添加 <code>pyqt5-tools</code> 目录的绝对路径。</p>
<ol start="4">
<li>验证</li>
</ol>
<p>运行下面代码，出现窗口即为成功。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QWidget, QApplication</span><br><span class="line"></span><br><span class="line">app = QApplication(sys.argv)</span><br><span class="line">widget = QWidget()</span><br><span class="line">widget.resize(<span class="number">640</span>, <span class="number">480</span>)</span><br><span class="line">widget.setWindowTitle(<span class="string">&quot;Hello, PyQt5!&quot;</span>)</span><br><span class="line">widget.show()</span><br><span class="line">sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure></div>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>Qt</tag>
      </tags>
  </entry>
  <entry>
    <title>利用Ping指令进行基本网络检测</title>
    <url>/%E6%97%A5%E5%B8%B8/15/</url>
    <content><![CDATA[<p>利用Ping指令对本地IP、网关和远程网站等进行基本网络检测</p>
<p>关键词：网络</p>
<span id="more"></span>
<hr>
<h1>测试TCP/IP协议栈</h1>
<div class="highlight-container" data-rel="Cmd"><figure class="iseeu highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ping</span> <span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span></span><br></pre></td></tr></table></figure></div>
<p><code>127.0.0.1</code> 是你本地主机的环回地址，实际上只要是 <code>127.0.0.1</code> 到 <code>127.255.255.254</code> 都是本地主机环回地址。</p>
<ul>
<li>作用：用于检查本地主机TCP/IP协议栈是否正常。</li>
</ul>
<h1>测试本地网卡</h1>
<p>打开cmd（命令提示符），输入：</p>
<div class="highlight-container" data-rel="Cmd"><figure class="iseeu highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ipconfig</span></span><br></pre></td></tr></table></figure></div>
<p>记住自己的本地ip，接着输入：</p>
<div class="highlight-container" data-rel="Cmd"><figure class="iseeu highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ping</span> [本地ip]</span><br></pre></td></tr></table></figure></div>
<ul>
<li>作用：用于检查本地网卡工作是否正常。</li>
</ul>
<h1>测试与网关的链路</h1>
<p>打开cmd（命令提示符），输入：</p>
<div class="highlight-container" data-rel="Cmd"><figure class="iseeu highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ipconfig</span></span><br></pre></td></tr></table></figure></div>
<p>记住自己的默认网关，接着输入：</p>
<div class="highlight-container" data-rel="Cmd"><figure class="iseeu highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ping</span> [默认网关]</span><br></pre></td></tr></table></figure></div>
<ul>
<li>用于检查本地主机与网关的链路是否正常。</li>
</ul>
<h1>测试与外网远程网站的链路</h1>
<p>以连通百度网站为测试：</p>
<p>打开cmd（命令提示符），输入：</p>
<div class="highlight-container" data-rel="Cmd"><figure class="iseeu highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ping</span> www.baidu.com</span><br></pre></td></tr></table></figure></div>
<ul>
<li>用于检查本地主机与外网远程网站的链路是否正常。</li>
</ul>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title>Qt for Android配置记录</title>
    <url>/%E6%97%A5%E5%B8%B8/16/</url>
    <content><![CDATA[<p>关键词：Qt、C++、Android</p>
<span id="more"></span>
<hr>
<h1>前言</h1>
<p>一开始想着弄个安卓软件玩玩，但是不想学 Java，于是乎发现了 Qt for Android。</p>
<h1>配置过程</h1>
<h2 id="前期准备">前期准备</h2>
<p>使用的是 Qt6.5.3 的 Android 组件。</p>
<p><em>我尝试过使用 Qt6.6.1 和 Qt5.15.2 的 Android 组件，但不成功，原因未知。</em></p>
<p><figure class="image-caption"><img src="https://fblog-1257020106.cos.ap-shanghai.myqcloud.com/imgs/16_qtversion.jpg" alt="Qt Version"><figcaption>Qt Version</figcaption></figure></p>
<p>Java 方面，JDK 使用 Java 17，<a class="link" href="https://www.oracle.com/cn/java/technologies/downloads/#java17">下载地址 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>这里简单说一下 JDK、SDK 和 NDK：</p>
<ul>
<li>JDK：Java Development Kit，是整个Java的核心，其中包括Java编译器、Java运行工具、Java文档生成工具、Java打包工具等</li>
<li>SDK：Software Development Kit，软件开发工具包</li>
<li>NDK：Native Development Kit，是 Android 的一个工具开发包</li>
</ul>
<h2 id="创建-qt-android-项目">创建 Qt Android 项目</h2>
<h3 id="1-新建项目">1.新建项目</h3>
<p>像之前一样正常新建项目</p>
<p><figure class="image-caption"><img src="https://fblog-1257020106.cos.ap-shanghai.myqcloud.com/imgs/16_step1.jpg" alt="新建项目"><figcaption>新建项目</figcaption></figure></p>
<h3 id="2-选择安卓构建开发">2.选择安卓构建开发</h3>
<p><figure class="image-caption"><img src="https://fblog-1257020106.cos.ap-shanghai.myqcloud.com/imgs/16_step2.jpg" alt="安卓编译"><figcaption>安卓编译</figcaption></figure></p>
<p>点击管理，可以进入设置页面。设置好 JDK 路径 和 SDK 路径。</p>
<p><figure class="image-caption"><img src="https://fblog-1257020106.cos.ap-shanghai.myqcloud.com/imgs/16_step3.jpg" alt="设置SDK"><figcaption>设置SDK</figcaption></figure></p>
<p>可能还需下载配置安卓 OpenSSL。</p>
<p>设置完成如下图：</p>
<p><figure class="image-caption"><img src="https://fblog-1257020106.cos.ap-shanghai.myqcloud.com/imgs/16_step4.jpg" alt="设置完成"><figcaption>设置完成</figcaption></figure></p>
<h3 id="3-正常项目开发">3.正常项目开发</h3>
<p>完成设置后进入项目，可以进行代码编写和界面设计</p>
<p><figure class="image-caption"><img src="https://fblog-1257020106.cos.ap-shanghai.myqcloud.com/imgs/16_step5.jpg" alt="页面设计"><figcaption>页面设计</figcaption></figure></p>
<p>release下需要生成 apk 签名：</p>
<p><figure class="image-caption"><img src="https://fblog-1257020106.cos.ap-shanghai.myqcloud.com/imgs/16_step6.jpg" alt="签名填写"><figcaption>签名填写</figcaption></figure></p>
<h3 id="4-效果展示">4.效果展示</h3>
<p>编译并连接手机运行，手机打开开发者选项，进入 USB 调试，打开 USB 安装功能（建议打开文件传输功能）。编译过程比较漫长。</p>
<p><figure class="image-caption"><img src="https://fblog-1257020106.cos.ap-shanghai.myqcloud.com/imgs/16_screenshot.jpg" alt="运行效果"><figcaption>运行效果</figcaption></figure></p>
<h1>问题汇总</h1>
<ol>
<li>编译时下载 gradle 卡住超时退出。</li>
</ol>
<p><figure class="image-caption"><img src="https://fblog-1257020106.cos.ap-shanghai.myqcloud.com/imgs/16_problem1.jpg" alt="下载超时"><figcaption>下载超时</figcaption></figure></p>
<ul>
<li>解决办法：找到 <code>..\build-demo-Qt_6_5_3_Clang_arm64_v8a-Debug\android-build\gradle\wrapper</code> 目录下的 <code>gradle-wrapper.properties</code>，使用记事本打开，修改为 <code>distributionUrl=https://mirrors.cloud.tencent.com/gradle/gradle-8.0-bin.zip</code>，然后继续编译生成。</li>
</ul>
<ol start="2">
<li>出现红色报错 <font color="red">Failure [INSTALL_FAILED_USER_RESTRICTED: Install canceled by user]</font>。</li>
</ol>
<ul>
<li>解决办法：确认手机是否进入 USB 调试模式，且打开 USB 安装。</li>
</ul>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>Qt</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>记录Keil_C51和Keil_MDK的安装</title>
    <url>/%E6%97%A5%E5%B8%B8/2/</url>
    <content><![CDATA[<p>介绍Keil_C51和Keil_MDK的安装</p>
<p>关键词：Keil</p>
<span id="more"></span>
<hr>
<!-- toc -->
<h1>什么是Keil C51和Keil MDK</h1>
<ul>
<li>
<p>Keil是一家公司名称，也是一款软件名称。Keil 有四大软件（IDE），包括 MDK、C51、C251、C166。</p>
</li>
<li>
<p>Keil C51和MDK是针对不同类型MCU的两款集成开发工具。</p>
</li>
</ul>
<h1>Keil C51</h1>
<h2 id="下载安装程序">下载安装程序</h2>
<p><a class="link" href="https://www.keil.com/download/product/">Keil官网下载 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="安装过程">安装过程</h2>
<p>像正常软件安装一样，按需要更改安装的磁盘，建立新的文件夹空间安装，个人信息随便填，等待安装完成。</p>
<p>此次我安装路径设置为<code>G:\Keil_C51</code>中。</p>
<h2 id="启动软件">启动软件</h2>
<p>UV4可执行文件位于：<code>G:\Keil_C51\UV4</code></p>
<h1>Keil MDK</h1>
<h2 id="下载安装程序">下载安装程序</h2>
<p><a class="link" href="https://www.keil.com/download/product/">Keil官网下载 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="安装过程">安装过程</h2>
<p>像正常软件安装一样，按需要更改安装的磁盘，建立新的文件夹空间安装本体和Pack文件，个人信息随便填，等待安装完成。</p>
<p>此次我将本体路径设置为<code>G:\Keil_MDK</code>中，Pack路径设置为<code>G:\Keil_MDK\</code>。</p>
<h2 id="启动软件">启动软件</h2>
<p>UV4可执行文件位于：<code>G:\Keil_MDK\UV4</code></p>
<h1>Keil Key Generator</h1>
<p><a class="link" href="https://blog.csdn.net/qq_22329595/article/details/108703002">参考此博客 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>Keil</tag>
      </tags>
  </entry>
  <entry>
    <title>使用阿里云对象存储OSS实现图床</title>
    <url>/%E6%97%A5%E5%B8%B8/3/</url>
    <content><![CDATA[<p>注册登录阿里云👉开启对象存储👉配置Key👉放心上传</p>
<p>关键词：对象存储OSS</p>
<span id="more"></span>
<hr>
<!-- toc -->
<h1>1.什么是图床</h1>
<p>图床是一种概念，顾名思义用于网络上存放图片。当网站图片过多时，整个网站的存储大小会变得较大，负担也变得较大。为了减轻负担，可以选择把图片置于一种存储容器（图床）中，之后显示图片就只需引用网络链接即可。</p>
<h1>2.开启对象存储服务</h1>
<p>进入<a class="link" href="https://cn.aliyun.com/">阿里云官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，点击右上角控制台，搜索对象存储OSS。</p>
<p><figure class="image-caption"><img src="https://fblog-1257020106.cos.ap-shanghai.myqcloud.com/imgs/3_1.png" alt="阿里云页面"><figcaption>阿里云页面</figcaption></figure></p>
<p>选择创建Bucket，设置建议如下：</p>
<ul>
<li>Bucket名称：自定义</li>
<li>地域：选择距离自己较近的</li>
<li>存储类型：默认不动</li>
<li>存储荣誉类型：默认不动</li>
<li>读写权限：公共读</li>
</ul>
<p>创建成功后可在Bucket列表查看。</p>
<h1>3.使用PicGo工具进行图片上传</h1>
<p><a class="link" href="https://picgo.github.io/PicGo-Doc/zh/guide/">下载地址 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>下载后选择合适的盘符安装，打开软件。<br>
初始时可能不显示界面，需要去系统任务栏右键软件图标，选择打开主窗口。</p>
<p><figure class="image-caption"><img src="https://fblog-1257020106.cos.ap-shanghai.myqcloud.com/imgs/3_2.png" alt="软件打开"><figcaption>软件打开</figcaption></figure></p>
<p>接着选择图床设置，此处使用阿里云OSS。</p>
<p>回到阿里云OSS控制台，移动至右上角悬浮，点击AccessKey管理。创建一个新AccessKey，复制并粘贴到PicGo中。</p>
<p>配置参数建议如下：</p>
<ul>
<li>设定KeyID：AccessKey中复制得来</li>
<li>设定KeySecret：AccessKey中复制得来</li>
<li>设定Bucket：你Bucket得名字</li>
<li>设定存储区域：OSS选择的地域</li>
<li>设定存储路径：图片上传至OSS的文件夹或路径</li>
</ul>
<p><figure class="image-caption"><img src="https://fblog-1257020106.cos.ap-shanghai.myqcloud.com/imgs/3_3.png" alt="配置Key"><figcaption>配置Key</figcaption></figure></p>
<p>配置完成后即可上传图片，在PicGo的相册中可以获得图片的连接，可在HTML或者Markdown等文件中调用。</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>对象存储OSS</tag>
      </tags>
  </entry>
  <entry>
    <title>C++报错：表达式必须含有常量值</title>
    <url>/%E6%97%A5%E5%B8%B8/6/</url>
    <content><![CDATA[<p>关于在Visual Studio 2022使用C++ 20语法的表达式开辟数组空间报错</p>
<p>关键词：C++</p>
<span id="more"></span>
<hr>
<!-- toc -->
<h1>错误原因</h1>
<ol>
<li>
<p>c++中不允许使用变量作为数组的长度定义数组，必须为常量值，c++中所有的内存需求都是在程序执行前通过定义的常量来确定的。</p>
</li>
<li>
<p>声明为const或constexpr的表达式在编译时计算结果不是常数。</p>
</li>
<li>
<p>编译器必须能够在表达式被使用时确定表达式的值。</p>
</li>
</ol>
<h1>错误示例</h1>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//错误示范1</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">3</span>, b = <span class="number">4</span>, c = <span class="number">5</span>;</span><br><span class="line">	<span class="type">int</span> d[a * b * c]; <span class="comment">// error</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//错误示范2</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">3</span>, b = <span class="number">4</span>, c = <span class="number">5</span>;</span><br><span class="line">	<span class="type">const</span> <span class="type">int</span> tmp = a * b * c;</span><br><span class="line">	<span class="type">int</span> d[tmp]; <span class="comment">// error，如错误原因2</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//错误示范3</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">test</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">const</span> <span class="type">int</span> array_size; <span class="comment">// error</span></span><br><span class="line">    <span class="type">int</span> size_array[array_size];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> test::array_size = <span class="number">42</span>;</span><br></pre></td></tr></table></figure></div>
<h1>解决方案</h1>
<p>使用<code>new</code>进行动态内存分配，<strong>记得通过<code>delete</code>回收分配的内存</strong>，如上述代码改为：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">3</span>, b = <span class="number">4</span>, c = <span class="number">5</span>;</span><br><span class="line">	<span class="type">int</span> *d = <span class="keyword">new</span> <span class="type">int</span>[a * b * c];</span><br><span class="line">	<span class="keyword">delete</span>[] d;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>关于new分配内存的使用：</p>
<ol>
<li>单变量分配</li>
</ol>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">Type *p = <span class="keyword">new</span> Type;</span><br><span class="line"><span class="keyword">delete</span> p;</span><br><span class="line"></span><br><span class="line">Type *p = <span class="keyword">new</span> <span class="built_in">Type</span>(<span class="number">2</span>); <span class="comment">//动态分配内存并初始化</span></span><br><span class="line"><span class="keyword">delete</span> p;</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>一维数组申请</li>
</ol>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">Type *p = <span class="keyword">new</span> Type[n];</span><br><span class="line"><span class="keyword">delete</span>[] p;</span><br><span class="line"></span><br><span class="line">Type *p = <span class="keyword">new</span> Type[n]();<span class="comment">//动态分配内存并初始化全部为0</span></span><br><span class="line"><span class="keyword">delete</span>[] p;</span><br></pre></td></tr></table></figure></div>
<ol start="3">
<li>二维数组申请</li>
</ol>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">Type **p = <span class="keyword">new</span> Type *[m];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; ++i)</span><br><span class="line">&#123;</span><br><span class="line">	p[i] = <span class="keyword">new</span> Type[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建一个自己的简单博客</title>
    <url>/%E6%97%A5%E5%B8%B8/4/</url>
    <content><![CDATA[<p>简单几步，基于Hexo搭建一个属于自己的简单博客</p>
<p>关键词：Hexo、博客</p>
<span id="more"></span>
<hr>
<!-- toc -->
<h1>工具准备</h1>
<h2 id="1-nodejs">1. Nodejs</h2>
<p>Nodejs简单来说就是运行在服务端的JavaScript，博客交互需要用到Nodejs。</p>
<p><figure class="image-caption"><img src="https://fblog-1257020106.cos.ap-shanghai.myqcloud.com/imgs/4_NodejsDonwload.png" alt="Nodejs下载页面"><figcaption>Nodejs下载页面</figcaption></figure></p>
<p>选择合适的软件版本下载，<a class="link" href="https://nodejs.cn/download/">下载地址：https://nodejs.cn/download/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>下载完成后按正常流程安装，可安装在非系统盘，记得选择“Add to PATH”配置PATH环境变量。我的Nodejs安装在<code>E:\Nodejs</code>中。</p>
<p><figure class="image-caption"><img src="https://fblog-1257020106.cos.ap-shanghai.myqcloud.com/imgs/4_Node.png" alt="选择"><figcaption>选择</figcaption></figure></p>
<p>注：为了软件安装简洁可控，还需要对Nodejs的内容（Cache和global）进行规划，具体可参考<a class="link" href="https://juejin.cn/post/7227434605392642104">nodejs的安装及详细环境配置 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>或<a class="link" href="https://blog.csdn.net/Ouchieve_111/article/details/70878090">修改项目默认node_modules路径 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>或<a class="link" href="https://blog.csdn.net/scorpio_meng/article/details/83314675">node安装后的设置(node_global和node_cache) - windows <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，或自行搜索。</p>
<h2 id="2-git">2. Git</h2>
<p>Git是一个分布式版本控制系统，简单理解为它可以帮助我们管理文件各种版本，博客的更新之类的。</p>
<p><a class="link" href="https://git-scm.com/">下载地址：https://git-scm.com/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>下载完成后按正常流程安装，可安装在非系统盘，其他选项可以保持默认。我的Git安装在<code>E:\Git</code>中。</p>
<h2 id="3-验证nodejs是否安装成功">3. 验证Nodejs是否安装成功</h2>
<p>在桌面鼠标右键，选择菜单中的Git Bash Here。</p>
<p><figure class="image-caption"><img src="https://fblog-1257020106.cos.ap-shanghai.myqcloud.com/imgs/4_%E5%8F%B3%E9%94%AE.jpg" alt="右键菜单"><figcaption>右键菜单</figcaption></figure></p>
<p>在弹出的窗口中输入以下指令</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure></div>
<p>若出现了对应的版本号，则说明安装成功。若不出现版本号，则检查Nodejs的安装过程，或者必应搜索相关帮助。</p>
<p><figure class="image-caption"><img src="https://fblog-1257020106.cos.ap-shanghai.myqcloud.com/imgs/4_%E9%AA%8C%E8%AF%81.png" alt="验证Nodejs安装"><figcaption>验证Nodejs安装</figcaption></figure></p>
<h2 id="4-cnpm">4. cnpm</h2>
<p>上面的<code>npm -v</code>查看了npm的版本，可以简单理解为npm是一种下载工具。而npm下载一般是通过国外网络下载，速度比较慢。因此需要先通过npm安装cnpm（国内下载），之后就是用cnpm代替npm。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></div>
<p>通过查询版本号验证是否安装成功。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">cnpm -v</span><br></pre></td></tr></table></figure></div>
<h1>安装Hexo</h1>
<p>Hexo是一种博客框架，通过它可以将简单的Markdown语言转化为带装饰的网页。</p>
<p>通过下面命令安装Hexo。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">cnpm install hexo-cli -g</span><br></pre></td></tr></table></figure></div>
<p>也可以通过查询版本号确认Hexo是否安装成功。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">hexo -V</span><br></pre></td></tr></table></figure></div>
<p>Hexo的常用命令：<code>hexo -s</code>本地查看博客，<code>hexo g</code>生成博客，<code>hexo clean</code>删除当前博客所有网页页面。</p>
<h1>开始建造你的博客</h1>
<h2 id="1-创建一个新的文件夹-尽量不再移动">1. 创建一个新的文件夹，尽量不再移动。</h2>
<p>如我在F盘创建了一个文件夹叫<code>15.Blog</code>，就在15.Blog文件夹下右键选择Git Bash。</p>
<p><img src="https://fblog-1257020106.cos.ap-shanghai.myqcloud.com/imgs/4_%E5%8D%9A%E5%AE%A21.png" alt></p>
<h2 id="2-初始化博客">2. 初始化博客</h2>
<p>在窗口中输入命令，等待完成。（如果运行至<code>Install dependencies</code>卡住，可以<code>Ctrl + C</code>结束命令）</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure></div>
<h2 id="3-查看博客">3. 查看博客</h2>
<p>在窗口中输入命令，查看博客的初始页面。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></div>
<h2 id="4-给博客下载主题-next">4. 给博客下载主题——Next</h2>
<p>点击<a class="link" href="https://hexo.io/themes/">此处 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>寻找合适的主题，以Next为例，因为该主题基础、自定义程度高。</p>
<p>可以用git指令将Github的主题压缩包下载到博客的<code>themes/</code>文件夹中：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> 复制的地址 themes/主题名字</span><br></pre></td></tr></table></figure></div>
<p>上面指令意思是将指定地址的内容克隆到本地<code>themes/</code>文件夹并命名为指定名字。<br>
也可以直接下载压缩包粘贴至<code>themes/</code>文件夹中。</p>
<h2 id="5-修改配置文件">5. 修改配置文件</h2>
<p>在博客的根目录中有一个名为<code>_config</code>的文本文件，在主题目录也有一个名为<code>_config</code>的文本文件，此处做区分，前者为博客配置文件，后者为主题配置文件。</p>
<p>打开博客配置文件，可以根据<a class="link" href="https://hexo.io/zh-cn/docs/configuration">官方配置介绍 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>进行修改个性化博客。<br>
将博客配置文件中<code>themes</code>一行填入刚下载的next主题，即可使用该主题。在博客目录打开Git Bash，输入<code>hexo s</code>可以查看博客。</p>
<p>注意：有些主题你更换之后是暂时无法预览的，因为有的主题还需要安装它需要的依赖。</p>
<h1>编写你的第一条博客</h1>
<p>在博客根目录打开Git Bash，输入下面的指令即可创建文章。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;文章名字&quot;</span></span><br></pre></td></tr></table></figure></div>
<p>每次生成的文章都固定在你的博客根目录下面的<code>source/_posts</code>下，并以Markdown文件形式编写保存。</p>
<h1>部署你的博客到Github</h1>
<p>首先需要有一个Github账号，并且新建仓库名为<code>用户名+.github.io</code>。</p>
<p>接着需要进行一系列的密钥绑定：</p>
<h2 id="1-在博客根目录打开git-bash-输入下面的命令-接着会出现你的密钥">1. 在博客根目录打开Git Bash，输入下面的命令，接着会出现你的密钥。</h2>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C “your_email@youremail.com“</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></div>
<h2 id="2-在github页面点击头像-settings-ssh-and-gpg-keys-new-ssh-key-接着把密钥复制上去">2. 在Github页面点击头像-&gt;Settings-&gt;SSH and GPG keys-&gt;New SSH key，接着把密钥复制上去。</h2>
<h2 id="3-再在git-bash中执行下面命令">3. 再在Git Bash中执行下面命令。</h2>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></div>
<p>接着提示<code>Are you sure you want to continue connecting (yes/no/[fingerprint])? </code>，输入yes回车即可。</p>
<h2 id="4-点击项目仓库-在左上角的clone-or-download中点击use-ssh-复制git开头的地址">4. 点击项目仓库，在左上角的Clone or download中点击Use SSH，复制git开头的地址。</h2>
<h2 id="5-打开博客配置文件-找到deploy一行-按照下面的指示修改">5. 打开博客配置文件，找到deploy一行，按照下面的指示修改。</h2>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">	type: git</span><br><span class="line">	repo: 复制到的地址</span><br><span class="line">	branch: master</span><br></pre></td></tr></table></figure></div>
<h2 id="6-在博客根目录打开git-bash-分别执行下列命令">6. 在博客根目录打开Git Bash，分别执行下列命令。</h2>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;yourname&quot;</span></span><br><span class="line"></span><br><span class="line">git config --global user.email <span class="string">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure></div>
<h2 id="7-安装上传插件">7. 安装上传插件。</h2>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">cnpm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></div>
<h2 id="8-使用下面指令上传博客">8. 使用下面指令上传博客。</h2>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure></div>
<h2 id="9-打开项目仓库-选择上方的settings-找到pages-在source处选择deploy-from-a-branch-之后就会出现一个网站地址-便是博客地址">9. 打开项目仓库，选择上方的Settings，找到Pages，在Source处选择Deploy from a branch。之后就会出现一个网站地址，便是博客地址。</h2>
<h1>注</h1>
<p>如有纰漏，可同步参考<a class="link" href="https://www.cnblogs.com/huanhao/p/hexobase.html">此篇博客 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>或自行搜索他人教程相互参考。</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 10下安装CUDA、TensorRT记录</title>
    <url>/%E6%97%A5%E5%B8%B8/5/</url>
    <content><![CDATA[<p>GPU：NVIDIA GeFOrce GTX 1050</p>
<p>关键词：深度学习、YOLOv5、TensorRT、C++推演</p>
<span id="more"></span>
<hr>
<!-- toc -->
<h1>一、下载CUDA</h1>
<h2 id="1-确定适配本机显卡驱动的cuda版本">1.确定适配本机显卡驱动的CUDA版本</h2>
<p>系统搜索打开NVIDIA控制面板，点击帮助，选择系统信息-&gt;组件，找到CUDA字样。此处我的CUDA适配版本为<code>12.0</code>。</p>
<p><figure class="image-caption"><img src="https://fblog-1257020106.cos.ap-shanghai.myqcloud.com/imgs/5_CUDA%E7%89%88%E6%9C%AC.jpg" alt="CUDA版本查看"><figcaption>CUDA版本查看</figcaption></figure></p>
<h2 id="2-下载对应版本的cuda">2.下载对应版本的CUDA</h2>
<p><a class="link" href="https://developer.nvidia.com/cuda-toolkit-archive">下载地址 - NVIDIA官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="3-安装cuda">3.安装CUDA</h2>
<p>点击下载的安装exe文件，可以更改文件安装位置，记住文件安装位置。此处我的安装位置是<code>G:\NVIDIA_GPU_Computing_Toolkit_CUDA_v12.0</code>。</p>
<h1>二、下载cuDNN包</h1>
<h2 id="1-选择适配cuda的版本下载对应的cudnn包">1.选择适配CUDA的版本下载对应的cuDNN包</h2>
<p><a class="link" href="https://developer.nvidia.com/rdp/cudnn-archive">下载地址 - NVIDIA官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="2-选择合适的位置解压cudnn压缩包">2.选择合适的位置解压cuDNN压缩包</h2>
<p><figure class="image-caption"><img src="https://fblog-1257020106.cos.ap-shanghai.myqcloud.com/imgs/5_cuDNN.jpg" alt="解压cuDNN后的文件"><figcaption>解压cuDNN后的文件</figcaption></figure></p>
<h2 id="3-复制文件">3.复制文件</h2>
<p>cuDNN属于是CUDA的一个补丁包，因此无需安装。需要将<code>bin</code>、<code>include</code>、<code>lib</code>文件夹中的相关文件拷贝到CUDA安装位置的<code>bin</code>、<code>include</code>、<code>lib的x64</code>文件夹中。</p>
<p>我的CUDA安装位置是：<code>G:\NVIDIA_GPU_Computing_Toolkit_CUDA_v12.0</code>。</p>
<h2 id="4-验证是否成功">4.验证是否成功</h2>
<p><code>Win + R</code>输入cmd打开cmd窗口。<br>
直接输入盘符如<code>F:</code>跳转到F盘，<code>cd</code>进入到具体地址。<br>
比如我的CUDA安装在<code>G:\NVIDIA_GPU_Computing_Toolkit_CUDA_v12.0</code>，<br>
那么进入到<code>G:\NVIDIA_GPU_Computing_Toolkit_CUDA_v12.0\extras\demo_suite</code></p>
<p>接着在cmd窗口输入下面的指令分别运行两个exe文件，结果出现PASS（如图）则验证成功。</p>
<div class="highlight-container" data-rel="Cmd"><figure class="iseeu highlight cmd"><table><tr><td class="code"><pre><span class="line">bandwidthTest.exe</span><br></pre></td></tr></table></figure></div>
<p><figure class="image-caption"><img src="https://fblog-1257020106.cos.ap-shanghai.myqcloud.com/imgs/5_cuDNN%E9%AA%8C%E8%AF%81.jpg" alt="第一个exe运行结果"><figcaption>第一个exe运行结果</figcaption></figure></p>
<div class="highlight-container" data-rel="Cmd"><figure class="iseeu highlight cmd"><table><tr><td class="code"><pre><span class="line">deviceQuery.exe</span><br></pre></td></tr></table></figure></div>
<p><figure class="image-caption"><img src="https://fblog-1257020106.cos.ap-shanghai.myqcloud.com/imgs/5_cuDNN%E9%AA%8C%E8%AF%812.jpg" alt="第二个exe运行结果"><figcaption>第二个exe运行结果</figcaption></figure></p>
<h1>三、下载TensorRT包</h1>
<h2 id="1-选择适配cuda版本的tensorrt包下载">1.选择适配CUDA版本的TensorRT包下载</h2>
<p>进入<a class="link" href="https://developer.nvidia.com/nvidia-tensorrt-download">官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，选择较新的大版本，再选择适合自己安装的CUDA版本下载。</p>
<p>我在此处下载Windows的支持CUDA12.0的版本。</p>
<h2 id="2-选择合适的位置解压tensorrt压缩包">2.选择合适的位置解压TensorRT压缩包</h2>
<p><figure class="image-caption"><img src="https://fblog-1257020106.cos.ap-shanghai.myqcloud.com/imgs/5_TensorRT.jpg" alt="解压TensorRT后的文件"><figcaption>解压TensorRT后的文件</figcaption></figure></p>
<h2 id="3-安装tensorrt">3.安装TensorRT</h2>
<ul>
<li>将TensorRT的<code>include</code>文件夹中文件复制到CUDA安装位置的<code>include</code>文件夹。</li>
</ul>
<p>我的操作是：<code>copy \TensorRT-8.6.1.6\include → NVIDIA_GPU_Computing_Toolkit_CUDA_v12.0\include</code></p>
<ul>
<li>
<p>将TensorRT的<code>lib</code>中所有lib文件复制到CUDA安装位置的<code>lib\x64</code>文件夹</p>
</li>
<li>
<p>将TensorRT的<code>lib</code>中所有dll文件复制到CUDA安装位置的<code>bin</code>文件夹</p>
</li>
</ul>
<h2 id="4-验证tensort">4.验证TensoRT</h2>
<p>检查系统环境变量中是否有包含了CUDA的bin文件夹，没有则添加。</p>
<p>使用Visual Studio打开sampleMNIST示例，即打开<code>../TensorRT-8.6.1.6\samples\sampleOnnxMNIST</code>文件夹中的sln文件，必要时对项目属性的常规、VC++目录、C/C++里面的环境进行配置，添加依赖。<a class="link" href="https://blog.csdn.net/shanglianlm/article/details/92847719">参考 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>右键项目，点击重新生成。可以点击不调试运行测试。</p>
<h1>参考</h1>
<p><a class="link" href="https://blog.csdn.net/shanglianlm/article/details/92847719">TensorRT之安装与测试（Windows和Linux环境下安装TensorRT） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link" href="https://zhuanlan.zhihu.com/p/305854081">Window下Python+CUDA+PyTorch安装 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>YOLOv5</tag>
        <tag>TensorRT</tag>
        <tag>C++推演</tag>
      </tags>
  </entry>
  <entry>
    <title>YOLOv5由pt文件转onnx文件报错解决</title>
    <url>/%E6%97%A5%E5%B8%B8/7/</url>
    <content><![CDATA[<p>ONNX: export failure ❌ 5.9s: Unsupported ONNX opset version: 17</p>
<p>关键词：深度学习、YOLOv5、onnx</p>
<span id="more"></span>
<hr>
<!-- toc -->
<h1>报错窗口</h1>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/7_error.png" alt="报错"><figcaption>报错</figcaption></figure></p>
<h1>报错原因</h1>
<p>export.py文件中parse_opt()函数设置的opset版本错误。</p>
<h1>解决方案</h1>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#找到parse_opt()函数中的此行，将default值改为12</span></span><br><span class="line">parser.add_argument(<span class="string">&#x27;--opset&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">12</span>, <span class="built_in">help</span>=<span class="string">&#x27;ONNX: opset version&#x27;</span>)</span><br></pre></td></tr></table></figure></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>YOLOv5</tag>
        <tag>onnx</tag>
      </tags>
  </entry>
  <entry>
    <title>Visual Studio2022的OpenCV4.5.2和CUDA12.0项目配置</title>
    <url>/%E6%97%A5%E5%B8%B8/9/</url>
    <content><![CDATA[<p>记录一次环境配置</p>
<p>关键词：深度学习、OpenCV、CUDA</p>
<span id="more"></span>
<hr>
<!-- toc -->
<h1>OpenCV的环境配置</h1>
<h2 id="opencv下载安装">OpenCV下载安装</h2>
<p>前往官网选择适合的OpenCV版本下载，并安装到合适的位置。</p>
<p><a class="link" href="https://opencv.org/releases/">官网下载OpenCV <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>我的OpenCV安装在：<code>D:\opencv4.5.2</code></p>
<h2 id="添加opencv到系统path变量">添加OpenCV到系统Path变量</h2>
<p>打开编辑系统环境变量，点击右下方的环境变量，在系统变量中找到PATH项，点击编辑添加OpenCV目录下的bin文件夹。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/9_opencv2PATH.jpg" alt="添加OpenCV至PATH"><figcaption>添加OpenCV至PATH</figcaption></figure></p>
<p>至于添加的是vc14还是vc15，参照下表</p>
<table>
<thead>
<tr>
<th style="text-align:center">VS版本</th>
<th style="text-align:center">VC</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">VS2015</td>
<td style="text-align:center">VC14</td>
</tr>
<tr>
<td style="text-align:center">VS2017及以上</td>
<td style="text-align:center">VC15</td>
</tr>
</tbody>
</table>
<h2 id="添加opencv环境到vs项目">添加OpenCV环境到VS项目</h2>
<p>右键项目，选择最下方属性，打开属性配置窗口，选择是Debug模式或Release模式配置。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/9_vs1.jpg" alt="VS项目配置窗口"><figcaption>VS项目配置窗口</figcaption></figure></p>
<h3 id="vc-目录配置opencv">VC++目录配置OpenCV</h3>
<ol>
<li><strong>点击包含目录</strong>，在包含目录中把OpenCV目录下的include文件夹添加。</li>
</ol>
<p>此处我的添加是：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">D:\opencv4.5.2\build\include\opencv2</span><br><span class="line">D:\opencv4.5.2\build\include</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li><strong>点击库目录</strong>，在库目录中把OpenCV的lib文件添加，此处路径藏得比较深，参考我的添加。</li>
</ol>
<p>此处我的添加是：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">D:\opencv4.5.2\build\x64\vc15\lib</span><br></pre></td></tr></table></figure></div>
<h3 id="链接器配置opencv">链接器配置OpenCV</h3>
<ol>
<li><strong>点击输入，再点击附加依赖项</strong>，将OpenCV的lib文件添加，lib文件存放在上面库目录的文件夹中。</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">opencv_world452.lib</span><br><span class="line">opencv_world452d.lib</span><br></pre></td></tr></table></figure></div>
<p>注意，此处文件名带<code>d</code>的为Debug版本的依赖项，不带<code>d</code>的为Release版本的依赖项。<br>
在配置Debug版本时把带<code>d</code>的文件放在不带<code>d</code>的文件之上，<br>
在配置Release版本时把不带<code>d</code>的文件放在带<code>d</code>的文件之上。</p>
<p><strong>如果显示找不到opencv_worldxxx.dll</strong> ，请把opencv_worldxxx.dll的路径添加到系统环境变量。</p>
<h1>CUDA环境配置</h1>
<h2 id="cuda下载安装">CUDA下载安装</h2>
<p><a class="link" href="http://fingsinz.space/%E6%97%A5%E5%B8%B8/5/">参考此条博客 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>我的CUDA目录在：<code>G:\NVIDIA_GPU_Computing_Toolkit_CUDA_v12.0</code></p>
<h2 id="添加cuda环境到vs项目">添加CUDA环境到VS项目</h2>
<p>配置为x64平台。</p>
<p>右键项目→生成依赖项→生成自定义→勾选“CUDA xxx”。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/9_cuda.jpg" alt="生成依赖项"><figcaption>生成依赖项</figcaption></figure></p>
<h3 id="vc-目录配置cuda">VC++目录配置CUDA</h3>
<ol>
<li><strong>点击包含目录</strong>，在包含目录中把OpenCV目录下的include文件夹添加。</li>
</ol>
<p>此处我的添加是：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">G:\NVIDIA_GPU_Computing_Toolkit_CUDA_v12.0\include</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li><strong>点击库目录</strong>，在库目录中把OpenCV的lib文件夹添加。</li>
</ol>
<p>此处我的添加是：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">G:\NVIDIA_GPU_Computing_Toolkit_CUDA_v12.0\lib\x64</span><br></pre></td></tr></table></figure></div>
<h3 id="链接器配置cuda">链接器配置CUDA</h3>
<ol>
<li><strong>点击常规，再点击附加库目录</strong>，添加下面的目录。<em>似乎不配置这一条也可以</em></li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$(CUDA_PATH_V12_0)\lib\$(Platform)</span><br></pre></td></tr></table></figure></div>
<p>或</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">G:\NVIDIA_GPU_Computing_Toolkit_CUDA_v12.0\lib\x64</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li><strong>点击输入，再点击附加依赖项</strong>，将CUDA的lib文件添加，输入下面的内容。</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">G:\NVIDIA_GPU_Computing_Toolkit_CUDA_v12.0\lib\x64\*.lib</span><br></pre></td></tr></table></figure></div>
<h3 id="配置源码文件风格">配置源码文件风格</h3>
<p>右键源文件，可以添加新建项中选择“CUDA C/C++ File”。<br>
右键“<a class="link" href="http://xxx.cu">xxx.cu <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>”源文件，点击属性，选择配置属性中的常规，从项类型中找到“CUDA C/C++”。</p>
<h2 id="测试cuda代码">测试CUDA代码</h2>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;cuda_runtime.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;device_launch_parameters.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">cudaError_t <span class="title">addWithCuda</span><span class="params">(<span class="type">int</span> *c, <span class="type">const</span> <span class="type">int</span> *a, <span class="type">const</span> <span class="type">int</span> *b, <span class="type">unsigned</span> <span class="type">int</span> size)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function">__global__ <span class="type">void</span> <span class="title">addKernel</span><span class="params">(<span class="type">int</span> *c, <span class="type">const</span> <span class="type">int</span> *a, <span class="type">const</span> <span class="type">int</span> *b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i = threadIdx.x;</span><br><span class="line">    c[i] = a[i] + b[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> arraySize = <span class="number">5</span>;</span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> a[arraySize] = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> &#125;;</span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> b[arraySize] = &#123; <span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span> &#125;;</span><br><span class="line">    <span class="type">int</span> c[arraySize] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Add vectors in parallel.</span></span><br><span class="line">    cudaError_t cudaStatus = <span class="built_in">addWithCuda</span>(c, a, b, arraySize);</span><br><span class="line">    <span class="keyword">if</span> (cudaStatus != cudaSuccess) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(stderr, <span class="string">&quot;addWithCuda failed!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;&#123;1,2,3,4,5&#125; + &#123;10,20,30,40,50&#125; = &#123;%d,%d,%d,%d,%d&#125;\n&quot;</span>,</span><br><span class="line">        c[<span class="number">0</span>], c[<span class="number">1</span>], c[<span class="number">2</span>], c[<span class="number">3</span>], c[<span class="number">4</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// cudaDeviceReset must be called before exiting in order for profiling and</span></span><br><span class="line">    <span class="comment">// tracing tools such as Nsight and Visual Profiler to show complete traces.</span></span><br><span class="line">    cudaStatus = <span class="built_in">cudaDeviceReset</span>();</span><br><span class="line">    <span class="keyword">if</span> (cudaStatus != cudaSuccess) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(stderr, <span class="string">&quot;cudaDeviceReset failed!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Helper function for using CUDA to add vectors in parallel.</span></span><br><span class="line"><span class="function">cudaError_t <span class="title">addWithCuda</span><span class="params">(<span class="type">int</span> *c, <span class="type">const</span> <span class="type">int</span> *a, <span class="type">const</span> <span class="type">int</span> *b, <span class="type">unsigned</span> <span class="type">int</span> size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> *dev_a = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> *dev_b = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> *dev_c = <span class="number">0</span>;</span><br><span class="line">    cudaError_t cudaStatus;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Choose which GPU to run on, change this on a multi-GPU system.</span></span><br><span class="line">    cudaStatus = <span class="built_in">cudaSetDevice</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (cudaStatus != cudaSuccess) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(stderr, <span class="string">&quot;cudaSetDevice failed!  Do you have a CUDA-capable GPU installed?&quot;</span>);</span><br><span class="line">        <span class="keyword">goto</span> Error;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Allocate GPU buffers for three vectors (two input, one output)    .</span></span><br><span class="line">    cudaStatus = <span class="built_in">cudaMalloc</span>((<span class="type">void</span>**)&amp;dev_c, size * <span class="built_in">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="keyword">if</span> (cudaStatus != cudaSuccess) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(stderr, <span class="string">&quot;cudaMalloc failed!&quot;</span>);</span><br><span class="line">        <span class="keyword">goto</span> Error;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cudaStatus = <span class="built_in">cudaMalloc</span>((<span class="type">void</span>**)&amp;dev_a, size * <span class="built_in">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="keyword">if</span> (cudaStatus != cudaSuccess) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(stderr, <span class="string">&quot;cudaMalloc failed!&quot;</span>);</span><br><span class="line">        <span class="keyword">goto</span> Error;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cudaStatus = <span class="built_in">cudaMalloc</span>((<span class="type">void</span>**)&amp;dev_b, size * <span class="built_in">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="keyword">if</span> (cudaStatus != cudaSuccess) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(stderr, <span class="string">&quot;cudaMalloc failed!&quot;</span>);</span><br><span class="line">        <span class="keyword">goto</span> Error;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Copy input vectors from host memory to GPU buffers.</span></span><br><span class="line">    cudaStatus = <span class="built_in">cudaMemcpy</span>(dev_a, a, size * <span class="built_in">sizeof</span>(<span class="type">int</span>), cudaMemcpyHostToDevice);</span><br><span class="line">    <span class="keyword">if</span> (cudaStatus != cudaSuccess) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(stderr, <span class="string">&quot;cudaMemcpy failed!&quot;</span>);</span><br><span class="line">        <span class="keyword">goto</span> Error;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cudaStatus = <span class="built_in">cudaMemcpy</span>(dev_b, b, size * <span class="built_in">sizeof</span>(<span class="type">int</span>), cudaMemcpyHostToDevice);</span><br><span class="line">    <span class="keyword">if</span> (cudaStatus != cudaSuccess) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(stderr, <span class="string">&quot;cudaMemcpy failed!&quot;</span>);</span><br><span class="line">        <span class="keyword">goto</span> Error;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Launch a kernel on the GPU with one thread for each element.</span></span><br><span class="line">    addKernel&lt;&lt;&lt;<span class="number">1</span>, size&gt;&gt;&gt;(dev_c, dev_a, dev_b);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check for any errors launching the kernel</span></span><br><span class="line">    cudaStatus = <span class="built_in">cudaGetLastError</span>();</span><br><span class="line">    <span class="keyword">if</span> (cudaStatus != cudaSuccess) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(stderr, <span class="string">&quot;addKernel launch failed: %s\n&quot;</span>, <span class="built_in">cudaGetErrorString</span>(cudaStatus));</span><br><span class="line">        <span class="keyword">goto</span> Error;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// cudaDeviceSynchronize waits for the kernel to finish, and returns</span></span><br><span class="line">    <span class="comment">// any errors encountered during the launch.</span></span><br><span class="line">    cudaStatus = <span class="built_in">cudaDeviceSynchronize</span>();</span><br><span class="line">    <span class="keyword">if</span> (cudaStatus != cudaSuccess) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(stderr, <span class="string">&quot;cudaDeviceSynchronize returned error code %d after launching addKernel!\n&quot;</span>, cudaStatus);</span><br><span class="line">        <span class="keyword">goto</span> Error;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Copy output vector from GPU buffer to host memory.</span></span><br><span class="line">    cudaStatus = <span class="built_in">cudaMemcpy</span>(c, dev_c, size * <span class="built_in">sizeof</span>(<span class="type">int</span>), cudaMemcpyDeviceToHost);</span><br><span class="line">    <span class="keyword">if</span> (cudaStatus != cudaSuccess) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(stderr, <span class="string">&quot;cudaMemcpy failed!&quot;</span>);</span><br><span class="line">        <span class="keyword">goto</span> Error;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">Error:</span><br><span class="line">    <span class="built_in">cudaFree</span>(dev_c);</span><br><span class="line">    <span class="built_in">cudaFree</span>(dev_a);</span><br><span class="line">    <span class="built_in">cudaFree</span>(dev_b);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> cudaStatus;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>运行结果如下图：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/9_result.jpg" alt="测试结果"><figcaption>测试结果</figcaption></figure></p>
<h2 id="cuda环境的一些碰壁">CUDA环境的一些碰壁</h2>
<ol>
<li>
<p>我的CUDA安装在一个可移动固态硬盘（G盘）中，可能导致了我的CUDA项目只能位于G盘使用，复制粘贴到电脑的盘会出现问题。</p>
</li>
<li>
<p>如果出现了大段指令无法运行，像下面的错误显示，可以复制命令（引号部分）到cmd运行，查看更详细的报错原因。</p>
</li>
</ol>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">// VS报错如下</span><br><span class="line">严重性	代码	说明	项目	文件	行	禁止显示状态</span><br><span class="line">错误	MSB3721	命令“&quot;G:\NVIDIA_GPU_Computing_Toolkit_CUDA_v12.0\bin\nvcc.exe&quot; -gencode=arch=compute_52,code=\&quot;sm_52,compute_52\&quot; --use-local-env -ccbin &quot;E:\Microsoft_Visual_Studio\VS\VC\Tools\MSVC\14.33.31629\bin\HostX64\x64&quot; -x cu   -IG:\NVIDIA_GPU_Computing_Toolkit_CUDA_v12.0\include -IG:\NVIDIA_GPU_Computing_Toolkit_CUDA_v12.0\include  -G   --keep-dir x64\Debug  -maxrregcount=0  --machine 64 --compile -cudart static  -g  -D_DEBUG -D_CONSOLE -D_UNICODE -DUNICODE -Xcompiler &quot;/EHsc /W3 /nologo /Od /FdG:\Data\Coding_Master\yolov5-trt\bin\immediate\x64\Debug\vc143.pdb /FS /Zi /RTC1 /MDd &quot; -o G:\Data\Coding_Master\yolov5-trt\bin\x64\File.cu.obj &quot;G:\Data\Coding_Master\yolov5-trt\File.cu&quot;”已退出，返回代码为 1。	yolov5-trt	E:\Microsoft_Visual_Studio\VS\MSBuild\Microsoft\VC\v170\BuildCustomizations\CUDA 12.0.targets	794</span><br><span class="line"></span><br><span class="line">// 复制命令部分，即下面部分到cmd输入</span><br><span class="line">&quot;G:\NVIDIA_GPU_Computing_Toolkit_CUDA_v12.0\bin\nvcc.exe&quot; -gencode=arch=compute_52,code=\&quot;sm_52,compute_52\&quot; --use-local-env -ccbin &quot;E:\Microsoft_Visual_Studio\VS\VC\Tools\MSVC\14.33.31629\bin\HostX64\x64&quot; -x cu   -IG:\NVIDIA_GPU_Computing_Toolkit_CUDA_v12.0\include -IG:\NVIDIA_GPU_Computing_Toolkit_CUDA_v12.0\include  -G   --keep-dir x64\Debug  -maxrregcount=0  --machine 64 --compile -cudart static  -g  -D_DEBUG -D_CONSOLE -D_UNICODE -DUNICODE -Xcompiler &quot;/EHsc /W3 /nologo /Od /FdG:\Data\Coding_Master\yolov5-trt\bin\immediate\x64\Debug\vc143.pdb /FS /Zi /RTC1 /MDd &quot; -o G:\Data\Coding_Master\yolov5-trt\bin\x64\File.cu.obj &quot;G:\Data\Coding_Master\yolov5-trt\File.cu&quot;</span><br></pre></td></tr></table></figure></div>
<ol start="3">
<li>还遇到一些其他的坑可以自行必应。</li>
</ol>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>OpenCV</tag>
        <tag>CUDA</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML语言学习记录</title>
    <url>/%E7%AC%94%E8%AE%B0/HTML/</url>
    <content><![CDATA[<p>HTML：基础</p>
<p>关键词：HTML</p>
<span id="more"></span>
<hr>
<!-- toc -->
<h1>HTML前言</h1>
<h2 id="什么是html？">什么是HTML？</h2>
<ul>
<li>HTML，为HyperTest Markup Language的缩写，意为超文本标记语言。其是一种用于创建网页的标准标记语言。</li>
<li>HTML由一系列元素组成，可以用于描述网页的结构。</li>
<li>HTML使用各种元素使得浏览器展示内容，并使用元素标记内容片段。</li>
<li>作为HTML文件，必须以一个声明开始。<br>
这个声明表示文档类型，帮助浏览器正确展示网页内容。其只需在每个文档开头出现一次，它也不注重大小写。一般的HTML5文件以<code>&lt;!DOCTYPE html&gt;</code>开始。</li>
<li>HTML文件应该以<code>&lt;html&gt;</code>开始并以<code>&lt;/html&gt;</code>结束。</li>
<li>HTML文件的可视部分应该在<code>&lt;body&gt;</code>和<code>&lt;/body&gt;</code>之间。</li>
<li>HTML整体是大小写不敏感，但为了格式与美观，一般有统一的标准。</li>
<li>HTML使用<code>&lt;!-- --&gt;</code>进行注释。</li>
</ul>
<h2 id="html5">HTML5</h2>
<ul>
<li>HTML5 是最新的 HTML 标准。</li>
<li>HTML5 是专门为承载丰富的 web 内容而设计的，并且无需额外插件。</li>
<li>HTML5 拥有新的<a class="link" href="https://www.w3school.com.cn/html/html5_browsers.asp">语义 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>、图形以及多媒体元素。</li>
<li>HTML5 提供的新<a class="link" href="https://www.w3school.com.cn/html/html5_new_elements.asp">元素 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>和新的 API 简化了 web 应用程序的搭建。</li>
<li>HTML5 是跨平台的，被设计为在不同类型的硬件（PC、平板、手机、电视机等等）之上运行。</li>
</ul>
<h2 id="响应式web设计">响应式Web设计</h2>
<ul>
<li>响应式Web设计，Responsive Web Design，能够以可变尺寸传递网页。</li>
<li>可以使用Bootstrap创建响应式设计。</li>
</ul>
<h2 id="html标准字符集">HTML标准字符集</h2>
<ul>
<li>为了正确显示HTML页面，在<code>&lt;meta&gt;</code>标签中设置编码。如：</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>字符集有很多，如ASCII码，UTF-8码，ISO-8859-1码，推荐用UTF-8码。</li>
<li>在使用某些字符时，存在歧义，使用<a class="link" href="https://www.w3school.com.cn/charsets/ref_html_8859.asp">实体代码或编号 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>表示。</li>
<li><a class="link" href="https://www.w3school.com.cn/charsets/ref_utf_punctuation.asp">更多字符 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h2 id="html统一资源定位器与路径">HTML统一资源定位器与路径</h2>
<ul>
<li>统一资源定位器和路径不完全相同。</li>
<li>URL，Uniform Resource Locator，统一资源定位器，也被称为网址。</li>
<li>URL 只能使用 ASCII 字符集来通过因特网进行发送。URL 编码使用 “%” 其后跟随两位的十六进制数来替换非 ASCII 字符。</li>
<li>网址具有一定的语法规则：scheme://host.domain:port/path/filename<br>
scheme定义因特网服务类型，常见为http和https。<br>
host定义域主机，http默认主机是www。<br>
domain定义因特网域名。<br>
:port定义主机上的端口号。<br>
path定义服务器上的路径，省略默认根目录。<br>
filename定义文档、资源的名称。</li>
<li>路径描述了网站文件夹结构中某个文件的位置，使用相对路径是个好习惯。</li>
</ul>
<h2 id="xhtml">XHTML</h2>
<ul>
<li>XHTML是指可扩展超文本标记语言，是更严格更纯净的HTML版本。</li>
<li>其与HTML4.01几乎相同。</li>
</ul>
<h1>HTML元素理念</h1>
<h2 id="定义">定义</h2>
<ul>
<li>HTML 元素指的是从开始标签（<code>&lt;xxx&gt;</code>）到结束标签（<code>&lt;/xxx&gt;</code>）的所有代码。其包含开始标签，内容和结束标签。</li>
</ul>
<h2 id="语法">语法</h2>
<ul>
<li>HTML元素以开始标签起始。</li>
<li>HTML元素以结束标签终止。</li>
<li>元素的内容是开始标签与结束标签之间的内容。</li>
<li>某些HTML元素具有空内容。</li>
<li>没有内容的 HTML 元素被称为空元素。空元素在开始标签中进行关闭（以开始标签的结束而结束，即无结束标签）。</li>
<li>在 XHTML、XML 以及未来版本的 HTML 中，所有元素都必须被关闭。在开始标签中添加斜杠，比如 <code>&lt;br /&gt;</code>，是关闭空元素的正确方法，HTML、XHTML 和 XML 都接受这种方式。即使<code>&lt;br&gt;</code>在所有浏览器中都是有效的，但使用<code>&lt;br /&gt;</code>其实是更长远的保障。</li>
<li>大多数HTML元素可拥有属性。</li>
</ul>
<h2 id="元素实例">元素实例</h2>
<ul>
<li>如<code>&lt;html&gt;</code>和<code>&lt;/html&gt;</code>元素（<code>&lt;html&gt;</code>与<code>&lt;/html&gt;</code>标签限定了文档的开始点和结束点，在它们之间是文档的头部和主体。），<code>&lt;body&gt;</code>和<code>&lt;/body&gt;</code>元素（body元素包含文档的所有内容），HTML标题，HTML段落，HTML链接，HTML图像等。</li>
</ul>
<h2 id="元素嵌套">元素嵌套</h2>
<ul>
<li>
<p>大多数HTML元素可以嵌套（即包含其他HTML元素）如：</p>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 标签&lt;p&gt;表示段落元素 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This is a paragraph.<span class="tag">&lt;/<span class="name">p</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
</li>
</ul>
<h1>HTML属性理念</h1>
<ul>
<li>属性为 HTML 元素提供附加信息。</li>
<li>HTML 标签可以拥有属性。属性提供了有关 HTML 元素的更多的信息。</li>
<li>属性总是在 HTML 元素的开始标签中规定。</li>
<li>属性总是以名称或值对的形式出现</li>
<li><a class="link" href="https://www.w3school.com.cn/tags/html_ref_standardattributes.asp">HTML全局属性 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h1>HTML头部元素</h1>
<ol>
<li><code>&lt;head&gt;</code>元素</li>
</ol>
<ul>
<li>定义关于文档的信息。</li>
<li><code>&lt;head&gt;</code>标签放在文档的开始处，紧跟在<code>&lt;html&gt;</code>后面，并处于<code>&lt;body&gt;</code>标签或<code>&lt;frameset&gt;</code>标签之前。</li>
<li><code>&lt;head&gt;</code>元素是所有头部元素的容器。<code>&lt;head&gt;</code>内的元素可包含脚本，指示浏览器在何处可以找到样式表，提供元信息，等等。以下标签都可以添加到 head 部分：<code>&lt;title&gt;</code>、<code>&lt;base&gt;</code>、<code>&lt;link&gt;</code>、<code>&lt;meta&gt;</code>、<code>&lt;script&gt;</code>以及<code>&lt;style&gt;</code>。</li>
<li>属性<br>
profile，可以设置URL，一个由空格分隔的URL列表，这些URL包含有关页面的元数据信息。<br>
文档的头部经常会包含一些<code>&lt;meta&gt;</code>标签，用来告诉浏览器关于文档的附加信息。在将来，创作者可能会利用预先定义好的标准文档的元数据配置文件（metadata profile），以便更好地描述它们的文档。profile属性提供了与当前文档相关联的配置文件的 URL。</li>
</ul>
<ol start="2">
<li><code>&lt;title&gt;</code>元素</li>
</ol>
<ul>
<li>定义文档标题，定义浏览器工具栏中的标题，定义页面被收藏时显示的标题，定义显示在搜索引擎结果中的页面标题。</li>
<li>title元素在所有 HTML/XHTML文档中都是必需的。</li>
<li>属性</li>
</ul>
<p>dir，可以设置值，规定元素中内容的文本方向。</p>
<p>lang，可以设置代码，规定元素中内容的语言代码。</p>
<p>xml:lang，可以设置代码，规定XHTML文档中元素内容的语言代码。</p>
<ol start="3">
<li><code>&lt;base&gt;</code>元素</li>
</ol>
<ul>
<li>定义页面上所有链接的默认地址或默认目标（target）。</li>
<li>其必须位于head元素内部。</li>
<li>属性</li>
</ul>
<p>href，可以设置URL，规定页面中所有相对链接的基准URL。即设置默认地址。</p>
<p>target，可以设置值，规定在何处打开页面中的所有链接。值包括“_blank”，“_parent”，“_self”，“_top”，和框架名。</p>
<ol start="4">
<li><code>&lt;link&gt;</code>元素</li>
</ol>
<ul>
<li>定义文档与外部资源之间的关系。</li>
<li><code>&lt;link&gt;</code>标签最常用于连接样式表。</li>
<li>属性</li>
</ul>
<p>charset，可以设置字符编码方式，在HTML5不支持。</p>
<p>href，可以设置URL，规定被链接文档的位置。</p>
<p>hreflang，可以设置语言代码，规定被链接文档中文本的语言。</p>
<p>media，可以设置媒体查询，规定被链接文档将被显示在什么设备上。</p>
<p>referrerpolicy，可以设置值，规定在获取资源时使用的引荐来源信息。值包括“no-referrer”，“no-referrer-when-downgrade”，“origin”，“origin-when-cross-origin”，“unsafe-url”。</p>
<p>rel，可以设置值，规定当前文档与被链接文档之间的关系。值包括“alternate”，“author”，“help”，“icon”，“licence”，“next”，“pingback”，“prefetch”，“prev”，“search”，“sidebar”，“stylesheet”，“tag”。</p>
<p>rev，可以设置反向关系，在HTML5中不支持。</p>
<p>sizes，可以设置值，规定被链接资源的尺寸，仅适用<code>rel=&quot;icon&quot;</code>。值包括“heightxwidth”，“any”。</p>
<p>target，可以设置目标，在HTML5中不支持。</p>
<p>type，可以设置MIME类型，规定被链接文档的MIME类型。</p>
<ol start="5">
<li><code>&lt;style&gt;</code>元素</li>
</ol>
<ul>
<li>定义文档的样式信息。如：</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">h1</span> &#123;<span class="attribute">color</span>:red&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">p</span> &#123;<span class="attribute">color</span>:blue&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Header 1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>A paragraph.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>属性</li>
</ul>
<p>type，只能设置text/css，规定样式表的MIME类型。</p>
<p>media，可以设置值，为样式表规定不同的媒介类型。值包括“screen”，“tty”，“tv”，“projection”，“handheld”，“print”，“braille”，“aural”，“all”。</p>
<ol start="6">
<li><code>&lt;meta&gt;</code>元素</li>
</ol>
<ul>
<li>定义关于HTML文档的元数据。</li>
<li><code>&lt;meta&gt;</code>标签位于文档的头部，不包含任何内容。<code>&lt;meta&gt;</code>标签的属性定义了与文档相关联的名称/值对。</li>
<li><code>&lt;meta&gt;</code>无结束标签。</li>
<li>属性</li>
</ul>
<p>charset，可以设置字符，规定HTML文档的字符编码。</p>
<p>content，可以设置文本，定义与http-equiv或name相关的元信息。</p>
<p>content 属性提供了名称/值对中的值。该值可以是任何有效的字符串。content 属性始终要和name属性或http-equiv属性一起使用。</p>
<p>http-equiv，可以设置值，把content属性关联到HTTP头部。值包括“content-security-policy”，“content-type”，“default-style”，“refresh”。</p>
<p>name，可以设置值，把content属性关联到一个名称。值包括“application-name”，“author”，“description”，“generator”，“keywords”，“viewport”。</p>
<p>scheme，可以设置一些文本，定义用于解释content属性值的格式。scheme 属性用于指定要用来翻译属性值的方案。此方案应该在由 <code>&lt;head&gt;</code>标签的 profile 属性指定的概况文件中进行了定义。</p>
<ol start="7">
<li><code>&lt;script&gt;</code>元素</li>
</ol>
<ul>
<li>定义客户端脚本。比如JavaScript。</li>
<li>属性</li>
</ul>
<p>async，规定异步执行脚本（仅适用于外部脚本）。</p>
<p>charset，可以设置编码，规定在外部脚本文件中使用的字符编码。</p>
<p>crossorigin，可以设置值，将请求模式设置为HTTP CORS请求。值包括“anonymous”，“use-credentials”。</p>
<p>defer，规定是否对脚本执行进行延迟，直到页面加载为止。</p>
<p>language，规定脚本语言，不赞成使用，用type代替。</p>
<p>referrerpolicy，可以设置值，规定外部脚本文件的URL。值包括“no-referrer”，“no-referrer-when-downgrade”，“origin”，“origin-when-cross-origin”，“same-origin”，“strict-origin”，“strict-origin-when-cross-origin”，“unsafe-url”。</p>
<p>src，可以设置URL，规定外部脚本文件的URL。</p>
<p>xml:space，规定是否保留代码中的空白。</p>
<p>type，可以设置MIME类型，指示脚本的MIME类型。</p>
<h1>HTML基本元素</h1>
<h2 id="html标题">HTML标题</h2>
<ul>
<li>标题（Heading）是通过<code>&lt;h1&gt;</code>~<code>&lt;h6&gt;</code>等标签进行定义的。<code>&lt;h1&gt;</code>定义最大的标题。<code>&lt;h6&gt;</code>定义最小的标题。</li>
<li>具有“align”属性，其值有“left”、“center”、“right”和“justify”，规定了标题中文本的排列。</li>
<li><code>&lt;hr /&gt;</code>标签在 HTML 页面中创建水平线。hr元素可用于分隔内容。</li>
</ul>
<h2 id="html段落">HTML段落</h2>
<ul>
<li>段落是通过<code>&lt;p&gt;</code>标签定义的。</li>
<li>具有“align”属性，其值有“left”、“center”、“right”和“justify”，规定了段落中文本的排列。</li>
<li><code>&lt;br /&gt;</code>标签可以在段落中进行换行。</li>
</ul>
<h2 id="html格式化类标签">HTML格式化类标签</h2>
<h3 id="文本格式化标签">文本格式化标签</h3>
<ul>
<li><code>&lt;b&gt;</code>和<code>&lt;/b&gt;</code>加粗字体</li>
<li><code>&lt;strong&gt;</code>和<code>&lt;/strong&gt;</code>加重语气</li>
<li><code>&lt;big&gt;</code>和<code>&lt;/big&gt;</code>加大字体</li>
<li><code>&lt;small&gt;</code>和<code>&lt;/small&gt;</code>小字体</li>
<li><code>&lt;em&gt;</code>和<code>&lt;/em&gt;</code>着重文字</li>
<li><code>&lt;i&gt;</code>和<code>&lt;/i&gt;</code> 斜体字</li>
<li><code>&lt;sup&gt;</code>和<code>&lt;/sup&gt;</code>上标</li>
<li><code>&lt;sub&gt;</code>和<code>&lt;/sub&gt;</code>下标</li>
<li><code>&lt;del&gt;</code>和<code>&lt;/del&gt;</code>删除字</li>
<li><code>&lt;ins&gt;</code>和<code>&lt;/ins&gt;</code>下划线</li>
</ul>
<h3 id="计算机输出-标签">“计算机输出”标签</h3>
<ul>
<li><code>&lt;code&gt;</code>和<code>&lt;/code&gt;</code>计算机代码字体</li>
<li><code>&lt;kbd&gt;</code>和<code>&lt;/kbd&gt;</code>键盘码字体</li>
<li><code>&lt;samp&gt;</code>和<code>&lt;/samp&gt;</code>计算机代码样本字体</li>
<li><code>&lt;tt&gt;</code>和<code>&lt;/tt&gt;</code>打字机代码字体</li>
<li><code>&lt;var&gt;</code>和<code>&lt;/var&gt;</code>定义变量字体</li>
<li><code>&lt;pre&gt;</code>和<code>&lt;/pre&gt;</code>预格式文本字体</li>
</ul>
<h3 id="引用和术语定义">引用和术语定义</h3>
<ul>
<li><code>&lt;abbr&gt;</code>和<code>&lt;/abbr&gt;</code>定义缩写，鼠标悬浮显示内容</li>
<li><code>&lt;acronym&gt;</code>和<code>&lt;/acronym&gt;</code>定义首字母缩写，鼠标悬浮显示内容。</li>
<li><code>&lt;address&gt;</code>和<code>&lt;/address&gt;</code>定义地址</li>
<li><code>&lt;bdo&gt;</code>和<code>&lt;/bdo&gt;</code>定义文字方向，具有dir属性，值为“rtl”(right-to-left)和“ltr”(left-to-right)</li>
<li><code>&lt;blockquote&gt;</code>和<code>&lt;/blockquote&gt;</code>定义长引用</li>
<li><code>&lt;q&gt;</code>和<code>&lt;/q&gt;</code>定义短引用</li>
<li><code>&lt;cite&gt;</code>和<code>&lt;/cite&gt;</code>定义引用、引证；<code>&lt;dfn&gt;</code>和<code>&lt;/dfn&gt;</code>定义项目。</li>
</ul>
<h2 id="html链接">HTML链接</h2>
<ul>
<li>链接或者超链接，可以是一个字、一个词、一幅画像，可以点击跳转到新的内容。</li>
<li>链接是通过<code>&lt;a&gt;</code>定义的。</li>
<li>开始标签和结束标签之间的文字被作为超级链接来显示。超级链接可以是文本、图片或者其他HTML元素。</li>
<li><code>&lt;a&gt;</code>标签具有href属性和name属性，href属性用于创建指向另一个文档的链接，name属性用于创建文档内的书签。用法如下。</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span> = <span class="string">&quot;flag&quot;</span>&gt;</span>这是一句话<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://cn.bing.com/&quot;</span> &gt;</span>A link to Bing<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> = <span class="string">&quot;#flag&quot;</span>&gt;</span>跳转到顶部句子<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li><code>&lt;a&gt;</code>标签具有target属性，其用于定义被链接的文档在何处显示。如<code>&lt;a href=&quot;http://cn.bing.com/&quot; target=&quot;_blank&quot;&gt;A Link&lt;/a&gt;</code>中的<code>target=&quot;_blank&quot;</code>表示在新的窗口打开文档。</li>
</ul>
<h2 id="html图像">HTML图像</h2>
<ul>
<li>在 HTML 中，图像由<code>&lt;img&gt;</code>标签定义。<code>&lt;img&gt;</code>是空标签，意思是说，它只包含属性，并且没有闭合标签。</li>
<li>页面上显示图像需要使用源属性（src，source），源属性的值是图像的URL地址。如：<code>&lt;img src=&quot;xxx/image.jpg&quot;&gt;</code>，则image这个jpg文件需要在源属性的值的地址上。</li>
<li>替换文本属性（Alt），用来为图像定义一串预备的可替换的文本。替换文本属性的值是人为定义的。即当图片无法显示时，展示alt属性的值的文字。如：<code>&lt;img src=&quot;xxx/a.jpg&quot; alt=&quot;test&quot;&gt;</code>，当a.jpg无法显示时，显示test。</li>
<li>img标签中可以使用align属性进行图像与文本对齐。此处align的值可选“bottom”、“middle”和“top”，默认bottom对齐。</li>
<li>img标签中可以使用align属性进行文本和图像位置设定。此处align的值可选“left”、“right”，分别用于图像固定段落的左端和右端。</li>
<li>img标签中可以使用width和height属性进行更改图像的大小。如：<code>&lt;img src=&quot;xxx/a.jpg&quot; width=&quot;200&quot; height=&quot;200&quot;&gt;</code></li>
<li>可以将<code>&lt;a&gt;</code>标签和<code>&lt;img&gt;</code>结合，制作能跳转链接的图片。如：<code>&lt;a href=&quot;http://cn.bing.cn&quot;&gt;&lt;img src=&quot;xxx/a.jpg&quot;&gt;&lt;/a&gt;</code></li>
<li>img标签中还有以下属性</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">属性</th>
<th style="text-align:center">值</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">border</td>
<td style="text-align:center">像素值</td>
<td style="text-align:center">定义图像周围的边框</td>
</tr>
<tr>
<td style="text-align:center">hspace</td>
<td style="text-align:center">像素值</td>
<td style="text-align:center">定义图像左侧和右侧的空白</td>
</tr>
<tr>
<td style="text-align:center">ismap</td>
<td style="text-align:center">URL</td>
<td style="text-align:center">将图像定义为服务器端图像映射</td>
</tr>
<tr>
<td style="text-align:center">loading</td>
<td style="text-align:center">eager/lazy</td>
<td style="text-align:center">规定浏览器是立即加载图像还是推迟加载屏幕外图像</td>
</tr>
<tr>
<td style="text-align:center">longdesc</td>
<td style="text-align:center">URL</td>
<td style="text-align:center">指向包含长的图像描述文档的URL</td>
</tr>
<tr>
<td style="text-align:center">referrerpolicy</td>
<td style="text-align:center">no-referrer/no-referrer-when-downgrade/origin/origin-when-cross-origin/unsafe-url</td>
<td style="text-align:center">规定获取图像时要使用的引荐来源信息</td>
</tr>
<tr>
<td style="text-align:center">usemap</td>
<td style="text-align:center">URL</td>
<td style="text-align:center">将图像定义为客户器端图像映射</td>
</tr>
<tr>
<td style="text-align:center">vspace</td>
<td style="text-align:center">像素值</td>
<td style="text-align:center">定义图像顶部和底部的空白</td>
</tr>
</tbody>
</table>
<ul>
<li>在body标签中使用background属性可以使用图像作为背景。但如果图像小于页面，图像会进行重复。</li>
<li>使用<code>&lt;map&gt;</code>标签和<code>&lt;area&gt;</code>标签制作图像映射。</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;xxx/a.jpg&quot;</span> <span class="attr">usemap</span>=<span class="string">&quot;#amap&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--map标签中有属性name和id，与img标签usemap对应--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--map标签中id属性时必须且唯一的，name属性时可选的--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">map</span> <span class="attr">name</span>=<span class="string">&quot;amap&quot;</span> <span class="attr">id</span>=<span class="string">&quot;amap&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--area标签中有shape属性、coords属性等--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;circle&quot;</span> <span class="attr">coords</span>=<span class="string">&quot;180,139,14&quot;</span> <span class="attr">href</span>=<span class="string">&quot;xxx&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;circle&quot;</span> <span class="attr">coords</span>=<span class="string">&quot;129,161,10&quot;</span> <span class="attr">href</span>=<span class="string">&quot;xxx&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;rect&quot;</span> <span class="attr">coords</span>=<span class="string">&quot;0,0,110,260&quot;</span> <span class="attr">href</span>=<span class="string">&quot;xxx&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<p>area标签的其他属性如下：</p>
<table>
<thead>
<tr>
<th style="text-align:center">属性</th>
<th style="text-align:center">值</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">coords</td>
<td style="text-align:center">坐标值</td>
<td style="text-align:center">定义可点击区域的坐标和大小</td>
</tr>
<tr>
<td style="text-align:center">download</td>
<td style="text-align:center">文件名</td>
<td style="text-align:center">指定用户点击超链接时下载目标</td>
</tr>
<tr>
<td style="text-align:center">href</td>
<td style="text-align:center">URL</td>
<td style="text-align:center">此区域目标URL</td>
</tr>
<tr>
<td style="text-align:center">hreflang</td>
<td style="text-align:center">language_code</td>
<td style="text-align:center">规定区域中URL的语言</td>
</tr>
<tr>
<td style="text-align:center">media</td>
<td style="text-align:center">media query</td>
<td style="text-align:center">规定目标URL优化的媒体、设备</td>
</tr>
<tr>
<td style="text-align:center">referrerpolicy</td>
<td style="text-align:center">no-referrer/no-referrer-when-downgrade/origin/origin-when-cross-origin/same-origin/strict-origin-when-cross-origin/unsafe-url</td>
<td style="text-align:center">规定用户单击超链接时发送引荐来源信息</td>
</tr>
<tr>
<td style="text-align:center">rel</td>
<td style="text-align:center">alternate/author/bookmark/help/licence/next/nofollow/noreferrer/prefatch/prev/search/tag</td>
<td style="text-align:center">规定区域中目标URL的语言</td>
</tr>
<tr>
<td style="text-align:center">nohref</td>
<td style="text-align:center">nohref</td>
<td style="text-align:center">从图像映射排除某个区域</td>
</tr>
<tr>
<td style="text-align:center">shape</td>
<td style="text-align:center">default/rect/circ/poly</td>
<td style="text-align:center">定义区域形状</td>
</tr>
<tr>
<td style="text-align:center">target</td>
<td style="text-align:center">_blank/_parent/_self/_top</td>
<td style="text-align:center">规定在何处打开href属性指定目标的URL</td>
</tr>
<tr>
<td style="text-align:center">type</td>
<td style="text-align:center">media_type</td>
<td style="text-align:center">规定目标URL的Internet媒体类型</td>
</tr>
</tbody>
</table>
<h2 id="html表格元素">HTML表格元素</h2>
<ul>
<li>表格由<code>&lt;table&gt;</code>标签定义。每个表格均有若干行（由<code>&lt;tr&gt;</code>标签定义），每行被分割为若干单元格（由<code>&lt;td&gt;</code>标签定义）。</li>
<li>字母 tr 指一行（table row）。字母 td 指表格数据（table data），即数据单元格的内容。数据单元格可以包含文本、图片、列表、段落、表单、水平线、表格等等。</li>
<li>表格的表头用<code>&lt;th&gt;</code>标签表示。</li>
<li>为了避免空单元边框（添加border属性）不显示，在空单元格中添加一个空格占位符（<code>&amp;nbsp;</code>），就可以将边框显示出来。</li>
<li>表格标签：</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">标签</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>&lt;table&gt;</code></td>
<td style="text-align:center">定义表格</td>
</tr>
<tr>
<td style="text-align:center"><code>&lt;caption&gt;</code></td>
<td style="text-align:center">定义表格标题</td>
</tr>
<tr>
<td style="text-align:center"><code>&lt;th&gt;</code></td>
<td style="text-align:center">定义表格的表头</td>
</tr>
<tr>
<td style="text-align:center"><code>&lt;tr&gt;</code></td>
<td style="text-align:center">定义表格的行</td>
</tr>
<tr>
<td style="text-align:center"><code>&lt;td&gt;</code></td>
<td style="text-align:center">定义表格单元</td>
</tr>
<tr>
<td style="text-align:center"><code>&lt;thead&gt;</code></td>
<td style="text-align:center">定义表格的页眉</td>
</tr>
<tr>
<td style="text-align:center"><code>&lt;tbody&gt;</code></td>
<td style="text-align:center">定义表格主体</td>
</tr>
<tr>
<td style="text-align:center"><code>&lt;tfoot&gt;</code></td>
<td style="text-align:center">定义表格页脚</td>
</tr>
<tr>
<td style="text-align:center"><code>&lt;col&gt;</code></td>
<td style="text-align:center">用于表格列的属性</td>
</tr>
<tr>
<td style="text-align:center"><code>&lt;colgroup&gt;</code></td>
<td style="text-align:center">定义表格列的组</td>
</tr>
</tbody>
</table>
<h3 id="table标签">table标签</h3>
<ul>
<li>属性</li>
</ul>
<p>align，可以设置值，规定表格相对周围元素的对齐方式。值包括“left”，“right”，“center”。不赞成使用，用样式代替。</p>
<p>bgcolor，可以设置rgb值或十六进制颜色或颜色名，规定表格的背景颜色。不赞成使用，用样式代替。</p>
<p>border，可以设置像素值，规定表格边框的宽度。</p>
<p>cellpadding，可以通过设置百分比或像素值，规定单元边沿与其内容之间的空白。</p>
<p>cellspacing，可以通过设置百分比或像素值，规定单元格之间的空白。</p>
<p>frame，可以通过设置值，规定外侧边框的哪个部分时可见的。值包括“void”，“above”，“below”，“hsides”，“lhs”，“rhs”，“vsides”，“box”，“border”。</p>
<p>rules，可以通过设置值，规定内侧边框的哪个部分时可见的。值包括“none”，“groups”，“rows”，“cols”，“all”。</p>
<p>summary，可以通过设置文本，规定表格的摘要。</p>
<p>width，可以通过设置百分比或像素值，规定表格的宽度。</p>
<h3 id="caption标签">caption标签</h3>
<ul>
<li>
<p>caption 元素定义表格标题。caption 标签必须紧随 table 标签之后。您只能对每个表格定义一个标题。通常这个标题会被居中于表格之上。</p>
</li>
<li>
<p>属性</p>
</li>
</ul>
<p>其属性有align，可以设置值，规定标题的对齐方式。值包括“left”，“right”，“top”，“bottom”。不赞成使用，用样式代替。</p>
<h3 id="th标签与td标签">th标签与td标签</h3>
<ul>
<li>定义表格内的表头单元格。</li>
<li>HTML 表单中有两种类型的单元格：<br>
表头单元格 - 包含表头信息（由 th 元素创建）<br>
标准单元格 - 包含数据（由 td 元素创建）</li>
<li>th 元素内部的文本通常会呈现为居中的粗体文本，而 td 元素内的文本通常是左对齐的普通文本。如果需要将内容横跨多个行或列，请使用 colspan 和 rowspan 属性。</li>
<li>属性</li>
</ul>
<p>abbr，可以通过设置文本，规定单元格中内容的缩写版本。</p>
<p>align，可以通过设置值，规定单元格内容的水平对齐方式。值包括“left”，“right”，“center”，“justify”，“char”。</p>
<p>axis，可以设置分类名字，对单元格进行分类。</p>
<p>bgcolor，可以设置rgb值或十六进制颜色或颜色名，规定表格的背景颜色。不赞成使用，用样式代替。</p>
<p>char，可以设置字符，规定根据哪个字符进行内容的对齐。</p>
<p>charoff，可以设置数字，规定对齐字符的偏移量。</p>
<p>colspan，可以设置数字，规定单元格可跨越的列数。</p>
<p>headers，可以设置属性类型，由空格分隔的表头单元格ID列标，为数据单元格提供表头信息。</p>
<p>nowrap，可以设置值，规定单元格中是否折行。不推荐使用，用样式代替。</p>
<p>rowspan，可以设置数字，规定单元格可横跨的行数。</p>
<p>scope，可以设置值，定义将表头数据与单元数据相关联的方法。值包括“col”，“clogroup”，“row”，“rowgroup”。</p>
<p>valign，可以设置值，规定单元格内容的垂直排列方式。值包括“top”，“middle”，“bottom”，“baseline”。</p>
<p>width，可以设置百分比或像素值，规定表格单元格的宽度。不推荐使用，用样式代替。</p>
<p>height，可以设置百分比或像素值，规定表格单元格的高度。不推荐使用，用样式代替。</p>
<h3 id="tr标签">tr标签</h3>
<ul>
<li>属性</li>
</ul>
<p>align，可以通过设置值，规定表格行内容对齐方式。值包括“left”，“right”，“center”，“justify”，“char”。</p>
<p>bgcolor，可以设置rgb值或十六进制颜色或颜色名，规定表格的背景颜色。不赞成使用，用样式代替。</p>
<p>char，可以设置字符，规定根据哪个字符进行内容的对齐。</p>
<p>charoff，可以设置数字，规定对齐字符的偏移量。</p>
<p>valign，可以设置值，规定单元格内容的垂直排列方式。值包括“top”，“middle”，“bottom”，“baseline”。</p>
<h3 id="thead标签-tbody标签和tfoot标签">thead标签、tbody标签和tfoot标签</h3>
<ul>
<li><code>&lt;thead&gt;</code>标签定义表格的表头。thead 元素应该与 tbody 和 tfoot 元素结合起来使用。</li>
<li>tbody 元素用于对 HTML 表格中的主体内容进行分组，而 tfoot 元素用于对 HTML 表格中的表注（页脚）内容进行分组。</li>
<li>如果使用 thead、tfoot 以及 tbody 元素，就必须使用全部的元素。它们的出现次序是：thead、tfoot、tbody。必须在 table 元素内部使用这些标签。</li>
<li>属性</li>
</ul>
<p>align，可以通过设置值，规定元素中内容对齐方式。值包括“left”，“right”，“center”，“justify”，“char”。</p>
<p>char，可以设置字符，规定根据哪个字符进行内容的对齐。</p>
<p>charoff，可以设置数字，规定对齐字符的偏移量。</p>
<p>valign，可以设置值，规定单元格内容的垂直排列方式。值包括“top”，“middle”，“bottom”，“baseline”。</p>
<h3 id="col标签">col标签</h3>
<ul>
<li><code>&lt;col&gt;</code>标签为表格中一个或多个列定义属性值。</li>
<li>如需对全部列应用样式，<code>&lt;col&gt;</code>标签很有用，这样就不需要对各个单元和各行重复应用样式了。</li>
<li>只能在 table 或 colgroup 元素中使用<code>&lt;col&gt;</code>标签。</li>
<li>无结束标签。</li>
<li>为<code>&lt;col&gt;</code>标签添加 class 属性。这样就可以使用 CSS 来负责对齐方式、宽度和颜色等等。</li>
<li>属性</li>
</ul>
<p>align，可以通过设置值，规定与col元素相关的内容的水平对齐方式。值包括“left”，“right”，“center”，“justify”，“char”。</p>
<p>char，可以设置字符，规定根据哪个字符进行内容的对齐。</p>
<p>charoff，可以设置数字，规定对齐字符的偏移量。</p>
<p>span，可以设置数字，规定col元素应该跨越的列数。</p>
<p>valign，可以设置值，规定单元格内容的垂直排列方式。值包括“top”，“middle”，“bottom”，“baseline”。</p>
<p>width，可以设置百分比或像素值或相关长度，规定col元素的宽度。</p>
<h3 id="colgroup标签">colgroup标签</h3>
<ul>
<li><code>&lt;colgroup&gt;</code>标签用于对表格中的列进行组合，以便对其进行格式化。</li>
<li>如需对全部列应用样式，<code>&lt;colgroup&gt;</code>标签很有用，这样就不需要对各个单元和各行重复应用样式了。</li>
<li><code>&lt;colgroup&gt;</code>标签只能在 table 元素中使用。</li>
<li>属性</li>
</ul>
<p>align，可以通过设置值，定义在列组合中内容的水平对齐方式。值包括“left”，“right”，“center”，“justify”，“char”。</p>
<p>char，可以设置字符，规定根据哪个字符进行内容的对齐。</p>
<p>charoff，可以设置数字，规定对齐字符的偏移量。</p>
<p>span，可以设置数字，规定列组应该跨越的列数。</p>
<p>valign，可以设置值，定义在列组合中内容的垂直排列方式。值包括“top”，“middle”，“bottom”，“baseline”。</p>
<p>width，可以设置百分比或像素值或相关长度，规定列组合的宽度。</p>
<h2 id="html列表元素">HTML列表元素</h2>
<h3 id="无序列表">无序列表</h3>
<ul>
<li>无序列表是一个项目的列表，此列项目使用粗体圆点（典型的小黑圆圈）进行标记。</li>
<li>无序列表始于<code>&lt;ul&gt;</code>标签（unordered_list）。每个列表项始于<code>&lt;li&gt;</code>标签（list）。</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>a<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>b<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>列表项内部可以使用段落、换行符、图片、链接以及其他列表等等。</li>
</ul>
<h3 id="有序列表">有序列表</h3>
<ul>
<li>有序列表始于<code>&lt;ol&gt;</code>标签（ordered_list）。每个列表项始于<code>&lt;li&gt;</code>标签（list）。</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>a<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>b<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>列表项内部可以使用段落、换行符、图片、链接以及其他列表等等。</li>
</ul>
<h3 id="定义列表">定义列表</h3>
<ul>
<li>自定义列表不仅仅是一列项目，而是项目及其注释的组合。</li>
<li>自定义列表以<code>&lt;dl&gt;</code>标签开始。每个自定义列表项以<code>&lt;dt&gt;</code>开始。每个自定义列表项的定义以<code>&lt;dd&gt;</code>开始。</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>Black hot drink<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Milk<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dd</span>&gt;</span>White cold drink<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<h3 id="列表标签">列表标签</h3>
<h4 id="ol标签">ol标签</h4>
<ul>
<li>定义有序列表。</li>
<li>属性</li>
</ul>
<p>compact，不赞成使用。</p>
<p>reversed，设置列表顺序为降序。</p>
<p>start，可以设置数字，规定有序列表的起始值。</p>
<p>type，可以设置值，规定在列表中使用的标记类型。值包括“1”，“A”，“a”，“I”，“i”。</p>
<h4 id="ul标签">ul标签</h4>
<ul>
<li>定义无序列表。</li>
<li>属性</li>
</ul>
<p>compact，不赞成使用。</p>
<p>type，可以设置值，规定在列表中使用的标记类型。值包括“disc”，“square”，“circle”。</p>
<h4 id="li标签">li标签</h4>
<ul>
<li>定义列表项目。</li>
<li>用于<code>&lt;ol&gt;</code>标签或<code>&lt;ul&gt;</code>标签中。</li>
<li>属性</li>
</ul>
<p>type，不赞成使用，值如上5+3，共8种。</p>
<p>value，不赞成使用，规定项目的数字。</p>
<h4 id="dl标签-dt标签和dd标签">dl标签、dt标签和dd标签</h4>
<ul>
<li><code>&lt;dl&gt;</code>标签定义定义列表。</li>
<li><code>&lt;dt&gt;</code>标签定义定义项目。</li>
<li><code>&lt;dd&gt;</code>标签定义定义描述。</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>一个定义列表：<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dt</span>&gt;</span>计算机<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dd</span>&gt;</span>用来计算的仪器 ... ...<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dt</span>&gt;</span>显示器<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dd</span>&gt;</span>以视觉方式显示信息的装置 ... ...<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<h4 id="dir标签和menu标签">dir标签和menu标签</h4>
<ul>
<li>已废弃，使用<code>&lt;ul&gt;</code>标签代替。</li>
</ul>
<h2 id="html块">HTML块</h2>
<ul>
<li>大多数 HTML 元素被定义为块级元素（block level element）或内联元素（inline element）。</li>
<li>块级元素在浏览器显示时，通常会以新行来开始（和结束）而内联元素在显示时通常不会以新行开始。</li>
</ul>
<h3 id="div元素">div元素</h3>
<ul>
<li><code>&lt;div&gt;</code>用于定义文档中的分区或节（division/section）。</li>
<li>HTML<code>&lt;div&gt;</code>元素是块级元素，它是可用于组合其他 HTML 元素的容器。浏览器通常会在 div 元素前后放置一个换行符。</li>
<li><code>&lt;div&gt;</code>元素没有特定的含义。除此之外，由于它属于块级元素，浏览器会在其前后显示折行。如果与 CSS 一同使用，<code>&lt;div&gt;</code>元素可用于对大的内容块设置样式属性。</li>
<li><code>&lt;div&gt;</code>元素的另一个常见的用途是文档布局。它取代了使用表格定义布局的老式方法。使用<code>&lt;div&gt;</code>元素来组合块级元素，这样就可以使用样式对它们进行格式化。如：</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--使用div分块，并用class标识和更改颜色为蓝色--&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;xxx&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color:blue&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>xxxxxx<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>xxxxxx<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>
<p>align属性，可以设置值，规定div元素中的内容的对齐方式。不赞成使用，用样式取代。<br>
值包括“left”、“right”、“center”、“justify”。</p>
<h3 id="span元素">span元素</h3>
</li>
<li>
<p><code>&lt;span&gt;</code>用于组合文档中的行内元素。</p>
</li>
<li>
<p>HTML<code>&lt;span&gt;</code>元素是内联元素，可用作文本的容器。</p>
</li>
<li>
<p><code>&lt;span&gt;</code>元素也没有特定的含义。当与 CSS 一同使用时，<code>&lt;span&gt;</code>元素可用于为部分文本设置样式属性。如：</p>
</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--在html中标识class，并使用span组合--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;tip&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>强调：<span class="tag">&lt;/<span class="name">span</span>&gt;</span>... ... ...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Css"><figure class="iseeu highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*在CSS文件中统一设置span的格式*/</span></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-class">.tip</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>:bold;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#ff9955</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>使用<code>&lt;span&gt;</code>来组合行内元素，以便通过样式来格式化它们。</li>
</ul>
<h2 id="html类标签">HTML类标签</h2>
<ul>
<li>使用class标识分类，进行内容格式化。如：</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--CSS样式--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.cities</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>:black;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>:white;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>:<span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>:<span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">  &#125; </span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">span</span><span class="selector-class">.place</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>:blue;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>:white;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>:<span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>:<span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">  &#125;    </span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--使用class名整体格式化--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cities&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>London<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  London is the capital city of England. </span><br><span class="line">  It is the most populous city in the United Kingdom, </span><br><span class="line">  with a metropolitan area of over 13 million inhabitants.</span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>A <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;place&quot;</span>&gt;</span>place<span class="tag">&lt;/<span class="name">span</span>&gt;</span>in London<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<h2 id="html内联框架">HTML内联框架</h2>
<ul>
<li>
<p>iframe可以在网页内显示网页。</p>
</li>
<li>
<p>语法：<code>&lt;iframe src=&quot;URL&quot;&gt;&lt;iframe&gt;</code></p>
</li>
<li>
<p>属性</p>
</li>
</ul>
<p>align，可以设置值，规定如何根据周围的元素对齐此框架。不赞成使用，值包括“left”，“right”，“top”，“middle”，“bottom”。</p>
<p>frameborder，可以设置0或1，规定是否显示框架周围的边框。</p>
<p>height，可以设置百分比或像素值，规定iframe的高度。</p>
<p>width，可以设置百分比或像素值，规定iframe的宽度。</p>
<p>longdesc，可以设置URL，规定一个页面，该页面包含了有关iframe的描述。</p>
<p>marginheight，可以设置像素值，定义iframe的顶部和底部的边距。</p>
<p>marginwidth，可以设置像素值，定义iframe的左边和右边的边距。</p>
<p>name，可以设置文本，规定iframe的名称。</p>
<p>referrerpolicy，可以设置值，规定iframe的引荐信息。值包括“no-referrer”，“no-referrer-when-downgrade”，“origin”，“origin-when-cross-origin”，“same-origin”，“strict-origin-when-cross-origin”，“unsafe-url”。</p>
<p>sandbox，可以设置值，启用一系列对<code>&lt;iframe&gt;</code>中内容的额外限制。值包括“”，“allow-forms”，“allow-same-origin”，“allow-scripts”，“allow-top-navigation”。</p>
<p>scrolling，可以设置值，规定是否在iframe中显示滚动条。值包括“yes”，“no”，“auto”。</p>
<p>seamless，规定<code>&lt;iframe&gt;</code>看上去像是包含文档的一部分。</p>
<p>src，可以设置URL，规定iframe中显示的文档的URL。</p>
<p>srcdoc，可以设置HTML代码，规定在<code>&lt;iframe&gt;</code>中显示的页面的HTML内容。</p>
<h2 id="html布局类标签">HTML布局类标签</h2>
<h3 id="html5语义元素">HTML5语义元素</h3>
<ul>
<li><code>&lt;header&gt;</code></li>
</ul>
<p>定义文档或节的页眉。应该被用作介绍性内容的容器。</p>
<ul>
<li><code>&lt;main&gt;</code></li>
</ul>
<p>规定文档的主内容。</p>
<ul>
<li><code>&lt;mark&gt;</code></li>
</ul>
<p>定义重要或强调的文本。</p>
<ul>
<li><code>&lt;time&gt;</code></li>
</ul>
<p>定义日期/时间。</p>
<ul>
<li><code>&lt;nav&gt;</code></li>
</ul>
<p>定义导航链接的容器。</p>
<ul>
<li><code>&lt;section&gt;</code></li>
</ul>
<p>定义文档中的节。</p>
<ul>
<li><code>&lt;article&gt;</code></li>
</ul>
<p>定义独立的自包含文章。应用场景：论坛、博客、新闻……</p>
<ul>
<li><code>&lt;aside&gt;</code></li>
</ul>
<p>定义内容之外的内容，如侧栏。aside内容应该与周围内容相关。</p>
<ul>
<li><code>&lt;footer&gt;</code></li>
</ul>
<p>定义文档或节的页脚。页脚通常包含文档的作者、版权信息、使用条款链接、联系信息等等。</p>
<ul>
<li><code>&lt;details&gt;</code></li>
</ul>
<p>定义额外的细节。</p>
<ul>
<li><code>&lt;figure&gt;</code></li>
</ul>
<p>规定自包含内容，比如图示、图表、照片、代码清单等。通过 HTML5，图片和标题能够被组合在<code>&lt;figure&gt;</code>元素中。</p>
<ul>
<li><code>&lt;figcaption&gt;</code></li>
</ul>
<p>定义<code>&lt;figure&gt;</code>元素的标题。</p>
<ul>
<li><code>&lt;summary&gt;</code></li>
</ul>
<p>定义details元素的标题。</p>
<h3 id="框架">框架</h3>
<ul>
<li>
<p>通过使用框架，你可以在同一个浏览器窗口中显示不止一个页面。每份HTML文档称为一个框架，并且每个框架都独立于其他的框架。</p>
</li>
<li>
<p>但使用框架开发人员必须同时跟踪更多的HTML文档，并且很难打印整张页面。</p>
</li>
</ul>
<h4 id="标签">标签</h4>
<ul>
<li><code>&lt;frameset&gt;</code>，定义如何将窗口分割为框架。每个 frameset 定义了一系列行或列，rows/columns 的值规定了每行或每列占据屏幕的面积。</li>
<li><code>&lt;frame&gt;</code>，定义了放置在每个框架中的 HTML 文档。</li>
<li>为不支持框架的浏览器添加<code>&lt;noframes&gt;</code>标签。</li>
<li>假如一个框架有可见边框，用户可以拖动边框来改变它的大小。为了避免这种情况发生，可以在<code>&lt;frame&gt;</code>标签中加入：noresize=“noresize”。为不支持框架的浏览器添加<code>&lt;noframes&gt;</code>标签。不能将<code>&lt;body&gt;&lt;/body&gt;</code>标签与<code>&lt;frameset&gt;&lt;/frameset&gt;</code>标签同时使用！不过，假如你添加包含一段文本的<code>&lt;noframes&gt;</code>标签，就必须将这段文字嵌套于<code>&lt;body&gt;&lt;/body&gt;</code>标签内。如</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">&quot;25%,50%,25%&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">&quot;/xxx/frame_a.html&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">&quot;/xxx/frame_b.html&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">&quot;/xxx/frame_c.html&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">noframes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>您的浏览器无法处理框架！<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">noframes</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<h2 id="html表单">HTML表单</h2>
<ul>
<li>HTML表单用于搜集不同类型的用户输入。</li>
<li><code>&lt;form&gt;</code>元素定义HTML表单。</li>
<li>表单元素是指不同类型的input元素、复选框、单选按钮、提交按钮等等。</li>
</ul>
<h3 id="form元素属性">form元素属性</h3>
<h4 id="action属性">action属性</h4>
<ul>
<li>
<p>action 属性定义提交表单时要执行的操作。通常，当用户单击“提交”按钮时，表单数据将发送到服务器上的文件中。</p>
</li>
<li>
<p>值为URL。</p>
</li>
<li>
<p>如果省略 action 属性，则将 action 设置为当前页面。</p>
<h4 id="target属性">target属性</h4>
</li>
<li>
<p>target 属性规定提交表单后在何处显示响应。</p>
</li>
<li>
<p>值包括“_blank”（新窗口），“_self”（当前窗口），“_parent”（父框架），“_top”（窗口的body中），框架名。默认为“_self”。</p>
<h4 id="method属性">method属性</h4>
</li>
<li>
<p>属性规定在提交表单时所用的 HTTP 方法（GET 或 POST）。</p>
</li>
<li>
<p>表单数据可以作为 URL 变量（使用 method=“get”）或作为 HTTP post 事务（使用 method=“post”）发送。提交表单数据时，默认的 HTTP 方法是 GET。</p>
</li>
<li>
<p>如果表单提交是被动的（比如搜索引擎查询），并且没有敏感信息。当您使用 GET 时，表单数据在页面地址栏中是可见的。GET 最适合少量数据的提交。浏览器会设定容量限制。</p>
</li>
<li>
<p>如果表单正在更新数据，或者包含敏感信息（例如密码）。POST 的安全性更好，因为在页面地址栏中被提交的数据是不可见的。</p>
<h5 id="注意事项">注意事项</h5>
</li>
<li>
<p>GET<br>
以名称/值对的形式将表单数据追加到 URL。<br>
永远不要使用 GET 发送敏感数据！（提交的表单数据在 URL 中可见！）。<br>
URL 的长度受到限制（2048 个字符）。<br>
对于用户希望将结果添加为书签的表单提交很有用。<br>
GET 适用于非安全数据，例如 Google 中的查询字符串。</p>
</li>
<li>
<p>POST<br>
将表单数据附加在 HTTP 请求的正文中（不在 URL 中显示提交的表单数据）。<br>
POST 没有大小限制，可用于发送大量数据。<br>
带有 POST 的表单提交无法添加书签。</p>
</li>
<li>
<p>如果表单数据包含敏感信息或个人信息，请务必使用 POST！</p>
<h4 id="autocomplete属性">autocomplete属性</h4>
</li>
<li>
<p>autocomplete 属性规定表单是否应打开自动完成功能。</p>
</li>
<li>
<p>启用自动完成功能后，浏览器会根据用户之前输入的值自动填写值。</p>
</li>
<li>
<p>值为on或off。</p>
<h4 id="novalidate属性">novalidate属性</h4>
</li>
<li>
<p>novalidate 属性是一个布尔属性。它规定提交时不应验证表单数据。</p>
</li>
<li>
<p>值为自身。</p>
<h4 id="accept-charset属性">accept-charset属性</h4>
</li>
<li>
<p>accept-charset 属性规定服务器用哪种字符集处理表单数据。</p>
</li>
<li>
<p>常用值有：UTF-8 - Unicode 字符编码，ISO-8859-1 - 拉丁字母表的字符编码，gb2312 - 简体中文字符集。</p>
<h4 id="enctype属性">enctype属性</h4>
</li>
<li>
<p>enctype 属性规定在发送到服务器之前应该如何对表单数据进行编码。</p>
</li>
<li>
<p>表单数据会默认编码为 “application/x-www-form-urlencoded”。就是说，在发送到服务器之前，所有字符都会进行编码（空格转换为 “+” 加号，特殊符号转换为 ASCII HEX 值）。</p>
</li>
<li>
<p>值包括“application/x-www-form-urlencoded”（编码所有），“multipart/form-data”（不对字符编码），“text/plain”（部分编码）。</p>
<h4 id="name属性">name属性</h4>
</li>
<li>
<p>name属性规定表单名称，提供了一种在脚本中引用表单的方法。</p>
</li>
<li>
<p>如果要正确地被提交，每个输入字段必须设置一个 name 属性。</p>
</li>
<li>
<p>值为自定义名称。</p>
<h4 id="rel属性">rel属性</h4>
</li>
<li>
<p>rel 属性规定当前文档和被链接文档之间的关系。</p>
</li>
<li>
<p>值包括“external”（规定引用的文档不是当前站点的一部分），“help”（链接到帮助文档），“license”（链接到文档的版权信息），“next”（集合中的下一个文档），“nofollow”    （链接到未经认可的文档，例如付费链接）（Google 使用 “nofollow” 来指定 Google 搜索蜘蛛不应跟踪该链接），“noopener”，     “noreferrer”（规定如果用户点击该超链接，则浏览器不应发送 HTTP 推荐标头），“opener”，     “prev”（集合中的上一个文档），“search”（链接到文档的搜索工具）。</p>
</li>
</ul>
<h3 id="input元素输入类型">input元素输入类型</h3>
<h4 id="文本输入">文本输入</h4>
<ul>
<li>
<p><code>&lt;input type=&quot;text&quot;&gt;</code>定义用于文本输入的单行输入字段。</p>
</li>
<li>
<p>表单本身并不可见。还要注意文本字段的默认宽度是 20 个字符。</p>
<h4 id="密码输入">密码输入</h4>
</li>
<li>
<p><code>&lt;input type=&quot;password&quot;&gt;</code>定义密码字段。</p>
</li>
<li>
<p>password 字段中的字符会被做掩码处理（显示为星号或实心圆）。</p>
<h4 id="单选按钮输入">单选按钮输入</h4>
</li>
<li>
<p><code>&lt;input type=&quot;radio&quot;&gt;</code>定义单选按钮。</p>
</li>
<li>
<p>通常单选应该有选项，如下是一个单选：</p>
</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span> <span class="attr">checked</span>/&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span> <span class="attr">checked</span>/&gt;</span>女</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<h4 id="复选框输入">复选框输入</h4>
<ul>
<li>
<p><code>&lt;input type=&quot;checkbox&quot;&gt;</code>定义复选框。</p>
</li>
<li>
<p>复选框允许用户在有限数量的选项中选择零个或多个选项。</p>
<h4 id="按钮输入">按钮输入</h4>
</li>
<li>
<p><code>&lt;input type=&quot;button&gt;</code>定义按钮。</p>
<h4 id="提交按钮">提交按钮</h4>
</li>
<li>
<p><code>&lt;input type=&quot;submit&quot;&gt;</code>定义用于向表单处理程序提交表单的按钮。</p>
</li>
<li>
<p>表单处理程序通常是包含用来处理输入数据的脚本的服务器页面。有关处理表单输入的知识，参考ASP或PHP语言。</p>
</li>
<li>
<p>表单处理程序在表单的 action 属性中指定：</p>
</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--将表单数据提交到xxx.asp页面--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;../xxx/xxx.asp&quot;</span>&gt;</span></span><br><span class="line">Name:<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;Name&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>
<p>提交按钮中的value属性值是显示在按钮上的内容。</p>
<h4 id="html5新增输入类型">HTML5新增输入类型</h4>
</li>
<li>
<p>color<br>
<code>&lt;input type=&quot;color&quot;&gt;</code>用于应该包含颜色的输入字段。根据浏览器支持，颜色选择器会出现输入字段中。</p>
</li>
<li>
<p>date<br>
<code>&lt;input type=&quot;date&quot;&gt;</code>用于应该包含日期的输入字段。根据浏览器支持，日期选择器会出现输入字段中。</p>
</li>
<li>
<p>datetime<br>
<code>&lt;input type=&quot;datetime&quot;&gt;</code>允许用户选择日期和时间（有时区）。根据浏览器支持，日期选择器会出现输入字段中。</p>
</li>
<li>
<p>datetime-local<br>
<code>&lt;input type=&quot;datetime-local&quot;&gt;</code>允许用户选择日期和时间（无时区）。根据浏览器支持，日期选择器会出现输入字段中。</p>
</li>
<li>
<p>email<br>
<code>&lt;input type=&quot;email&quot;&gt;</code>用于应该包含电子邮件地址的输入字段。根据浏览器支持，能够在被提交时自动对电子邮件地址进行验证。某些智能手机会识别 email 类型，并在键盘增加 “.com” 以匹配电子邮件输入。</p>
</li>
<li>
<p>month<br>
<code>&lt;input type=&quot;month&quot;&gt;</code>允许用户选择月份和年份。根据浏览器支持，日期选择器会出现输入字段中。</p>
</li>
<li>
<p>number<br>
<code>&lt;input type=&quot;number&quot;&gt;</code>用于应该包含数字值的输入字段。能够对数字做出限制。</p>
</li>
<li>
<p>range<br>
<code>&lt;input type=&quot;range&quot;&gt;</code>用于应该包含一定范围内的值的输入字段。根据浏览器支持，输入字段能够显示为滑块控件。</p>
</li>
<li>
<p>search<br>
<code>&lt;input type=&quot;search&quot;&gt;</code>用于搜索字段（搜索字段的表现类似常规文本字段）。</p>
</li>
<li>
<p>tel<br>
<code>&lt;input type=&quot;tel&quot;&gt;</code>用于应该包含电话号码的输入字段。目前只有 Safari 8 支持 tel 类型。</p>
</li>
<li>
<p>time<br>
<code>&lt;input type=&quot;time&quot;&gt;</code>允许用户选择时间（无时区）。根据浏览器支持，时间选择器会出现输入字段中。</p>
</li>
<li>
<p>url<br>
<code>&lt;input type=&quot;url&quot;&gt;</code>用于应该包含 URL 地址的输入字段。根据浏览器支持，在提交时能够自动验证 url 字段。某些智能手机识别 url 类型，并向键盘添加 “.com” 以匹配 url 输入。</p>
</li>
<li>
<p>week<br>
<code>&lt;input type=&quot;week&quot;&gt;</code>允许用户选择周和年。根据浏览器支持，日期选择器会出现输入字段中。</p>
</li>
<li>
<p>image<br>
<code>&lt;input type=&quot;image&quot;&gt;</code>获取点击图像时的x和y坐标。</p>
</li>
</ul>
<h3 id="input元素属性">input元素属性</h3>
<ul>
<li>value，值为自定义字段，规定输入字段的初始值。</li>
<li>readonly，不需要值，规定输入字段只读不可修改。</li>
<li>disabled，不需要值，规定输入字段禁用，不可用不可点击不会被提交。</li>
<li>size，值为字符数，规定输入字段框的尺寸。</li>
<li>maxlength，值为数字，规定输入字段允许的最大长度。<br>
如设置 maxlength 属性，则输入控件不会接受超过所允许数的字符。<br>
该属性不会提供任何反馈。如果需要提醒用户，则必须编写 JavaScript 代码。<br>
输入限制并非万无一失。JavaScript 提供了很多方法来增加非法输入。如需安全地限制输入，则接受者（服务器）必须同时对限制进行检查。</li>
<li>autocomplete，值为on或off，规定表单或输入字段是否应该自动完成。当自动完成开启，浏览器会基于用户之前的输入值自动填写值。<br>
可以把表单的 autocomplete 设置为 on，同时把特定的输入字段设置为 off，反之亦然。<br>
autocomplete 属性适用于<code>&lt;form&gt;</code>以及如下<code>&lt;input&gt;</code>类型：text、search、url、tel、email、password、datepickers、range 以及 color。</li>
<li>autofocus，布尔属性，如果设置，则规定当页面加载时，<code>&lt;input&gt;</code>元素应该自动获得焦点。</li>
<li>form，规定<code>&lt;input&gt;</code>元素所属的一个或多个表单。如需引用一个以上的表单，请使用空格分隔的表单 id 列表。<br>
即表单外使用<code>&lt;input&gt;</code>标签。</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;xxx.php&quot;</span> <span class="attr">id</span>=<span class="string">&quot;form1&quot;</span>&gt;</span></span><br><span class="line">   First name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;fname&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> Last name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;lname&quot;</span> <span class="attr">form</span>=<span class="string">&quot;form1&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>
<p>formaction，规定当提交表单时处理该输入控件文件的URL。<br>
formaction 属性覆盖<code>&lt;form&gt;</code>元素的 action 属性。<br>
formaction 属性适用于<code>type=&quot;submit&quot;</code>以及<code>type=&quot;image&quot;</code>。</p>
</li>
<li>
<p>formenctype，规定表单数据提交服务器时编码规则。<br>
formenctype 属性覆盖<code>&lt;form&gt;</code>元素的 enctype 属性。<br>
formenctype 属性适用于<code>type=&quot;submit&quot;</code>以及<code>type=&quot;image&quot;</code>。</p>
</li>
<li>
<p>formmethod，定义用以向action URL发送表单数据的HTTP方法。<br>
formmethod 属性覆盖<code>&lt;form&gt;</code>元素的 method 属性。<br>
formmethod 属性适用于<code>type=&quot;submit&quot;</code>以及<code>type=&quot;image&quot;</code>。</p>
</li>
<li>
<p>formnovalidate，布尔属性，设置时，规定提交表单时不对<code>&lt;input&gt;</code>元素进行验证。<br>
formnovalidate 属性覆盖<code>&lt;form&gt;</code>元素的 novalidate 属性。<br>
formnovalidate 属性可用于<code>type=&quot;submit&quot;</code>。</p>
</li>
<li>
<p>formtarget，规定名称或关键词指示提交表单后何处显示接收到的响应。<br>
formtarget 属性会覆盖<code>&lt;form&gt;</code>元素的 target 属性。<br>
formtarget 属性可与<code>type=&quot;submit&quot;</code>和<code>type=&quot;image&quot;</code>使用。</p>
</li>
<li>
<p>height和width，规定<code>&lt;input&gt;</code>元素的高度和宽度。<br>
height 和 width 属性仅用于<code>&lt;input type=&quot;image&quot;&gt;</code>。</p>
</li>
<li>
<p>list，引用的<code>&lt;datalist&gt;</code>元素中包含了<code>&lt;input&gt;</code>元素的预定义选项。</p>
</li>
<li>
<p>min和max，规定<code>&lt;input&gt;</code>元素的最小值和最大值。<br>
min 和 max 属性适用于如需输入类型：number、range、date、datetime、datetime-local、month、time 以及 week。</p>
</li>
<li>
<p>multiple，布尔属性，设置时，规定允许用户在<code>&lt;input&gt;</code>元素中输入一个以上的值。<br>
multiple 属性适用于以下输入类型：email 和 file。</p>
</li>
<li>
<p>pattern，规定用于检查<code>&lt;input&gt;</code>元素值的正则表达式。<br>
pattern 属性适用于以下输入类型：text、search、url、tel、email、password。</p>
</li>
<li>
<p>placeholder，规定用以描述输入字段预期值的提示（样本值或有关格式的简短描述）。<br>
该提示会在用户输入值之前显示在输入字段中。<br>
placeholder 属性适用于以下输入类型：text、search、url、tel、email 以及 password。</p>
</li>
<li>
<p>required，布尔属性，设置时，规定在提交表单之前必须填写输入字段。<br>
required 属性适用于以下输入类型：text、search、url、tel、email、password、date pickers、number、checkbox、radio、file。</p>
</li>
<li>
<p>step，规定<code>&lt;input&gt;</code>元素的合法数字间隔。<br>
step 属性可与 max 以及 min 属性一同使用，来创建合法值的范围。<br>
step 属性适用于以下输入类型：number、range、date、datetime、datetime-local、month、time 以及 week。</p>
<h3 id="select-元素"><code>&lt;select&gt;</code>元素</h3>
</li>
<li>
<p>定义下拉列表</p>
</li>
<li>
<p><code>&lt;option&gt;</code>元素定义待选择的选项。列表通常会把首个选项显示为被选选项。通过添加 selected 属性来定义预定义选项。</p>
</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;cars&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;volvo&quot;</span>&gt;</span>Volvo<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;saab&quot;</span>&gt;</span>Saab<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;fiat&quot;</span>&gt;</span>Fiat<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;audi&quot;</span>&gt;</span>Audi<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<h3 id="textarea元素">textarea元素</h3>
<ul>
<li>定义多行输入字段（文本域）。</li>
</ul>
<h3 id="button元素">button元素</h3>
<ul>
<li>定义可点击的按钮。</li>
</ul>
<h2 id="html媒体">HTML媒体</h2>
<ul>
<li>Web 上的多媒体指的是音效、音乐、视频和动画。</li>
<li>插件（Plug-in）是扩展浏览器标准功能的计算机程序。</li>
</ul>
<h3 id="html对象">HTML对象</h3>
<h4 id="object元素">object元素</h4>
<ul>
<li>
<p><code>&lt;object&gt;</code>元素定义 HTML 文档中的嵌入式对象。</p>
</li>
<li>
<p>它旨在将插件（例如 Java applet、PDF 阅读器和 Flash 播放器）嵌入网页中，但也可以用于将 HTML 包含在 HTML 中。</p>
<h4 id="embed元素">embed元素</h4>
</li>
<li>
<p><code>&lt;embed&gt;</code>元素也可定义了 HTML 文档中的嵌入式对象，也可用于在 HTML 中包含 HTML。</p>
</li>
<li>
<p>Web 浏览器长期以来一直支持<code>&lt;embed&gt;</code>元素。但是，它不属于 HTML5 之前的 HTML 规范的一部分。</p>
</li>
<li>
<p><code>&lt;embed&gt;</code>元素没有结束标记。它无法包含替代文本。</p>
</li>
</ul>
<h3 id="html音频">HTML音频</h3>
<ul>
<li>使用<code>&lt;embed&gt;</code>元素嵌入MP3文件。<br>
<code>&lt;embed&gt;</code>标签在 HTML 4 中是无效的。页面无法通过 HTML 4 验证。<br>
不同的浏览器对音频格式的支持也不同。<br>
如果浏览器不支持该文件格式，没有插件的话就无法播放该音频。<br>
如果用户的计算机未安装插件，无法播放音频。<br>
如果把该文件转换为其他格式，仍然无法在所有浏览器中播放。</li>
<li>使用<code>&lt;object&gt;</code>元素嵌入MP3文件。<br>
不同的浏览器对音频格式的支持也不同。<br>
如果浏览器不支持该文件格式，没有插件的话就无法播放该音频。<br>
如果用户的计算机未安装插件，无法播放音频。<br>
如果把该文件转换为其他格式，仍然无法在所有浏览器中播放。</li>
<li>使用HTML5<code>&lt;audio&gt;</code>元素播放音频。<br>
<code>&lt;audio&gt;</code>标签在 HTML 4 中是无效的。您的页面无法通过 HTML 4 验证。<br>
必须把音频文件转换为不同的格式。<br>
<code>&lt;audio&gt;</code>元素在老式浏览器中不起作用。</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">controls</span>=<span class="string">&quot;controls&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;song.mp3&quot;</span> <span class="attr">type</span>=<span class="string">&quot;audio/mp3&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;song.ogg&quot;</span> <span class="attr">type</span>=<span class="string">&quot;audio/ogg&quot;</span> /&gt;</span></span><br><span class="line">Your browser does not support this audio format.</span><br><span class="line"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>
<p>最好的HTML解决方法是<code>&lt;audio&gt;</code>标签与<code>&lt;embed&gt;</code>标签混用。</p>
</li>
<li>
<p>使用JS和播放器播放音频。</p>
<h5 id="audio标签属性">audio标签属性</h5>
</li>
<li>
<p>autoplay，设置该属性时，音频就绪后马上播放。</p>
</li>
<li>
<p>controls，设置该属性时，显示控件。</p>
</li>
<li>
<p>loop，出现该属性时，音频循环播放。</p>
</li>
<li>
<p>muted，出现该属性时，规定音频静音。</p>
</li>
<li>
<p>preload，出现该属性时，在页面加载时加载音频，预备播放。</p>
</li>
<li>
<p>src，值为URL，播放音频的URL。</p>
</li>
</ul>
<h3 id="html视频">HTML视频</h3>
<ul>
<li>
<p>使用<code>&lt;embed&gt;</code>标签。<br>
HTML4 无法识别<code>&lt;embed&gt;</code>标签。您的页面无法通过验证。<br>
如果浏览器不支持 Flash，那么视频将无法播放<br>
iPad 和 iPhone 不能显示 Flash 视频。<br>
如果您将视频转换为其他格式，那么它仍然不能在所有浏览器中播放。</p>
</li>
<li>
<p>使用<code>&lt;object&gt;</code>标签。<br>
如果浏览器不支持 Flash，将无法播放视频。<br>
iPad 和 iPhone 不能显示 Flash 视频。<br>
如果您将视频转换为其他格式，那么它仍然不能在所有浏览器中播放。</p>
</li>
<li>
<p>使用<code>&lt;video&gt;</code>标签。<br>
<code>&lt;video&gt; </code>，是 HTML 5 中的新标签，作用是在 HTML 页面中嵌入视频元素。<br>
您必须把视频转换为很多不同的格式。<br>
<code>&lt;video&gt;</code>元素在老式浏览器中无效。<br>
<code>&lt;video&gt;</code>元素无法通过 HTML 4 和 XHTML 验证</p>
</li>
<li>
<p>最好的HTML解决方法：HTML5+<code>&lt;object&gt;</code>+<code>&lt;embed&gt;</code>。</p>
<h4 id="video标签属性">video标签属性</h4>
</li>
<li>
<p>autoplay，设置该属性时，视频就绪后马上播放。</p>
</li>
<li>
<p>controls，设置该属性时，显示控件。</p>
</li>
<li>
<p>height，值为像素值，设置播放器高度。</p>
</li>
<li>
<p>width，值为像素值，设置播放器宽度。</p>
</li>
<li>
<p>loop，出现该属性时，视频循环播放。</p>
</li>
<li>
<p>muted，出现该属性时，规定视频静音。</p>
</li>
<li>
<p>poster，值为URL，规定视频下载时现实的图像，或播放按钮前显示的图像。</p>
</li>
<li>
<p>preload，出现该属性时，在页面加载时加载视频，预备播放。</p>
</li>
<li>
<p>src，值为URL，播放音频的URL。</p>
</li>
</ul>
<h2 id="html5新增元素">HTML5新增元素</h2>
<ul>
<li>
<p><code>&lt;datalist&gt;</code><br>
<code>&lt;datalist&gt;</code>元素为<code>&lt;input&gt;</code>元素规定预定义选项列表。用户会在他们输入数据时看到预定义选项的下拉列表。<code>&lt;input&gt;</code>元素的 list 属性必须引用<code>&lt;datalist&gt;</code>元素的 id 属性</p>
</li>
<li>
<p><code>&lt;keygen&gt;</code></p>
</li>
<li>
<p><code>&lt;output&gt;</code></p>
<h3 id="fieldset元素">fieldset元素</h3>
</li>
<li>
<p><code>&lt;fieldset&gt;</code>元素组合表单中的相关数据。</p>
</li>
<li>
<p><code>&lt;legend&gt;</code>元素为<code>&lt;fieldset&gt;</code>元素定义标题。</p>
</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">legend</span>&gt;</span>Personal information:<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">    First name:<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;firstname&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    Last name:<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;lastname&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<h1>HTML id属性</h1>
<ul>
<li>
<p>HTML id 属性用于HTML 元素指定唯一的id。一个 HTML文档中不能存在多个有相同 id 的元素。</p>
</li>
<li>
<p>id 的语法是：写一个井号 (#)，后跟一个 id 名称。然后，在花括号 {} 中定义 CSS 属性。如：</p>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-id">#London</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: lightblue;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: black;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">&quot;London&quot;</span>&gt;</span>My City<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
</li>
<li>
<p>id对大小写敏感，且至少包含一个字符，不能为空白字符（空格、制表符等）。</p>
</li>
<li>
<p>id还可以用于实现书签。</p>
</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--先用id创建书签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">id</span>=<span class="string">&quot;C4&quot;</span>&gt;</span>第四章<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--接着使用链接元素跳转--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#C4&quot;</span>&gt;</span>跳转到第四章<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--或者跳转到另一页的书签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;test.html#C4&quot;</span>&gt;</span>跳转到第四章<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>CSS和JS可以使用id属性选取元素或设置样式。</li>
<li>Class 与 ID 的差异<br>
同一个类名可以由多个 HTML 元素使用，而一个 id 名称只能由页面中的一个 HTML 元素使用。</li>
</ul>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows下Python3.11.4的安装记录</title>
    <url>/%E6%97%A5%E5%B8%B8/8/</url>
    <content><![CDATA[<p>记录一次安装Python</p>
<p>关键词：Python</p>
<span id="more"></span>
<hr>
<!-- toc -->
<h1>下载Python安装包</h1>
<p><a class="link" href="https://www.python.org/downloads/windows/">官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>选择尽量较新的Python版本下载。</p>
<h1>安装Python</h1>
<p>打开下载的Python安装包，选择<code>Customize installation</code>客制化安装，记得勾选下面的“Add python.exe to PATH”。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/8_py1.jpg" alt="安装步骤1"><figcaption>安装步骤1</figcaption></figure></p>
<p>接着默认勾选：</p>
<ul>
<li>pip：包管理器，下载包时使用。建议勾选上</li>
</ul>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/8_py2.jpg" alt="安装步骤2"><figcaption>安装步骤2</figcaption></figure></p>
<p>再接着更改安装路径，建议安装在非系统盘。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/8_py3.jpg" alt="安装步骤3"><figcaption>安装步骤3</figcaption></figure></p>
<p>等待安装完成即可。</p>
<h1>测试Python</h1>
<p>按下<code>Win+R</code>输入<code>cmd</code>打开命令窗口，输入下面命令验证是否安装成功。</p>
<div class="highlight-container" data-rel="Cmd"><figure class="iseeu highlight cmd"><table><tr><td class="code"><pre><span class="line">python -V</span><br></pre></td></tr></table></figure></div>
<p>如果出现版本号，即为安装成功。</p>
<h1>附：更改Python的pip安装路径</h1>
<p>建议将pip安装的包放至非系统盘。进入Python的安装路径，如我的在<code>D:\Pyhton\Lib</code>，寻找文件<code>site.py</code>，使用记事本打开。使用<code>ctrl+f</code>查找关键字<code>USER_SITE</code>等字，将路径更改为自定义的路径。我更改情况如下图。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/8_py.jpg" alt="更改路径"><figcaption>更改路径</figcaption></figure></p>
<p>更改路径后，打开cmd，使用下面指令安装numpy包。</p>
<div class="highlight-container" data-rel="Cmd"><figure class="iseeu highlight cmd"><table><tr><td class="code"><pre><span class="line">pip install numpy</span><br></pre></td></tr></table></figure></div>
<p>安装成功后，再使用下面指令查看numpy包的安装位置。</p>
<div class="highlight-container" data-rel="Cmd"><figure class="iseeu highlight cmd"><table><tr><td class="code"><pre><span class="line">pip show numpy</span><br></pre></td></tr></table></figure></div>
<p>我成功更改pip的安装路径，新下载的numpy包位于<code>D:\Pyhton\Lib\site-packages</code>。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/8_py4.jpg" alt="更改路径后"><figcaption>更改路径后</figcaption></figure></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>个人整理的C++学习路线</title>
    <url>/%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/cpproad/</url>
    <content><![CDATA[<p>个人整理的C++大概学习路线</p>
<p>关键词：C++</p>
<span id="more"></span>
<hr>
<p><em>by：Fingsinz，Reference：<a class="link" href="https://roadmap.sh/cpp">C++ Developer Roadmap <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></em></p>
<h2 id="c-语言介绍">C++ 语言介绍</h2>
<h3 id="什么是c">什么是C++</h3>
<ul>
<li>
<p>C++作为C编程语言的扩展，提供了类和继承等面向对象的特性。</p>
</li>
<li>
<p>C++被广泛应用于游戏开发、系统编程、嵌入式系统和高性能计算等各种应用中。</p>
</li>
<li>
<p>C++是一种静态类型语言，这意味着变量的类型是在编译过程中确定的，并且C++有一个称为C++标准库的扩展库，它为各种任务提供了一组丰富的函数、算法和数据结构。</p>
</li>
</ul>
<h3 id="为什么使用c">为什么使用C++</h3>
<ul>
<li>
<p>高性能：C++旨在提供高性能和高效率。它提供了对系统资源的细粒度控制，使优化软件变得更容易。</p>
</li>
<li>
<p>可移植性：不同的计算机体系结构和操作系统都支持C++，允许您编写在各种平台上运行的可移植代码，而无需进行重大修改。</p>
</li>
<li>
<p>面向对象编程：C++支持面向对象编程(OOP)——一种允许您使用类和对象设计程序的范例，从而实现更好的代码组织和可重用性。</p>
</li>
<li>
<p>支持低级和高级编程：C++允许您编写低级代码，如内存操作，以及高级抽象，如创建类和使用标准模板库(STL)。</p>
</li>
<li>
<p>丰富的库支持：C++提供了大量的库和工具，如标准模板库(STL)、Boost和Qt等，它们可以帮助您开发项目并使其更高效。</p>
</li>
<li>
<p>兼容C语言：C++可以与C结合使用，提供两种语言的功能，并允许您重用现有的C代码。通过合并C++特性，您可以增强代码并改进其功能。</p>
</li>
<li>
<p>活跃的社区支持：C++已经存在了很长一段时间，并且拥有一个庞大而活跃的用户社区，他们为语言的发展做出了贡献，表达了新的想法，并参与了有助于语言进一步发展的讨论。这让你更容易找到解决问题的方法。</p>
</li>
</ul>
<h3 id="c和c-的区别">C和C++的区别</h3>
<ul>
<li>语法语义区别、代码可重用性和模块化、错误处理</li>
</ul>
<h3 id="c-版本">C++版本</h3>
<ul>
<li>
<p>C++0x：指的是C++ 11的工作名称，在其最终发布之前，它以前被称为C++ 0x。C++ 11是2011年发布的C++语言标准的主要修订版，它为该语言带来了几个新特性和改进。</p>
<ul>
<li><code>auto</code>、基于范围的循环：<code>for(int i : array)</code>、匿名Lambda函数、<code>nullptr</code>、右值引用和移动语义、可变模板、静态判断<code>assert</code>、支持线程</li>
</ul>
</li>
<li>
<p>C++14：指的是2014年发布的C++版本。</p>
<ul>
<li>范式Lambda、<code>decltype</code>关键字、可变模板</li>
</ul>
</li>
<li>
<p>C++17：也称为C++ 1z，是2017年12月发布的C++编程语言版本。</p>
<ul>
<li>if中的初始化：<code>if(auto x = map.find(key); x != map.end())</code>、结构化绑定声明、<code>inline</code>变量、折叠表达式、<code>constexpr if </code>语句、改进Lambda表达式、标准文件系统库、<code>string_view</code>标准库、对标准库算法支持并行运算</li>
</ul>
</li>
<li>
<p>C++20：C++ 20是2020年发布的C++版本。</p>
<ul>
<li><code>concept</code>关键字；基于范围的处理序列；协同程序；<code>constexpr</code>和<code>consteval</code>关键字：带有<code>constexpr</code>标记的函数可以在编译时或运行时执行，而带有<code>consteval</code>标记的函数只能在编译时执行；最新C++</li>
</ul>
</li>
</ul>
<h2 id="配置c-开发环境">配置C++开发环境</h2>
<h3 id="安装c">安装C++</h3>
<ul>
<li>在开始用C++编程之前，您需要在系统上安装一个编译器。编译器是一个将你写的C++代码转换成计算机可以运行的可执行文件的程序。</li>
</ul>
<h3 id="编译器">编译器</h3>
<ul>
<li>
<p>编译器是一种计算机程序，它将用一种编程语言编写的源代码翻译成另一种语言，通常是机器代码或汇编代码，可以由计算机处理器直接执行。在c++环境中，编译器将您编写的c++源代码转换为可执行程序。</p>
</li>
<li>
<p>常见编译器</p>
<ul>
<li>GNU Compiler Collection（GCC）、Clang、Microsoft Visual C++（MSVC）、Intel C++ Compiler（ICC）</li>
</ul>
</li>
<li>
<p>编译器状态：C++的编译过程可以分为四个主要阶段：预处理、编译、汇编和链接。每个阶段执行一个特定的任务，最终将源代码转换为可执行程序。</p>
<ul>
<li>
<p>预处理（Preprocessing）：第一个阶段是源代码的预处理。预处理器在实际编译过程之前修改源代码。在这个阶段，将展开包含的头文件，替换宏，并处理条件编译语句。</p>
</li>
<li>
<p>编译（Compilation）：第二阶段是实际编译经过预处理的源代码。编译器将修改后的源代码转换为中间表示形式，通常特定于目标处理器体系结构。此步骤还包括执行语法检查、语义分析，并为源代码中遇到的任何问题生成错误消息。</p>
</li>
<li>
<p>汇编（Assembly）：第三阶段是将编译器的中间表示转换成汇编语言。此阶段使用特定于目标处理器体系结构的助记符和语法生成汇编代码。然后，汇编程序将该汇编代码转换为目标代码(机器代码)。</p>
</li>
<li>
<p>链接（Link）：第四阶段是将目标代码与必要的库和其他目标文件链接起来。在此阶段，链接器合并多个目标文件和库，解析来自其他模块或库的外部引用，为函数和变量分配内存地址，并生成可在目标平台上运行的可执行文件。</p>
</li>
</ul>
</li>
</ul>
<h3 id="编辑器-集成开发环境-ide">编辑器、集成开发环境（IDE）</h3>
<ul>
<li>
<p>代码编辑器是专门为编辑、管理和编写源代码而设计的程序。它们提供了广泛的功能，使开发过程更容易和更快。</p>
</li>
<li>
<p>Visual Studio、Visual Studio Code、CLion、Sublime Text、CodeBlock</p>
</li>
</ul>
<h3 id="运行第一个c-程序">运行第一个C++程序</h3>
<ul>
<li>Hello_World.cpp</li>
</ul>
<h2 id="基础语法">基础语法</h2>
<h3 id="基础操作">基础操作</h3>
<ul>
<li>
<p>算术运算符：<code>+</code>、<code>-</code>、<code>*</code>、<code>/</code>、<code>%</code>、<code>++</code>、<code>--</code></p>
</li>
<li>
<p>逻辑运算符：<code>and</code>（<code>&amp;&amp;</code>）、<code>or</code>（<code>||</code>）、<code>not</code>（<code>!</code>）</p>
</li>
<li>
<p>位运算符：<code>&amp;</code>、<code>|</code>、<code>^</code>、<code>~</code>、<code>&lt;&lt;</code>、<code>&gt;&gt;</code></p>
</li>
<li>
<p>条件：<code>if</code>/<code>switch</code></p>
</li>
<li>
<p>循环：<code>for</code>/<code>while</code></p>
</li>
</ul>
<h3 id="函数">函数</h3>
<ul>
<li>
<p>函数声明：仅有返回类型、函数名称和参数。</p>
</li>
<li>
<p>函数定义：具有详细的函数体。</p>
</li>
<li>
<p>函数原型：函数原型是没有函数体的函数声明，它告诉编译器函数的名称、返回类型和参数。</p>
</li>
<li>
<p>普通函数：函数是执行特定任务的一组语句，在程序中组织为一个单独的单元。</p>
<ul>
<li>标准库函数、自定义函数</li>
</ul>
</li>
<li>
<p>运算符函数</p>
<ul>
<li>
<p>C++中的运算符是对数据执行各种操作的符号，如算术、比较和逻辑操作。它们用于操作和计算表达式和变量。</p>
</li>
<li>
<p>赋值运算符；逻辑运算符；关系运算符；算术运算符</p>
</li>
</ul>
</li>
<li>
<p>Lamda匿名函数</p>
</li>
</ul>
<h3 id="数据类型">数据类型</h3>
<ul>
<li>
<p>静态数据类型</p>
<ul>
<li>意味着变量的数据类型是在编译时，在程序执行之前确定的。</li>
</ul>
</li>
<li>
<p>动态数据类型</p>
<ul>
<li>
<p>意味着在运行时确定变量的数据类型。</p>
</li>
<li>
<p><code>void*</code>指针：<code>void*</code>指针是一种泛型指针，可以指向任何数据类型的对象。它们可以用于存储对任何类型对象的引用，而无需知道对象的特定类型。</p>
</li>
<li>
<p><code>std::any</code>（C++17）：<code>std::any</code>类，它代表了任何类型的单个值的广义类型安全容器。</p>
</li>
<li>
<p><code>void*</code>指针和<code>std::any</code>都有性能影响，因为在运行时进行了额外的类型检查和类型转换。它们应该谨慎使用，只有在绝对必要的时候才使用。</p>
</li>
</ul>
</li>
<li>
<p>运行时类型标识RTTI</p>
<ul>
<li>
<p>允许在程序执行期间获取对象的类型信息。这在使用动态类型时非常有用，因为对象的类型可以在运行时更改。</p>
</li>
<li>
<p><code>typeid</code>操作符、<code>dynamic_cast</code>操作符</p>
</li>
<li>
<p>使用RTTI可能会有一些性能开销，因为它需要在运行时存储和处理编译器生成的额外信息。</p>
</li>
</ul>
</li>
</ul>
<h3 id="指针和引用">指针和引用</h3>
<ul>
<li>
<p>普通指针：字符指针、整型指针、浮点型指针、结构体指针、函数指针……</p>
</li>
<li>
<p>原始指针</p>
<ul>
<li>
<p>原始指针是直接保存内存地址的低级结构。它们可以用于手动分配内存、创建动态数组和有效地传递值等。</p>
</li>
<li>
<p><code>new</code>/<code>delete</code>操作符</p>
</li>
<li>
<p>内存泄漏</p>
</li>
</ul>
</li>
<li>
<p>智能指针</p>
<ul>
<li><code>unique_ptr</code>、<code>shared_ptr</code>、<code>weak_ptr</code></li>
</ul>
</li>
<li>
<p>内存模型</p>
<ul>
<li>栈内存、堆内存、数据段、代码段</li>
</ul>
</li>
<li>
<p>对象生存期</p>
<ul>
<li>静态存储持续期、线程存储持续期、自动存储持续期、动态存储持续期</li>
</ul>
</li>
<li>
<p>引用</p>
</li>
</ul>
<h3 id="结构体和类">结构体和类</h3>
<ul>
<li>
<p>面向对象编程：类、封装、继承多态</p>
</li>
<li>
<p>静态多态</p>
<ul>
<li>
<p>静态多态性，也称为编译时多态性，是一种在编译时而不是在运行时解析类型和方法调用的多态性。这通常是通过使用C++中的函数重载和模板来实现的。</p>
</li>
<li>
<p>函数重载：一种创建具有相同名称但不同参数列表的多个函数的方法。编译器根据调用函数时使用的参数类型和数量确定要调用的正确函数。</p>
</li>
<li>
<p>模板：允许创建泛型函数或类。特定类型的实际代码是在编译时生成的，这避免了运行时多态的开销。模板的使用是c++中实现静态多态性的主要技术。</p>
</li>
</ul>
</li>
<li>
<p>动态多态</p>
<ul>
<li>
<p>动态多态性是通过虚函数实现的，虚函数是用virtual关键字标记的基类的成员函数。在基类中指定虚函数时，可以在任何派生类中重写虚函数，以提供不同的实现。</p>
</li>
<li>
<p>虚函数：在基类的方法声明中使用virtual关键字。这告诉编译器该方法应该被视为虚方法，允许它被派生类覆盖。</p>
</li>
<li>
<p>虚表：虚表(或Vtable)是C++编译器用来支持动态多态性的一种机制。在动态多态性中，根据实际的对象类型，在运行时调用适当的函数。</p>
</li>
</ul>
</li>
<li>
<p>多继承：一个类可以从多个父类继承特征（数据成员和成员函数），一个类可以有多个基类。</p>
</li>
<li>
<p>菱形继承：一个类派生自两个或多个类，而这些类又派生自一个公共基类</p>
</li>
</ul>
<h3 id="构建代码库">构建代码库</h3>
<ul>
<li>
<p>代码分割、代码风格、头文件和Cpp文件、头文件警卫、命名空间</p>
</li>
<li>
<p>作用域</p>
<ul>
<li>全局作用域、局部作用域、名称空间作用域、类作用域</li>
</ul>
</li>
<li>
<p>前向声明：类前向声明、函数前向声明、枚举和<code>typedef</code>前向声明</p>
</li>
</ul>
<h2 id="语言概念">语言概念</h2>
<h3 id="习惯术语">习惯术语</h3>
<ul>
<li>
<p>auto关键字：用于自动类型推导。</p>
</li>
<li>
<p>类型转换：<code>static_cast</code>、<code>const_cast</code>、<code>dynamic_cast</code>、<code>reinterpret_cast</code></p>
</li>
<li>
<p>未定义行为：指由于违反语言规则而无法预测程序行为的情况。</p>
</li>
<li>
<p>参数依赖查找、命名修饰、宏定义、定义并初始化（资源获取即初始化RAII）、指针到实现（Pimpl）、奇异递归模板模式（CRTP）、不可复制/不可移动、擦除、复制和交换、惰性复制</p>
</li>
</ul>
<h3 id="调试器">调试器</h3>
<ul>
<li>
<p>理解调试信息：错误、警告、通知</p>
</li>
<li>
<p>调试器符号：内部调试符号、外部调试符号。</p>
</li>
<li>
<p>WinDbg：一个功能强大的Windows应用程序调试器。</p>
</li>
<li>
<p>GDB：GNU Project Debugger，一个功能强大的命令行调试器。</p>
</li>
</ul>
<h3 id="构建系统">构建系统</h3>
<ul>
<li>Cmake、Makefile、Ninja</li>
</ul>
<h2 id="异常处理">异常处理</h2>
<h3 id="异常">异常</h3>
<ul>
<li>
<p><code>try</code>关键字：定义应该监视异常的代码块</p>
</li>
<li>
<p><code>catch</code>关键字：指定要捕获的异常类型以及异常发生时应执行的代码块。</p>
</li>
<li>
<p><code>throw</code>关键字：抛出一个异常，该异常将被捕获并由适当的捕获块处理</p>
</li>
<li>
<p><code>noexcept</code>关键字：指定一个函数，该函数不会抛出异常，也不会在其作用域中抛出异常时终止程序。</p>
</li>
</ul>
<h3 id="标准异常">标准异常</h3>
<ul>
<li>
<p><code>std::exception</code>：所有标准异常的基类。</p>
</li>
<li>
<p><code>std::logic_error</code>：表示程序可以静态检测到的错误。</p>
</li>
<li>
<p><code>std::runtime_error</code>：表示程序执行期间发生的错误。</p>
</li>
</ul>
<h3 id="退出代码">退出代码</h3>
<ul>
<li>
<p>退出码，也称为“返回码”或“状态码”，是程序完成执行后返回给调用环境(通常是操作系统)的数值。这些代码用于指示程序执行的成功或失败。</p>
</li>
<li>
<p>0是成功执行的标准退出代码，而非零退出代码通常表示错误或其他异常情况。非零退出码的实际含义在不同的应用程序或系统之间可能有所不同。</p>
</li>
<li>
<p>在C++中，您可以使用<code>return</code>语句从<code>main</code>函数返回退出代码，也可以使用<code>exit()</code>函数，它是C++标准库的一部分。</p>
</li>
</ul>
<h3 id="访问冲突">访问冲突</h3>
<ul>
<li>
<p>访问冲突是程序试图访问非法内存位置时发生的一种特定类型的错误。</p>
</li>
<li>
<p>可能引起原因：取消引用空指针或无效指针；访问数组越界；对由用户或操作系统释放的内存进行阅读或写。</p>
</li>
</ul>
<h2 id="标准模板库stl">标准模板库STL</h2>
<h3 id="标准输入输出流">标准输入输出流</h3>
<ul>
<li><code>iostream</code>是C++标准库中的一个头文件，它提供了基本输入和输出(I/O)操作的功能。I/O流促进了程序与各种源(如控制台、文件或其他程序)之间的通信。</li>
</ul>
<h3 id="处理日期和时间">处理日期和时间</h3>
<ul>
<li>使用<code>chrono</code>库来处理日期和时间，它是标准库(Standard library, STL)的一部分。<code>chrono</code>库提供了各种数据类型和函数来表示和操作时间持续时间、时间点和时钟。</li>
</ul>
<h3 id="算法">算法</h3>
<ul>
<li>C++中的标准模板库(Standard Template Library, STL)提供了一组泛型算法，用于处理各种容器类。这些算法是作为函数实现的，可以应用于不同的数据结构，如数组、向量、列表等。算法的主要头文件是<code>&lt;algorithm&gt;</code></li>
</ul>
<h3 id="迭代器">迭代器</h3>
<ul>
<li>
<p>迭代器是C++标准库(STL)中的对象，帮助我们遍历数组、列表和向量等容器。本质上，它们充当容器类和算法之间的桥梁。迭代器的行为类似于指针，但提供了一种更通用和抽象的方式来访问容器中的元素。</p>
</li>
<li>
<p>输入迭代器、输出迭代器、前向迭代器、反向迭代器、双向迭代器、随机访问迭代器</p>
</li>
</ul>
<h3 id="容器">容器</h3>
<ul>
<li>Pair对、Vector向量、List列表、String字符串、Stack栈、Queue队列、Deque双向队列、Priority_queue优先队列、Set集合（unordered_set、multiset、unordered_multiset）、Map映射（unordered_map、multimap、unordered_multimap）、Bitset压位</li>
</ul>
<h3 id="多线程">多线程</h3>
<ul>
<li>
<p>多线程是指在单个进程或程序中并发执行多个线程。它允许并行执行多个任务，从而提高了应用程序的性能和效率。</p>
</li>
<li>
<p>线程创建、带参数线程、互斥锁和锁</p>
</li>
</ul>
<h2 id="模板编程">模板编程</h2>
<h3 id="可变模板">可变模板</h3>
<ul>
<li>可变模板是C++ 11中的一个特性，它允许定义具有可变数量参数的模板。当您需要编写一个可以接受不同数量和类型参数的函数或类时，这尤其有用。</li>
</ul>
<h3 id="模板专门化">模板专门化</h3>
<ul>
<li>
<p>全模板专门化：完全模板专门化允许在与特定类型参数集一起使用时为模板提供特定的实现或行为。</p>
</li>
<li>
<p>部分模板专门化：允许为可能的类型参数的子集专门化模板。当希望为特定类型组提供自定义实现，而不必为该组中的所有类型定义单独的专门化时，它特别有用。</p>
</li>
</ul>
<h3 id="类型特征">类型特征</h3>
<ul>
<li>类型特征是C++中的一组模板类，可以帮助获取有关类型属性、行为或特征的信息。它们可以在<code>&lt;type_traits&gt;</code>头文件中找到。通过使用Type Traits，可以根据给定类型的属性来调整代码，甚至可以在模板代码中为类型参数强制执行特定的属性。</li>
</ul>
<h3 id="替换失败不是错误-sfinae">替换失败不是错误（SFINAE）</h3>
<ul>
<li>
<p>SFINAE是C++模板元编程中的一个原则，它允许编译器在替换过程中特定模板特化失败时选择适当的函数或类。术语“替换失败”是指编译器试图将模板参数替换为函数模板或类模板的过程。如果替换导致错误，编译器不会将特定的专门化视为候选专门化，而是继续搜索有效的专门化。</p>
</li>
<li>
<p>SFINAE背后的关键思想是，如果发生替换错误，它将被静默地忽略，编译器将继续探索其他模板专门化或重载。这允许编写更灵活和通用的代码，因为它使能够针对不同的场景拥有多个专门化。</p>
</li>
</ul>
<h2 id="包管理">包管理</h2>
<ul>
<li>
<p>包管理器是自动化安装、升级和管理编程语言(如C++)软件(库、框架和其他依赖项)过程的工具</p>
</li>
<li>
<p>vcpkg、Spack、Conan、NuGet</p>
</li>
</ul>
<h2 id="库和框架编程">库和框架编程</h2>
<ul>
<li>
<p>在使用C++时，可能需要使用外部库来协助完成各种任务。库是预编译的代码片段，可以在程序中重用，以执行特定任务或提供特定功能。在C++中，库可以是静态库(.lib)或动态库(Windows中的.dll, Unix/Linux中的.so)。</p>
</li>
<li>
<p>静态库：在编译时被合并到程序中。它们与代码链接，创建更大的可执行文件，但在运行时不需要任何外部文件。</p>
</li>
<li>
<p>动态库：动态库是在运行时加载的，这意味着可执行文件只包含对这些库的引用。这些库需要在运行程序的系统上可用。</p>
</li>
</ul>
<h3 id="c-库">C++库</h3>
<ul>
<li>OpenCV、POCO、protobuf、gRPC、Tensorflow、pybind11、spdlog、OpenCL、ranges_v3、fmt、Boost</li>
</ul>
<h3 id="框架">框架</h3>
<ul>
<li>gtest/gmock、Qt、Catch2、Orbit Profiler、PyTorch C++</li>
</ul>
<embed src="TheRoadOfCPP.pdf" width="100%" height="750" type="application/pdf">
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>经验之谈</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>关于GPU服务器的选用</title>
    <url>/%E5%85%B6%E4%BB%96%E5%88%86%E4%BA%AB/gpuserver/</url>
    <content><![CDATA[<p>介绍关于GPU服务器：租用、使用</p>
<p>关键词：深度学习、GPU服务器</p>
<span id="more"></span>
<hr>
<!-- toc -->
<h1>GPU服务器服务商</h1>
<ol>
<li>AutoDL算力云</li>
</ol>
<ul>
<li>网站：<a class="link" href="https://www.autodl.com/home">AutoDL算力云 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>个人评价：本人具有使用经历，价格偏便宜，镜像有现成，适合新手入门尝试。</li>
</ul>
<ol start="2">
<li><a class="link" href="https://mistgpu.com/">MistGPU <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ol>
<ul>
<li>网站：<a class="link" href="https://mistgpu.com/">MistGPU <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>个人评价：价格还行，备用选择。</li>
</ul>
<ol start="3">
<li>阿里云</li>
</ol>
<ul>
<li>网站：<a class="link" href="https://www.aliyun.com/product/ecs/gpu">阿里云 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>个人评价：阿里云，不多说，可靠也不便宜。</li>
</ul>
<h1>GPU服务器使用</h1>
<ol>
<li>选择适合的GPU型号、显存大小、浮点算力、存储盘大小。</li>
<li>选择合适的镜像进行环境配置。</li>
<li>一般无图形窗口，命令行使用，文件上传下载。</li>
<li>详细可参考各个服务商的帮助文档。</li>
</ol>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>其他分享</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>GPU服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Qt的音频播放器程序设计记录</title>
    <url>/%E7%AC%94%E8%AE%B0/fmusicplayer/</url>
    <content><![CDATA[<p>使用Qt的工具完成一个音频播放器——FMusicPlayer</p>
<p>关键词：Qt、C++</p>
<span id="more"></span>
<hr>
<h1>一、前言</h1>
<p>利用Qt的工具开发一个音乐播放器，界面如下图：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/fmusicplayer_ui.jpg" alt="界面截图"><figcaption>界面截图</figcaption></figure></p>
<p>Qt版本5.12.12。该项目十分简单，适合用于练手。</p>
<h1>二、模块构思</h1>
<p>根据市场上现有的音乐播放器思考，一个基本的音乐播放器应该具有以下功能：</p>
<ul>
<li>
<p>播放/暂停</p>
</li>
<li>
<p>停止</p>
</li>
<li>
<p>控制音频播放进度</p>
</li>
<li>
<p>管理音乐列表</p>
</li>
<li>
<p>音量控制</p>
</li>
<li>
<p>信息显示</p>
</li>
<li>
<p>……</p>
</li>
</ul>
<p>此软件仅实现了上述功能。</p>
<h1>三、模块实现</h1>
<p>此音乐播放器主要使用Qt现成的QMediaPlayer类和QMediaPlaylist类进行维护。</p>
<h2 id="3-1-界面设计">3.1 界面设计</h2>
<p>整体界面设计如图：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/fmusicplayer_uidesign.jpg" alt="界面设计"><figcaption>界面设计</figcaption></figure></p>
<ul>
<li>
<p>9个按钮QPushButton，对应各种功能；</p>
</li>
<li>
<p>3个标签文字QLabel，用于说明；</p>
</li>
<li>
<p>2个文本框QLineEdit，用于显示信息；</p>
</li>
<li>
<p>1个列表QListWidget，用于存放播放列表；</p>
</li>
<li>
<p>2个滑条QSlider，一个用于控制和显示进度，一个用于控制和显示音量。</p>
</li>
<li>
<p>若干个弹簧用于调整布局。</p>
</li>
</ul>
<p>完成后的程序界面：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/fmusicplayer_ui2.jpg" alt="期望的UI"><figcaption>期望的UI</figcaption></figure></p>
<h2 id="3-1-初始化工程">3.1 初始化工程</h2>
<p>此程序使用了Qt的multimedia部件，所以首先在Qt的.pro工程文件中包含multimedia。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">……</span><br><span class="line">QT  += multimedia</span><br><span class="line">……</span><br></pre></td></tr></table></figure></div>
<p>接着项目中应该有以下文件：</p>
<blockquote>
<p>mainwindow.h<br>
mainwindow.cpp<br>
mainwindow.ui<br>
main.cpp</p>
</blockquote>
<ul>
<li>
<p>mainwindow.h：主要存放主窗口的一些声明</p>
</li>
<li>
<p>mainwindow.cpp：记录主窗口的实现</p>
</li>
<li>
<p>mainwindow.ui：界面的设计文件</p>
</li>
<li>
<p>main.cpp：程序入口</p>
</li>
</ul>
<p>首先在mainwindow.h中将我们实现的模块添加槽函数声明和成员变量的声明：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">QMediaPlayer *musicplayer; <span class="comment">// 播放器</span></span><br><span class="line">QMediaPlaylist *musicplayList; <span class="comment">// 播放列表</span></span><br><span class="line"></span><br><span class="line">QString durationTime;<span class="comment">// 音频总长度</span></span><br><span class="line">QString  positionTime;<span class="comment">// 当前播放到位置</span></span><br><span class="line"><span class="comment">// 槽函数声明略，见源代码</span></span><br></pre></td></tr></table></figure></div>
<p>接着在主窗口构造函数中做一些初始化：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建实例</span></span><br><span class="line">musicplayer = <span class="keyword">new</span> <span class="built_in">QMediaPlayer</span>(<span class="keyword">this</span>);</span><br><span class="line">musicplayList = <span class="keyword">new</span> <span class="built_in">QMediaPlaylist</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 循环播放</span></span><br><span class="line">musicplayList-&gt;<span class="built_in">setPlaybackMode</span>(QMediaPlaylist::Loop);</span><br><span class="line">musicplayer-&gt;<span class="built_in">setPlaylist</span>(musicplayList);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认音量，同步音量显示</span></span><br><span class="line">ui-&gt;volume-&gt;<span class="built_in">setValue</span>(<span class="number">50</span>);	</span><br><span class="line"><span class="built_in">changedVolume</span>(<span class="number">50</span>);			</span><br></pre></td></tr></table></figure></div>
<h2 id="3-3-播放-暂停模块">3.3 播放/暂停模块</h2>
<p>当点击播放键时播放音乐，为播放按钮play绑定单击事件，触发playMusic()函数：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 播放音乐</span></span><br><span class="line"><span class="built_in">connect</span>(ui-&gt;play, <span class="built_in">SIGNAL</span>(<span class="built_in">clicked</span>()), <span class="keyword">this</span>, <span class="built_in">SLOT</span>(<span class="built_in">playMusic</span>()));</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::playMusic</span><span class="params">()</span><span class="comment">//播放</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 维护播放列表，使其索引正常，正常播放</span></span><br><span class="line">    <span class="keyword">if</span>(musicplayList-&gt;<span class="built_in">currentIndex</span>()&lt;<span class="number">0</span>)</span><br><span class="line">        musicplayList-&gt;<span class="built_in">setCurrentIndex</span>(<span class="number">0</span>);</span><br><span class="line">    musicplayer-&gt;<span class="built_in">play</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>当点击暂停键时暂停音乐，支持记录位置，从上次暂停的位置播放。为暂停按钮绑定单击事件，触发pauseMusic()函数：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 暂停音乐</span></span><br><span class="line"><span class="built_in">connect</span>(ui-&gt;pause, <span class="built_in">SIGNAL</span>(<span class="built_in">clicked</span>()), <span class="keyword">this</span>, <span class="built_in">SLOT</span>(<span class="built_in">pauseMusic</span>()));</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::pauseMusic</span><span class="params">()</span><span class="comment">//暂停播放</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    musicplayer-&gt;<span class="built_in">pause</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h2 id="3-4-停止模块">3.4 停止模块</h2>
<p>当点击停止键时，停止音乐，音乐播放位置归零。为停止按钮绑定单击事件，触发stopMusic()函数：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 停止音乐</span></span><br><span class="line"><span class="built_in">connect</span>(ui-&gt;stop, <span class="built_in">SIGNAL</span>(<span class="built_in">clicked</span>()), <span class="keyword">this</span>, <span class="built_in">SLOT</span>(<span class="built_in">stopMusic</span>()));</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::stopMusic</span><span class="params">()</span><span class="comment">//停止播放</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    musicplayer-&gt;<span class="built_in">stop</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h2 id="3-5-控制音频进度模块">3.5 控制音频进度模块</h2>
<p>播放时，音频进度条应当可以被拖动，并且更新播放的位置。为进度条绑定值修改事件，触发changedPosition()函数，函数参数为进度条传入的位置参数。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 进度条控制</span></span><br><span class="line"><span class="built_in">connect</span>(ui-&gt;timebar, <span class="built_in">SIGNAL</span>(<span class="built_in">valueChanged</span>(<span class="type">int</span>)), <span class="keyword">this</span>, <span class="built_in">SLOT</span>(<span class="built_in">changedPosition</span>(<span class="type">int</span>)));</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::changedPosition</span><span class="params">(<span class="type">int</span> pos)</span>   <span class="comment">// 修改播放位置</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    musicplayer-&gt;<span class="built_in">setPosition</span>(pos);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h2 id="3-6-管理音乐列表模块">3.6 管理音乐列表模块</h2>
<p>播放器应该可以输入多个文件，接着顺序播放，所以需要维护一个音乐列表。</p>
<p>首先可以向音乐列表添加音乐，为添加音乐按钮绑定单击事件，绑定addMusic()函数。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 添加文件</span></span><br><span class="line"><span class="built_in">connect</span>(ui-&gt;addMusic, <span class="built_in">SIGNAL</span>(<span class="built_in">clicked</span>()), <span class="keyword">this</span>, <span class="built_in">SLOT</span>(<span class="built_in">addMusictoList</span>()));</span><br></pre></td></tr></table></figure></div>
<p>读取文件时，wav文件是支持的，而mp3文件需要外置解码器的支持，处理mp3文件方法见文章最后。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::addMusictoList</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QString curPath = QDir::<span class="built_in">currentPath</span>();</span><br><span class="line">    QString title = <span class="string">&quot;选择音频文件&quot;</span>;</span><br><span class="line">    QString filter = <span class="string">&quot;音频文件(*.wav *.mp3)&quot;</span>;</span><br><span class="line">    QStringList fileList = QFileDialog::<span class="built_in">getOpenFileNames</span>(<span class="keyword">this</span>, title, curPath, filter);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 添加文件少于1个时退出函数</span></span><br><span class="line">    <span class="keyword">if</span>(filter.<span class="built_in">count</span>() &lt; <span class="number">1</span>)  <span class="keyword">return</span>;</span><br><span class="line">	<span class="comment">// 将读取的文件放入musicplayList里</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; fileList.<span class="built_in">count</span>(); ++ i)</span><br><span class="line">    &#123;</span><br><span class="line">        QString aFile = fileList.<span class="built_in">at</span>(i);</span><br><span class="line">        musicplayList-&gt;<span class="built_in">addMedia</span>(QUrl::<span class="built_in">fromLocalFile</span>(aFile));</span><br><span class="line"></span><br><span class="line">        <span class="function">QFileInfo <span class="title">fileinfo</span><span class="params">(aFile)</span></span>;</span><br><span class="line">        ui-&gt;playList-&gt;<span class="built_in">addItem</span>(fileinfo.<span class="built_in">fileName</span>());</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="comment">// 将音乐列表的第一首音频作为待播放音频</span></span><br><span class="line">    <span class="keyword">if</span>(musicplayer-&gt;<span class="built_in">state</span>() != QMediaPlayer::PlayingState)</span><br><span class="line">        musicplayList-&gt;<span class="built_in">setCurrentIndex</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>同样还应支持移除音频文件：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 移除文件</span></span><br><span class="line"><span class="built_in">connect</span>(ui-&gt;delMusic, <span class="built_in">SIGNAL</span>(<span class="built_in">clicked</span>()), <span class="keyword">this</span>, <span class="built_in">SLOT</span>(<span class="built_in">delMusic</span>()));</span><br></pre></td></tr></table></figure></div>
<p>移除文件时还应判断移除的是否为当前播放音乐，进行相应处理。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::delMusic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> pos = ui-&gt;playList-&gt;<span class="built_in">currentRow</span>(); <span class="comment">// 获取选中行</span></span><br><span class="line">    QListWidgetItem *item = ui-&gt;playList-&gt;<span class="built_in">takeItem</span>(pos);</span><br><span class="line">    <span class="keyword">delete</span>  item;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(musicplayList-&gt;<span class="built_in">currentIndex</span>() == pos)<span class="comment">// 删除是当前播放的音乐时</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> nextPos = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(pos &gt;= <span class="number">1</span>)    nextPos = pos - <span class="number">1</span>;</span><br><span class="line">        musicplayList-&gt;<span class="built_in">removeMedia</span>(pos);</span><br><span class="line">        <span class="keyword">if</span>(ui-&gt;playList-&gt;<span class="built_in">count</span>() &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            musicplayList-&gt;<span class="built_in">setCurrentIndex</span>(nextPos);</span><br><span class="line">            <span class="built_in">onPlayListChanged</span>(nextPos);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            musicplayer-&gt;<span class="built_in">stop</span>();</span><br><span class="line">            ui-&gt;playmusic-&gt;<span class="built_in">setText</span>(<span class="string">&quot;无文件&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        musicplayList-&gt;<span class="built_in">removeMedia</span>(pos);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>清空文件则是移除文件的简化版，直接将播放列表清空即可。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 清空文件列表</span></span><br><span class="line"><span class="built_in">connect</span>(ui-&gt;clearList, <span class="built_in">SIGNAL</span>(<span class="built_in">clicked</span>()), <span class="keyword">this</span>, <span class="built_in">SLOT</span>(<span class="built_in">clearList</span>()));</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::clearList</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    musicplayList-&gt;<span class="built_in">clear</span>();	<span class="comment">// 清空列表</span></span><br><span class="line">    ui-&gt;playList-&gt;<span class="built_in">clear</span>();	<span class="comment">// 更新UI</span></span><br><span class="line">    ui-&gt;playmusic-&gt;<span class="built_in">clear</span>();</span><br><span class="line">    ui-&gt;time-&gt;<span class="built_in">clear</span>();</span><br><span class="line">    ui-&gt;timebar-&gt;<span class="built_in">setValue</span>(<span class="number">0</span>);</span><br><span class="line">    musicplayer-&gt;<span class="built_in">stop</span>();	<span class="comment">// 停止播放</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>最后还可以添加上一首和下一首的功能，只需简单绑定一下点击事件和调用musicplayList的函数即可。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">musicplayList-&gt;<span class="built_in">previous</span>();	<span class="comment">// 上一首</span></span><br><span class="line">musicplayList-&gt;<span class="built_in">next</span>();		<span class="comment">// 下一首</span></span><br></pre></td></tr></table></figure></div>
<h2 id="3-7-音量控制模块">3.7 音量控制模块</h2>
<p>一个播放器还应该支持音量的调节，而QMediaPlayer支持音量调节，所以绑定滑条值改变事件且调用函数即可，事件返回一个滑条的位置参数。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 控制音量</span></span><br><span class="line"><span class="built_in">connect</span>(ui-&gt;volume, <span class="built_in">SIGNAL</span>(<span class="built_in">valueChanged</span>(<span class="type">int</span>)), <span class="keyword">this</span>, <span class="built_in">SLOT</span>(<span class="built_in">changedVolume</span>(<span class="type">int</span>)));</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::changedVolume</span><span class="params">(<span class="type">int</span> value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    musicplayer-&gt;<span class="built_in">setVolume</span>(value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h2 id="3-8-信息显示与同步模块">3.8 信息显示与同步模块</h2>
<p>根据UI的设计，显示的信息有：当前播放的音频名字、播放时间/完整时间。当播放音频进行切换时，需要更新音频名字、播放时间和音频完整时间等信息。</p>
<p>为播放列表musicplayList的当前索引变化事件绑定onPlayListChanged()函数，事件返回新的索引号，用此更新播放的音频名字。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 播放音乐变化</span></span><br><span class="line"><span class="built_in">connect</span>(musicplayList, <span class="built_in">SIGNAL</span>(<span class="built_in">currentIndexChanged</span>(<span class="type">int</span>)), <span class="keyword">this</span>, <span class="built_in">SLOT</span>(<span class="built_in">onPlayListChanged</span>(<span class="type">int</span>)));</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::onPlayListChanged</span><span class="params">(<span class="type">int</span> pos)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ui-&gt;playList-&gt;<span class="built_in">setCurrentRow</span>(pos);</span><br><span class="line">    <span class="comment">// 使用QListWidgetItem类取出QListWidget的某一行</span></span><br><span class="line">    QListWidgetItem *item = ui-&gt;playList-&gt;<span class="built_in">currentItem</span>();</span><br><span class="line">    <span class="keyword">if</span>(item)</span><br><span class="line">    &#123;</span><br><span class="line">		<span class="comment">// 更新UI的音频名字</span></span><br><span class="line">        ui-&gt;playmusic-&gt;<span class="built_in">setText</span>(item-&gt;<span class="built_in">text</span>());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>切换音频时，其总时长也应该变化，需要为播放器musicplayer的播放位置变化durationChanged事件绑定onDurationChanged()函数。函数为计算音频总的时间。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 时长变化</span></span><br><span class="line"><span class="built_in">connect</span>(musicplayer, <span class="built_in">SIGNAL</span>(<span class="built_in">durationChanged</span>(qint64)), <span class="keyword">this</span>, <span class="built_in">SLOT</span>(<span class="built_in">onDurationChanged</span>(qint64)));</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::onDurationChanged</span><span class="params">(qint64 dur)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ui-&gt;timebar-&gt;<span class="built_in">setMaximum</span>(dur);	<span class="comment">// 设置进度条的最大值</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> secs = <span class="built_in">int</span>(dur / <span class="number">1000</span>);</span><br><span class="line">    <span class="type">int</span> mins = secs / <span class="number">60</span>;</span><br><span class="line">    secs %= <span class="number">60</span>;</span><br><span class="line">    durationTime = QString::<span class="built_in">asprintf</span>(<span class="string">&quot; %d : %d &quot;</span>, mins, secs);</span><br><span class="line">    <span class="comment">// UI刷新时间</span></span><br><span class="line">    ui-&gt;time-&gt;<span class="built_in">setText</span>(positionTime + <span class="string">&quot; / &quot;</span> + durationTime);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>至于音频随着播放而位置和进度的刷新，则需要为播放器musicplayer的播放位置变化positionChanged事件绑定onPositionChanged()函数。函数为计算播放的时间。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 播放位置变化</span></span><br><span class="line"><span class="built_in">connect</span>(musicplayer, <span class="built_in">SIGNAL</span>(<span class="built_in">positionChanged</span>(qint64)), <span class="keyword">this</span>, <span class="built_in">SLOT</span>(<span class="built_in">onPositionChanged</span>(qint64)));</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::onPositionChanged</span><span class="params">(qint64 pos)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">// 进度条滑动到尽头，退出函数</span></span><br><span class="line">    <span class="keyword">if</span>(ui-&gt;timebar-&gt;<span class="built_in">isSliderDown</span>()) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    ui-&gt;timebar-&gt;<span class="built_in">setSliderPosition</span>(pos);</span><br><span class="line">    <span class="comment">// 计算分和秒</span></span><br><span class="line">    <span class="type">int</span> secs = <span class="built_in">int</span> (pos / <span class="number">1000</span>);</span><br><span class="line">    <span class="type">int</span> mins = secs / <span class="number">60</span>;</span><br><span class="line">    secs %= <span class="number">60</span>;</span><br><span class="line">    positionTime = QString::<span class="built_in">asprintf</span>(<span class="string">&quot; %d : %d &quot;</span>, mins, secs);</span><br><span class="line">    <span class="comment">// UI刷新时间</span></span><br><span class="line">    ui-&gt;time-&gt;<span class="built_in">setText</span>(positionTime + <span class="string">&quot; / &quot;</span> + durationTime);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h1>四、总结</h1>
<p>该程序源代码放在<a class="link" href="https://gitee.com/fingsinz/fmusicplayer/">Gitee - https://gitee.com/fingsinz/fmusicplayer/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>该项目只是一个简单的播放器实现，希望能够帮助萌新认识Qt，提高自己的能力。</p>
<p>不支持直接加载mp3文件，需要先下载相关解码器。此处附上解码器链接：</p>
<p><a class="link" href="https://www.codecguide.com/download_kl.htm">K-lite_codec_pack <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link" href="https://www.codecguide.com/download_k-lite_codec_pack_basic.htm">K-lite_codec_pack_basic（基础版） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link" href="https://www.codecguide.com/download_k-lite_codec_pack_standard.htm">K-lite_codec_pack_standard（标准版） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>Qt</tag>
      </tags>
  </entry>
  <entry>
    <title>单周期性MIPS硬件仿真综合设计记录</title>
    <url>/%E7%AC%94%E8%AE%B0/mips/</url>
    <content><![CDATA[<p>使用仿真工具实现一个计算机硬件系统，并编写程序，在自己设计的硬件系统上运行、测试，实现要求的功能。</p>
<p>待补充</p>
<p>关键词：MIPS、CPU、硬件</p>
<span id="more"></span>
<hr>
<p>aaaaaaaaaa</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>MIPS</tag>
        <tag>CPU</tag>
        <tag>硬件</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenCV图像处理基础教程</title>
    <url>/%E7%AC%94%E8%AE%B0/basicOpenCV/</url>
    <content><![CDATA[<p>关键词：C++、OpenCV、图像处理</p>
<span id="more"></span>
<hr>
<h1>Visual Studio2022配置OpencCV</h1>
<h2 id="下载opencv并安装">下载OpenCV并安装</h2>
<p>可以直接前往<a class="link" href="https://opencv.org/releases/">OpenCV官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>进行下载资源。</p>
<p>有两种形式可以下载安装：</p>
<ol>
<li>Windows的exe可执行文件安装。</li>
</ol>
<p>exe文件安装后有OpenCV静态库和动态库文件，可以直接链接到VS使用，整体更方便。</p>
<ol start="2">
<li>Sources源码安装。</li>
</ol>
<p>下载源码后需要自己编译生成OpenCV的静态库和动态库。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_download.jpg" alt="下载安装"><figcaption>下载安装</figcaption></figure></p>
<h2 id="vs中配置opencv">VS中配置OpenCV</h2>
<p>我下载的OpenCV版本为4.5.2，目录在： <code>D:\opencv4.5.2</code></p>
<p>在VS中新建项目，右键项目点击属性，做以下操作：</p>
<ul>
<li>
<p>VC++ 目录 → 包含目录添加OpenCV的include目录。例如，我的操作是把 <code>D:\opencv4.5.2\build\include</code> 添加到包含目录。</p>
</li>
<li>
<p>VC++ 目录 → 库目录添加OpenCV的x64/vc15/lib目录。例如，我的操作是把 <code>D:\opencv4.5.2\build\x64\vc15\lib</code> 添加到库目录。</p>
</li>
<li>
<p>链接器 → 输入 → 附加依赖项添加OpenCV的动态库。例如，我的操作是：debug版本添加 <code>opencv_world452d.lib</code>，release版本添加 <code>opencv_world452.lib</code>。</p>
</li>
</ul>
<h2 id="测试opencv">测试OpenCV</h2>
<p>新建Cpp文件，复制以下代码：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat image = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;a&quot;</span>, image);</span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>编译链接测试，若能运行，则说明配置正确。</p>
<h1>基本操作</h1>
<h2 id="读写图像">读写图像</h2>
<h3 id="相关函数">相关函数</h3>
<h4 id="读取图像">读取图像</h4>
<p>函数原型：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">Mat <span class="title">imread</span><span class="params">(<span class="type">const</span> String&amp; filename, <span class="type">int</span> flags = IMREAD_COLOR)</span></span></span><br></pre></td></tr></table></figure></div>
<p>第一参数为图像路径，第二参数为加载图像的形式（默认加载彩色图像）。</p>
<p>第二参数可选参数有三种：</p>
<ol>
<li>
<p><code>0</code> 或 <code>IMREAD_GRAYSCALE</code> ，表示加载灰度图像。</p>
</li>
<li>
<p><code>1</code> 或 <code>IMREAD_COLOR</code> ，表示加载彩色图像（默认）。</p>
</li>
<li>
<p><code>-1</code> 或 <code>IMREAD_UNCHANGED</code> ，表示加载包括alpha通道。</p>
</li>
</ol>
<h4 id="创建窗口">创建窗口</h4>
<p>函数原型：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">namedWindow</span><span class="params">(<span class="type">const</span> String&amp; winname, <span class="type">int</span> flags = WINDOW_AUTOSIZE)</span></span></span><br></pre></td></tr></table></figure></div>
<p>第一参数为窗口名字，第二参数为窗口形式。</p>
<p>窗口形式常用有两种：</p>
<ol>
<li>
<p><code>WINDOW_AUTOSIZE</code> 表示固定大小（默认）。</p>
</li>
<li>
<p><code>WINDOW_NORMAL</code> 表示可调节大小。</p>
</li>
</ol>
<h4 id="显示图像">显示图像</h4>
<p>函数原型：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">imshow</span><span class="params">(<span class="type">const</span> String&amp; winname, InputArray mat)</span></span></span><br></pre></td></tr></table></figure></div>
<p>第一参数为窗口名字，第二参数为图像对象名称。</p>
<h4 id="写入图像">写入图像</h4>
<p>函数原型：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">imwrite</span><span class="params">( <span class="type">const</span> String&amp; filename, InputArray img, <span class="type">const</span> std::vector&lt;<span class="type">int</span>&gt;&amp; params = std::vector&lt;<span class="type">int</span>&gt;())</span></span></span><br></pre></td></tr></table></figure></div>
<p>第一参数为存储图像路径，第二参数为图像对象名称，其余参数不重要。</p>
<h4 id="等待延时">等待延时</h4>
<p>函数原型：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">waitKey</span><span class="params">(<span class="type">int</span> delay = <span class="number">0</span>)</span></span></span><br></pre></td></tr></table></figure></div>
<p>参数为延时的毫秒数，默认为0，即无限时等待键盘输入。</p>
<h4 id="窗口销毁">窗口销毁</h4>
<p>函数原型：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">destroyWindow</span><span class="params">(<span class="type">const</span> String&amp; winname)</span></span></span><br></pre></td></tr></table></figure></div>
<p>参数为销毁的窗口名称，一般情况下系统会自动回收。</p>
<h3 id="示例代码">示例代码</h3>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">// 读取现有图像</span></span><br><span class="line">	cv::Mat image = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// 以png格式写入图像</span></span><br><span class="line">	cv::<span class="built_in">imwrite</span>(<span class="string">&quot;src/test.png&quot;</span>, image);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 创建窗口并显示图像</span></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;test window&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;test window&quot;</span>, image);</span><br><span class="line">	</span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">	cv::<span class="built_in">destroyWindow</span>(<span class="string">&quot;test window&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b1_run.jpg" alt="运行窗口"><figcaption>运行窗口</figcaption></figure></p>
<h2 id="读写视频">读写视频</h2>
<h3 id="相关概念">相关概念</h3>
<h4 id="videocapture类">VideoCapture类</h4>
<p>VideoCapture类提供了有关视频的操作：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">cv::VideoCapture <span class="title">cap</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br></pre></td></tr></table></figure></div>
<p>创建VideoCapture实例，使用构造函数，传入参数0表示设备0。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isOpened</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure></div>
<p>确认摄像头是否开启成功。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">grab</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure></div>
<p>确认摄像头在运行中是否捕获到帧。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">read</span><span class="params">(OutputArray image)</span></span></span><br></pre></td></tr></table></figure></div>
<p>将视频捕获对象中捕获到的图像输出到image中。</p>
<h4 id="转化图像颜色通道">转化图像颜色通道</h4>
<p>函数原型：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">cvtColor</span><span class="params">(InputArray src, OutputArray dst, <span class="type">int</span> code, <span class="type">int</span> dstCn = <span class="number">0</span>)</span></span></span><br></pre></td></tr></table></figure></div>
<p>第一参数是输入图像，第二参数是输出图像，第三参数是转化图像颜色通道代码，第四参数暂不管。</p>
<p>转化图像颜色通道代码有许多，通常用到：</p>
<ol>
<li>
<p><code>COLOR_BGR2GRAY</code> ：由OpenCV的BGR通道转为灰度通道。</p>
</li>
<li>
<p><code>COLOR_BGR2BGRA</code> ：由OpenCV的BGR通道添加了Alpha通道。</p>
</li>
</ol>
<h4 id="读取-显示视频">读取、显示视频</h4>
<p>与使用摄像头的思路类似，将捕获设备改为捕获本地文件。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">cv::VideoCapture <span class="title">cap</span><span class="params">(<span class="string">&quot;src/test.mp4&quot;</span>)</span></span>;</span><br></pre></td></tr></table></figure></div>
<p>显示与使用摄像头的思路类似，捕获视频每一帧并展示图像对象。</p>
<h4 id="写入视频">写入视频</h4>
<p>定义编解码器并创建VideoWriter对象进行保存。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> fourcc = cv::VideoWriter::<span class="built_in">fourcc</span>(<span class="string">&#x27;X&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;D&#x27;</span>);   <span class="comment">// 编解码器</span></span><br><span class="line"><span class="function">cv::VideoWriter <span class="title">out</span><span class="params">(<span class="string">&quot;output.avi&quot;</span>, fourcc, <span class="number">20.0</span>, cv::Size(<span class="number">640</span>, <span class="number">480</span>))</span></span>;</span><br></pre></td></tr></table></figure></div>
<p>VideoWriter的其中一个构造函数原型如下：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">VideoWriter</span>(<span class="type">const</span> String&amp; filename, <span class="type">int</span> fourcc, <span class="type">double</span> fps, Size frameSize, <span class="type">bool</span> isColor = <span class="literal">true</span>)</span><br></pre></td></tr></table></figure></div>
<h3 id="示例代码">示例代码</h3>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="function">cv::VideoCapture <span class="title">cap</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">	cv::Mat img;</span><br><span class="line">	<span class="type">int</span> fourcc = cv::VideoWriter::<span class="built_in">fourcc</span>(<span class="string">&#x27;X&#x27;</span>, <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;D&#x27;</span>);</span><br><span class="line">	<span class="function">cv::VideoWriter <span class="title">out</span><span class="params">(<span class="string">&quot;output.avi&quot;</span>, fourcc, <span class="number">20.0</span>, cv::Size(<span class="number">640</span>, <span class="number">480</span>))</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (cap.<span class="built_in">isOpened</span>())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (!cap.<span class="built_in">grab</span>())</span><br><span class="line">		&#123;</span><br><span class="line">			std::cout &lt;&lt; <span class="string">&quot;摄像头错误&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		out.<span class="built_in">write</span>(img);</span><br><span class="line">		cap.<span class="built_in">read</span>(img);</span><br><span class="line">		cv::<span class="built_in">imshow</span>(<span class="string">&quot;video&quot;</span>, img);</span><br><span class="line">		<span class="keyword">if</span> (cv::<span class="built_in">waitKey</span>(<span class="number">1</span>) == <span class="string">&#x27;q&#x27;</span>)	<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	cap.<span class="built_in">release</span>();  <span class="comment">// 释放视频捕获对象</span></span><br><span class="line">	out.<span class="built_in">release</span>();  <span class="comment">// 释放视频写入对象</span></span><br><span class="line">	cv::<span class="built_in">destroyWindow</span>(<span class="string">&quot;video&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h2 id="图像的基本操作">图像的基本操作</h2>
<h3 id="创建空白图像">创建空白图像</h3>
<p>使用 <code>Mat</code> 创建图像矩阵的常用形式：</p>
<ol>
<li>创建空图像，大小为0：</li>
</ol>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">cv::Mat image1;</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>指定矩阵大小，指定数据类型</li>
</ol>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">cv::Mat <span class="title">image2</span><span class="params">(<span class="number">100</span>, <span class="number">100</span>, CV_8U)</span></span>;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>
<p>创建100行×100列的矩阵，数据类型为无符号8位int，即灰度图像。</p>
</li>
<li>
<p>还有一种常用的类型CV_8UC3，表示三通道无符号8位int。</p>
</li>
</ul>
<ol start="3">
<li>指定矩阵大小，指定数据类型，设置初始值</li>
</ol>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">cv::Mat <span class="title">image3</span><span class="params">(<span class="number">100</span>, <span class="number">100</span>, CV_8U, <span class="number">100</span>)</span></span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>
<p>创建100行×100列的矩阵，数据类型为无符号8位int灰度图像，灰度值为100。</p>
</li>
<li>
<p>对于三通道图像，应使用Scalar()：</p>
</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">cv::Mat <span class="title">image</span><span class="params">(<span class="number">640</span>, <span class="number">640</span>, CV_8UC3, cv::Scalar(<span class="number">100</span>, <span class="number">100</span>, <span class="number">0</span>))</span></span>;</span><br></pre></td></tr></table></figure></div>
<h3 id="获取图像信息">获取图像信息</h3>
<h4 id="获取行列数-通道数">获取行列数、通道数</h4>
<p>直接访问Mat类成员rows、cols和函数channels()返回图像的行、列和通道数。可以通过通道数判断是灰度图像（通道为1）还是彩色图像（通道为3）。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">std::cout &lt;&lt; <span class="string">&quot;图像的行：&quot;</span> &lt;&lt; image.rows &lt;&lt; std::endl;</span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;图像的列：&quot;</span> &lt;&lt; image.cols &lt;&lt; std::endl;</span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;通道数：&quot;</span> &lt;&lt; image.<span class="built_in">channels</span>() &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure></div>
<h4 id="访问像素点的bgr值">访问像素点的BGR值</h4>
<p>通过Vec3b数据类型访问返回像素点的BGR值，注意，前者是行数，后者是列数。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> blue = image.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(<span class="number">100</span>, <span class="number">100</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="comment">// 索引值0表示索引BGR值中的B，也就是蓝色通道的数值</span></span><br><span class="line"><span class="type">int</span> green = image.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(<span class="number">100</span>, <span class="number">100</span>)[<span class="number">1</span>];</span><br><span class="line"><span class="type">int</span> red = image.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(<span class="number">100</span>, <span class="number">100</span>)[<span class="number">2</span>];</span><br></pre></td></tr></table></figure></div>
<p>同理进行修改：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">image.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(<span class="number">100</span>, <span class="number">100</span>)[<span class="number">0</span>] = <span class="number">201</span>;</span><br><span class="line"><span class="comment">// 将坐标(100, 100)的像素点蓝色数值改为201</span></span><br></pre></td></tr></table></figure></div>
<p>当然大面积的修改才会明显，通过循环进行：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; ++ i)</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">100</span>; ++ j)</span><br><span class="line">		image.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i, j)[<span class="number">0</span>] = <span class="number">100</span>;</span><br></pre></td></tr></table></figure></div>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b1_run1.jpg" alt="更改像素点"><figcaption>更改像素点</figcaption></figure></p>
<p>如果修改BGR值，则组成Vec3b类型：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; ++ i)</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">100</span>; ++ j)</span><br><span class="line">		image.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i, j) = cv::<span class="built_in">Vec3b</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br></pre></td></tr></table></figure></div>
<h3 id="标记区域">标记区域</h3>
<p>创建tmp变量，获取图像行从200到1000，列从200到1000的区域。将图像行从1200到2000，列从1200到2000的区域变成tmp</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">cv::Mat image = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>);</span><br><span class="line">cv::Mat tmp = <span class="built_in">image</span>(cv::<span class="built_in">Range</span>(<span class="number">100</span>, <span class="number">200</span>), cv::<span class="built_in">Range</span>(<span class="number">100</span>, <span class="number">200</span>));</span><br><span class="line">tmp.<span class="built_in">copyTo</span>(<span class="built_in">image</span>(cv::<span class="built_in">Range</span>(<span class="number">200</span>, <span class="number">300</span>), cv::<span class="built_in">Range</span>(<span class="number">200</span>, <span class="number">300</span>)));</span><br></pre></td></tr></table></figure></div>
<h3 id="遍历图像">遍历图像</h3>
<h4 id="循环行和列遍历图像">循环行和列遍历图像</h4>
<p>对于OpenCV的Mat，其顺序是行和列。与C++的二维数组类似，遍历：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; ++ i)</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">100</span>; ++ j)</span><br><span class="line">		image.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i, j) = cv::<span class="built_in">Vec3b</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br></pre></td></tr></table></figure></div>
<h4 id="指针扫描">指针扫描</h4>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cv::Mat img = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>);</span><br><span class="line">    cv::Mat output_img;</span><br><span class="line">    output_img = cv::<span class="built_in">Mat</span>(img.<span class="built_in">size</span>(), img.<span class="built_in">type</span>());   <span class="comment">// 复制画布</span></span><br><span class="line">    output_img = img.<span class="built_in">clone</span>();    <span class="comment">// 克隆像素值</span></span><br><span class="line">    <span class="type">int</span> r = img.rows, c = img.cols, channels = img.<span class="built_in">channels</span>();</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; r; j ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">const</span> uchar *now = img.<span class="built_in">ptr</span>&lt;uchar&gt;(j);   <span class="comment">// 原图当前行指针</span></span><br><span class="line">        uchar *output = output_img.<span class="built_in">ptr</span>&lt;uchar&gt;(j);   <span class="comment">// 输出图像当前行指针</span></span><br><span class="line">        <span class="comment">// 实际上每一列都由通道数三个数据组成，所以实际上列数应该是通道数×列</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = channels; i &lt; c * channels; i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            output[i] = cv::<span class="built_in">saturate_cast</span>&lt;uchar&gt;(<span class="number">5</span> * now[i]);</span><br><span class="line">			<span class="comment">// saturate_cast保证了计算结果仍在0~255之间</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;after&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, img);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;after&quot;</span>, output_img);</span><br><span class="line">    cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">    cv::<span class="built_in">destroyAllWindows</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b1_run4.jpg" alt="结果展示"><figcaption>结果展示</figcaption></figure></p>
<h2 id="绘图入门">绘图入门</h2>
<h3 id="静态绘制">静态绘制</h3>
<h4 id="绘制线">绘制线</h4>
<p>函数原型：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">line</span><span class="params">(InputOutputArray img, Point pt1, Point pt2, <span class="type">const</span> Scalar&amp; color,<span class="type">int</span> thickness = <span class="number">1</span>, <span class="type">int</span> lineType = LINE_8, <span class="type">int</span> shift = <span class="number">0</span>)</span></span></span><br></pre></td></tr></table></figure></div>
<p>参数分别为：图像对象、始点坐标、终点坐标、颜色、线粗细、线类型……</p>
<p>使用示例：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">cv::<span class="built_in">line</span>(image, cv::<span class="built_in">Point</span>(<span class="number">0</span>, <span class="number">0</span>), cv::<span class="built_in">Point</span>(<span class="number">512</span>, <span class="number">512</span>), cv::<span class="built_in">Scalar</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="number">5</span>);</span><br></pre></td></tr></table></figure></div>
<h4 id="绘制矩形">绘制矩形</h4>
<p>函数原型：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">rectangle</span><span class="params">(InputOutputArray img, Rect rec, <span class="type">const</span> Scalar&amp; color, <span class="type">int</span> thickness = <span class="number">1</span>, <span class="type">int</span> lineType = LINE_8, <span class="type">int</span> shift = <span class="number">0</span>)</span></span></span><br></pre></td></tr></table></figure></div>
<p>参数分别为：图像对象、矩形框、颜色、边框线粗细、边框线类型……</p>
<p>矩形框的四个参数分别为：x坐标、y坐标、宽、高。</p>
<p>使用示例：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">cv::<span class="built_in">rectangle</span>(image, cv::<span class="built_in">Rect</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">100</span>), cv::<span class="built_in">Scalar</span>(<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="number">5</span>);</span><br></pre></td></tr></table></figure></div>
<h4 id="绘制圆">绘制圆</h4>
<p>函数原型：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">circle</span><span class="params">(InputOutputArray img, Point center, <span class="type">int</span> radius, <span class="type">const</span> Scalar&amp; color, <span class="type">int</span> thickness = <span class="number">1</span>, <span class="type">int</span> lineType = LINE_8, <span class="type">int</span> shift = <span class="number">0</span>)</span></span></span><br></pre></td></tr></table></figure></div>
<p>参数分别为：图像对象、圆心、半径、颜色、边框线粗细、边框线类型……</p>
<p>使用示例：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">cv::<span class="built_in">circle</span>(image, cv::<span class="built_in">Point</span>(<span class="number">319</span>, <span class="number">319</span>), <span class="number">50</span>, cv::<span class="built_in">Scalar</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">5</span>);</span><br></pre></td></tr></table></figure></div>
<h4 id="绘制椭圆">绘制椭圆</h4>
<p>函数原型：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">ellipse</span><span class="params">(InputOutputArray img, Point center, Size axes, <span class="type">double</span> angle, <span class="type">double</span> startAngle, <span class="type">double</span> endAngle, <span class="type">const</span> Scalar&amp; color, <span class="type">int</span> thickness = <span class="number">1</span>, <span class="type">int</span> lineType = LINE_8, <span class="type">int</span> shift = <span class="number">0</span>)</span></span></span><br></pre></td></tr></table></figure></div>
<p>参数分别为：图像对象、中心点、长短轴、初始旋转角度、椭圆开始角度、椭圆结束角度、颜色、边框线粗细、边框线类型……边框线粗细为-1表示内填充。</p>
<p>使用示例：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">cv::<span class="built_in">ellipse</span>(image, cv::<span class="built_in">Point</span>(<span class="number">319</span>, <span class="number">119</span>), cv::<span class="built_in">Size</span>(<span class="number">100</span>, <span class="number">50</span>), <span class="number">0</span>, <span class="number">180</span>, <span class="number">360</span>, <span class="number">255</span>, <span class="number">-1</span>);</span><br></pre></td></tr></table></figure></div>
<h4 id="绘制多边形">绘制多边形</h4>
<p>函数原型：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">polylines</span><span class="params">(InputOutputArray img, <span class="type">const</span> Point* <span class="type">const</span>* pts, <span class="type">const</span> <span class="type">int</span>* npts, <span class="type">int</span> ncontours, <span class="type">bool</span> isClosed, <span class="type">const</span> Scalar&amp; color, <span class="type">int</span> thickness = <span class="number">1</span>, <span class="type">int</span> lineType = LINE_8, <span class="type">int</span> shift = <span class="number">0</span> )</span></span></span><br></pre></td></tr></table></figure></div>
<p>参数分别为：图像对象、const修饰的指向多边形数组的指针、多边形顶点个数的数组名、绘制多边形的个数、是否闭合、颜色、边框粗细、边框线类型</p>
<p>使用示例：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 构造多边形的端点形成的点类型数组。</span></span><br><span class="line">cv::Point pts[] = &#123; cv::<span class="built_in">Point</span>(<span class="number">10</span>, <span class="number">5</span>), cv::<span class="built_in">Point</span>(<span class="number">20</span>, <span class="number">30</span>), cv::<span class="built_in">Point</span>(<span class="number">70</span>, <span class="number">20</span>), cv::<span class="built_in">Point</span>(<span class="number">50</span>, <span class="number">10</span>) &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// const修饰的多边形数组指针</span></span><br><span class="line"><span class="type">const</span> cv::Point *ppt[<span class="number">1</span>] = &#123; pts &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 多边形顶点个数的数组名</span></span><br><span class="line"><span class="type">int</span> npt[] = &#123; <span class="number">4</span> &#125;;</span><br><span class="line">cv::<span class="built_in">polylines</span>(image, ppt, npt, <span class="number">1</span>, <span class="literal">true</span>, cv::<span class="built_in">Scalar</span>(<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>));</span><br></pre></td></tr></table></figure></div>
<h4 id="添加文本">添加文本</h4>
<p>函数原型：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">putText</span><span class="params">( InputOutputArray img, <span class="type">const</span> String&amp; text, Point org, <span class="type">int</span> fontFace, <span class="type">double</span> fontScale, Scalar color, <span class="type">int</span> thickness = <span class="number">1</span>, <span class="type">int</span> lineType = LINE_8, <span class="type">bool</span> bottomLeftOrigin = <span class="literal">false</span> )</span></span></span><br></pre></td></tr></table></figure></div>
<p>参数分别为：图像对象、文本内容、文字在图像中的左下角坐标、字体、字体大小、字体颜色、字体粗细、描绘字体的线类型……</p>
<p>使用示例：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">cv::<span class="built_in">putText</span>(image, <span class="string">&quot;OpenCV&quot;</span>, cv::<span class="built_in">Point</span>(<span class="number">10</span>, <span class="number">500</span>), cv::FONT_HERSHEY_SIMPLEX, <span class="number">4</span>, cv::<span class="built_in">Scalar</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="number">2</span>, cv::LINE_AA);</span><br></pre></td></tr></table></figure></div>
<h4 id="整体绘制展示">整体绘制展示</h4>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="function">cv::Mat <span class="title">image</span><span class="params">(<span class="number">640</span>, <span class="number">640</span>, CV_8UC3)</span></span>;</span><br><span class="line">	</span><br><span class="line">	cv::<span class="built_in">line</span>(image, cv::<span class="built_in">Point</span>(<span class="number">0</span>, <span class="number">0</span>), cv::<span class="built_in">Point</span>(<span class="number">512</span>, <span class="number">512</span>), cv::<span class="built_in">Scalar</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="number">5</span>);</span><br><span class="line">	cv::<span class="built_in">rectangle</span>(image, cv::<span class="built_in">Rect</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">100</span>), cv::<span class="built_in">Scalar</span>(<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="number">5</span>);</span><br><span class="line">	cv::<span class="built_in">circle</span>(image, cv::<span class="built_in">Point</span>(<span class="number">319</span>, <span class="number">319</span>), <span class="number">50</span>, cv::<span class="built_in">Scalar</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">5</span>);</span><br><span class="line">	cv::<span class="built_in">ellipse</span>(image, cv::<span class="built_in">Point</span>(<span class="number">319</span>, <span class="number">119</span>), cv::<span class="built_in">Size</span>(<span class="number">100</span>, <span class="number">50</span>), <span class="number">0</span>, <span class="number">180</span>, <span class="number">360</span>, <span class="number">255</span>, <span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line">	cv::Point pts[] = &#123; cv::<span class="built_in">Point</span>(<span class="number">10</span>, <span class="number">5</span>), cv::<span class="built_in">Point</span>(<span class="number">20</span>, <span class="number">30</span>), cv::<span class="built_in">Point</span>(<span class="number">70</span>, <span class="number">20</span>), cv::<span class="built_in">Point</span>(<span class="number">50</span>, <span class="number">10</span>) &#125;;</span><br><span class="line">	<span class="type">const</span> cv::Point *ppt[<span class="number">1</span>] = &#123; pts &#125;;</span><br><span class="line">	<span class="type">int</span> npt[] = &#123; <span class="number">4</span> &#125;;</span><br><span class="line">	cv::<span class="built_in">polylines</span>(image, ppt, npt, <span class="number">1</span>, <span class="literal">true</span>, cv::<span class="built_in">Scalar</span>(<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>));</span><br><span class="line">	cv::<span class="built_in">putText</span>(image, <span class="string">&quot;OpenCV&quot;</span>, cv::<span class="built_in">Point</span>(<span class="number">10</span>, <span class="number">500</span>), cv::FONT_HERSHEY_SIMPLEX, <span class="number">4</span>, cv::<span class="built_in">Scalar</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="number">2</span>, cv::LINE_AA);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;img&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;img&quot;</span>, image);</span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b1_run2.jpg" alt="整体展示"><figcaption>整体展示</figcaption></figure></p>
<h3 id="鼠标绘制">鼠标绘制</h3>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">cv::Mat <span class="title">image</span><span class="params">(<span class="number">640</span>, <span class="number">640</span>, CV_8UC3)</span></span>;	<span class="comment">// 画布</span></span><br><span class="line"><span class="type">bool</span> drawing = <span class="literal">false</span>;	<span class="comment">// 是否绘画</span></span><br><span class="line"><span class="type">bool</span> mode = <span class="literal">true</span>;		<span class="comment">// 矩形绘制还是圆形绘制</span></span><br><span class="line"><span class="type">int</span> ix, iy = <span class="number">-1</span>;</span><br><span class="line"><span class="type">int</span> r, g, b, t = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 绘画函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">draw</span><span class="params">(<span class="type">int</span> event, <span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> flags, <span class="type">void</span> *param)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (event == cv::EVENT_LBUTTONDOWN)	<span class="comment">// 当鼠标按下时</span></span><br><span class="line">    &#123;</span><br><span class="line">        drawing = <span class="literal">true</span>;		<span class="comment">// 启动绘画</span></span><br><span class="line">        ix = x;				<span class="comment">// 获取起点坐标</span></span><br><span class="line">        iy = y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (event == cv::EVENT_MOUSEMOVE)	<span class="comment">// 当鼠标移动时</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (drawing)	<span class="comment">// 处于绘画状态</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (mode)	<span class="comment">// 矩形绘制时</span></span><br><span class="line">            &#123;</span><br><span class="line">                cv::<span class="built_in">rectangle</span>(image, cv::<span class="built_in">Point</span>(ix, iy), cv::<span class="built_in">Point</span>(x, y), cv::<span class="built_in">Scalar</span>(b, g, r), t * <span class="number">20</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>		<span class="comment">// 圆形绘制时</span></span><br><span class="line">            &#123;</span><br><span class="line">                cv::<span class="built_in">circle</span>(image, cv::<span class="built_in">Point</span>(x, y), <span class="number">5</span>, cv::<span class="built_in">Scalar</span>(b, g, r), t * <span class="number">20</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (event == cv::EVENT_LBUTTONUP)	<span class="comment">// 当鼠标松开时</span></span><br><span class="line">    &#123;</span><br><span class="line">        drawing = <span class="literal">false</span>;	<span class="comment">// 关闭绘画</span></span><br><span class="line">        <span class="keyword">if</span> (mode)	<span class="comment">// 补上最后一笔， x和y是当前的坐标</span></span><br><span class="line">        &#123;</span><br><span class="line">            cv::<span class="built_in">rectangle</span>(image, cv::<span class="built_in">Point</span>(ix, iy), cv::<span class="built_in">Point</span>(x, y), cv::<span class="built_in">Scalar</span>(b, g, r), t * <span class="number">20</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cv::<span class="built_in">circle</span>(image, cv::<span class="built_in">Point</span>(x, y), <span class="number">5</span>, cv::<span class="built_in">Scalar</span>(b, g, r), t * <span class="number">20</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;image&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">setMouseCallback</span>(<span class="string">&quot;image&quot;</span>, draw);	<span class="comment">// 绑定画布和回调函数</span></span><br><span class="line">    cv::<span class="built_in">createTrackbar</span>(<span class="string">&quot;R&quot;</span>, <span class="string">&quot;image&quot;</span>, <span class="number">0</span>, <span class="number">255</span>);	<span class="comment">// 轨迹栏</span></span><br><span class="line">    cv::<span class="built_in">createTrackbar</span>(<span class="string">&quot;G&quot;</span>, <span class="string">&quot;image&quot;</span>, <span class="number">0</span>, <span class="number">255</span>);</span><br><span class="line">    cv::<span class="built_in">createTrackbar</span>(<span class="string">&quot;B&quot;</span>, <span class="string">&quot;image&quot;</span>, <span class="number">0</span>, <span class="number">255</span>);</span><br><span class="line">    cv::<span class="built_in">createTrackbar</span>(<span class="string">&quot;Thickness&quot;</span>, <span class="string">&quot;image&quot;</span>, <span class="number">0</span>, <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cv::<span class="built_in">imshow</span>(<span class="string">&quot;image&quot;</span>, image);</span><br><span class="line">        <span class="type">int</span> k = cv::<span class="built_in">waitKey</span>(<span class="number">1</span>) &amp; <span class="number">0xFF</span>;</span><br><span class="line">        <span class="keyword">if</span> (k == <span class="string">&#x27;q&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (k == <span class="string">&#x27;m&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            mode = !mode;</span><br><span class="line">        &#125;</span><br><span class="line">        r = cv::<span class="built_in">getTrackbarPos</span>(<span class="string">&quot;R&quot;</span>, <span class="string">&quot;image&quot;</span>);	<span class="comment">// 刷新绘图属性</span></span><br><span class="line">        g = cv::<span class="built_in">getTrackbarPos</span>(<span class="string">&quot;G&quot;</span>, <span class="string">&quot;image&quot;</span>);</span><br><span class="line">        b = cv::<span class="built_in">getTrackbarPos</span>(<span class="string">&quot;B&quot;</span>, <span class="string">&quot;image&quot;</span>);</span><br><span class="line">        t = cv::<span class="built_in">getTrackbarPos</span>(<span class="string">&quot;Thickness&quot;</span>, <span class="string">&quot;image&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cv::<span class="built_in">destroyAllWindows</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b1_run3.jpg" alt="鼠标绘制"><figcaption>鼠标绘制</figcaption></figure></p>
<h1>灰度变换</h1>
<h2 id="灰度变换原理">灰度变换原理</h2>
<p><strong>通过变换函数T将原图像像素灰度值r映射为灰度值s：</strong></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>=</mo><mi>T</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">s=T(r)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span></span></p>
<h2 id="灰度反转">灰度反转</h2>
<p><strong>灰度反转：将图像亮暗对调，可以增强图像中的暗色区域细节。</strong></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>=</mo><mi>T</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo><mo>=</mo><mi>L</mi><mo>−</mo><mn>1</mn><mo>−</mo><mi>r</mi><mtext>，其中</mtext><mi>L</mi><mtext>为图像灰度级，</mtext><mn>0</mn><mtext> </mtext><mn>255</mn><mtext>灰度图像的灰度级为</mtext><mn>256</mn></mrow><annotation encoding="application/x-tex">s = T(r) = L - 1 - r，其中L为图像灰度级，0~255灰度图像的灰度级为256
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">其</span><span class="mord cjk_fallback">中</span><span class="mord mathdefault">L</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">图</span><span class="mord cjk_fallback">像</span><span class="mord cjk_fallback">灰</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">级</span><span class="mord cjk_fallback">，</span><span class="mord">0</span><span class="mspace nobreak"> </span><span class="mord">2</span><span class="mord">5</span><span class="mord">5</span><span class="mord cjk_fallback">灰</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">图</span><span class="mord cjk_fallback">像</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">灰</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">级</span><span class="mord cjk_fallback">为</span><span class="mord">2</span><span class="mord">5</span><span class="mord">6</span></span></span></span></span></p>
<p>进行 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>=</mo><mi>T</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo><mo>=</mo><mn>256</mn><mo>−</mo><mn>1</mn><mo>−</mo><mi>r</mi></mrow><annotation encoding="application/x-tex">s = T(r) = 256 - 1 - r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span> 代码：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cv::Mat image = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>);</span><br><span class="line">    cv::Mat output_image, image_gray;</span><br><span class="line">    cv::<span class="built_in">cvtColor</span>(image, image_gray, cv::COLOR_BGR2GRAY);</span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, image_gray);</span><br><span class="line"></span><br><span class="line">    output_image = image_gray.<span class="built_in">clone</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; image_gray.rows; ++ i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; image_gray.cols; ++ j)</span><br><span class="line">            output_image.<span class="built_in">at</span>&lt;uchar&gt;(i, j) = <span class="number">255</span> - image_gray.<span class="built_in">at</span>&lt;uchar&gt;(i, j);</span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;after&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;after&quot;</span>, output_image);</span><br><span class="line">    </span><br><span class="line">    cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b2_run.jpg" alt="灰度反转效果展示"><figcaption>灰度反转效果展示</figcaption></figure></p>
<h2 id="对数变换">对数变换</h2>
<p><strong>对数变换：扩展图像中的暗像素值，压缩高灰度值。</strong></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>=</mo><mi>T</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo><mo>=</mo><mi>c</mi><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">s = T(r) = c\log(1 + r)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span></span></p>
<p>其中有一个图像归一化的过程，使用函数：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">normalize</span><span class="params">( InputArray src, InputOutputArray dst, <span class="type">double</span> alpha = <span class="number">1</span>, <span class="type">double</span> beta = <span class="number">0</span>, <span class="type">int</span> norm_type = NORM_L2, <span class="type">int</span> dtype = <span class="number">-1</span>, InputArray mask = noArray())</span></span></span><br></pre></td></tr></table></figure></div>
<p>参数如下：</p>
<ul>
<li>
<p>src：输入数组；</p>
</li>
<li>
<p>dst：与输入数组一样大的输出数组；</p>
</li>
<li>
<p>alpha：范数值，在范围归一化的情况下归一化到或较低的范围边界，即下限。</p>
</li>
<li>
<p>beta： 在范围归一化的情况下的上范围边界，即上限；它不用于范数归一化，只用于NORM_MINMAX中。</p>
</li>
<li>
<p>norm_type：规范化选择的公式类型类型。</p>
</li>
<li>
<p>dtype：如果为负，则输出在大小、深度、通道数都等于输入；否则，它具有与src相同的通道数，深度不同，深度=CV_MAT_DEPTH。</p>
</li>
<li>
<p>mask：掩码。选择感兴趣区域，选定后只能对该区域进行操作。</p>
</li>
</ul>
<p>而归一化选择的数学公式（norm_type）有，设数组元素为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub><mtext>，</mtext><mo>…</mo><mtext>，</mtext><msub><mi>A</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">A_1，…，A_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：</p>
<ol>
<li>NORM_L1</li>
</ol>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo>=</mo><mfrac><msub><mi>A</mi><mi>i</mi></msub><mrow><mo>∑</mo><msub><mi>A</mi><mi>i</mi></msub></mrow></mfrac><mo>×</mo><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">P = \frac {A_i} {\sum A_i}\times alpha
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.29634em;vertical-align:-0.93601em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93601em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">p</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span></span></span></span></span></p>
<ol start="2">
<li>NORM_INF</li>
</ol>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo>=</mo><mfrac><msub><mi>A</mi><mi>i</mi></msub><mrow><mi>max</mi><mo>⁡</mo><msub><mi>A</mi><mi>i</mi></msub></mrow></mfrac><mo>×</mo><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">P = \frac {A_i} {\max A_i}\times alpha
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.19633em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">max</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">p</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span></span></span></span></span></p>
<ol start="3">
<li>NORM_L2</li>
</ol>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo>=</mo><mfrac><msub><mi>A</mi><mi>k</mi></msub><msqrt><msubsup><mi>A</mi><mi>i</mi><mn>2</mn></msubsup></msqrt></mfrac><mo>×</mo><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">P = \frac {A_k} {\sqrt {A_i^2} }\times alpha
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.49033em;vertical-align:-1.13em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.1654780000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9445220000000001em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7959080000000001em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.904522em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width="400em" height="1.28em" viewbox="0 0 400000 1296" preserveaspectratio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119
c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120
c340,-704.7,510.7,-1060.3,512,-1067
l0 -0
c4.7,-7.3,11,-11,19,-11
H40000v40H1012.3
s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232
c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1
s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26
c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z
M1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2954779999999999em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.13em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">p</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span></span></span></span></span></p>
<ol start="4">
<li>NORM_MINMAX：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>K</mi></msub><mo mathvariant="normal">∉</mo><mrow><mi>max</mi><mo>⁡</mo><msub><mi>A</mi><mi>i</mi></msub></mrow><mo separator="true">,</mo><mi>min</mi><mo>⁡</mo><msub><mi>A</mi><mi>i</mi></msub><mtext>。当</mtext><msub><mi>A</mi><mi>K</mi></msub><mtext>等于</mtext><mi>max</mi><mo>⁡</mo><msub><mi>A</mi><mi>i</mi></msub><mtext>时，</mtext><mi>p</mi><mo>=</mo><mn>1</mn><mtext>；当</mtext><msub><mi>A</mi><mi>k</mi></msub><mtext>等于</mtext><mi>min</mi><mo>⁡</mo><msub><mi>A</mi><mi>i</mi></msub><mtext>时，</mtext><mi>p</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">A_K\notin{\max A_i},\min A_i。当A_K等于\max A_i时，p=1；当A_k等于\min A_i时，p=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mord"><span class="mrel">∈</span></span><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="llap"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="inner"><span class="mord"><span class="mord">/</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mop">max</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">min</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">。</span><span class="mord cjk_fallback">当</span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">等</span><span class="mord cjk_fallback">于</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">，</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord cjk_fallback">；</span><span class="mord cjk_fallback">当</span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">等</span><span class="mord cjk_fallback">于</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">min</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">，</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></li>
</ol>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo>=</mo><mfrac><msub><mi>A</mi><mi>k</mi></msub><mrow><mi>max</mi><mo>⁡</mo><msub><mi>A</mi><mi>i</mi></msub><mo>−</mo><mi>min</mi><mo>⁡</mo><msub><mi>A</mi><mi>i</mi></msub></mrow></mfrac><mo>×</mo><mi mathvariant="normal">∣</mi><mrow><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi><mo>−</mo><mi>b</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow><mi mathvariant="normal">∣</mi><mo>+</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P = \frac {A_k} {\max A_i - \min A_i}\times \vert{alpha - beta}\vert + min(alpha, beta)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.19633em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">max</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">min</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">p</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault">e</span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">p</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault">e</span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mclose">)</span></span></span></span></span></p>
<p><em>同时需要注意的是alpha和beta的取值顺序与归一化结果无关。即alpha=255，beta=0和alpha=0，beta=255最后的归一化结果是相同的。</em></p>
<p>与之相关还有一个函数，其常用于将CV_16S、CV_32F等其他类型的输出图像转变成CV_8U型的图像：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">convertScaleAbs</span><span class="params">(InputArray src, OutputArray dst, <span class="type">double</span> alpha = <span class="number">1</span>, <span class="type">double</span> beta = <span class="number">0</span>)</span></span></span><br></pre></td></tr></table></figure></div>
<p>参数如下：</p>
<ul>
<li>
<p>src：输入数组。</p>
</li>
<li>
<p>dst：输出数组。</p>
</li>
<li>
<p>alpha：可选比例系数。</p>
</li>
<li>
<p>beta：添加到缩放值的可选增量，即偏移量。</p>
</li>
</ul>
<p>该函数也可用于对整个图像数组中的每一个元素进图像增强等相关先行操作的快速运算：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>s</mi><msub><mi>t</mi><mi>i</mi></msub><mo>=</mo><mi>s</mi><mi>a</mi><mi>t</mi><mi>u</mi><mi>r</mi><mi>a</mi><mi>t</mi><msub><mi>e</mi><mrow><mi>u</mi><mi>c</mi><mi>h</mi><mi>a</mi><mi>r</mi></mrow></msub><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi><mo>×</mo><mi>s</mi><mi>r</mi><msub><mi>c</mi><mi>i</mi></msub><mo>+</mo><mi>b</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">dst_i = saturate_{uchar}(\vert alpha\times src_i + beta \vert)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">s</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">∣</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">p</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault">e</span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord">∣</span><span class="mclose">)</span></span></span></span></span></p>
<p>进行<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>=</mo><mi>T</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo><mo>=</mo><mn>4</mn><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">s = T(r) = 4\log(1 + r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span> 的代码：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cv::Mat image = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>);</span><br><span class="line">    cv::Mat output_image, image_gray;</span><br><span class="line">    cv::<span class="built_in">cvtColor</span>(image, image_gray, cv::COLOR_BGR2GRAY);</span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, image_gray);</span><br><span class="line"></span><br><span class="line">    output_image = image_gray.<span class="built_in">clone</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; image_gray.rows; ++ i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; image_gray.cols; ++ j)</span><br><span class="line">            output_image.<span class="built_in">at</span>&lt;uchar&gt;(i, j) = <span class="number">4</span> * <span class="built_in">log</span>((<span class="type">double</span>) image_gray.<span class="built_in">at</span>&lt;uchar&gt;(i, j)) + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 图像归一化，将数值变回0~255</span></span><br><span class="line">    cv::<span class="built_in">normalize</span>(output_image, output_image, <span class="number">0</span>, <span class="number">255</span>, cv::NORM_MINMAX);</span><br><span class="line">    <span class="comment">// 将数据类型变回CV_8U，似乎忽略此句也可</span></span><br><span class="line">    cv::<span class="built_in">convertScaleAbs</span>(output_image, output_image);</span><br><span class="line">    </span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;after&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;after&quot;</span>, output_image); </span><br><span class="line">    cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b2_run1.jpg" alt="效果展示"><figcaption>效果展示</figcaption></figure></p>
<h2 id="幂律-伽马变换">幂律（伽马变换）</h2>
<p><strong>伽马变换：与对数函数变换类似。</strong></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>=</mo><mi>T</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo><mo>=</mo><mi>c</mi><mo>×</mo><msup><mi>r</mi><mi>γ</mi></msup></mrow><annotation encoding="application/x-tex">s = T(r) = c\times r^γ
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.714392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>进行<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>=</mo><mi>T</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo><mo>=</mo><mn>4</mn><mo>×</mo><msup><mi>r</mi><mn>0.9</mn></msup></mrow><annotation encoding="application/x-tex">s = T(r) = 4\times r^{0.9}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span></span> 代码：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cv::Mat image = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>);</span><br><span class="line">    cv::Mat output_image, image_gray;</span><br><span class="line">    cv::<span class="built_in">cvtColor</span>(image, image_gray, cv::COLOR_BGR2GRAY);</span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, image_gray);</span><br><span class="line"></span><br><span class="line">    output_image = image_gray.<span class="built_in">clone</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; image_gray.rows; ++ i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; image_gray.cols; ++ j)</span><br><span class="line">            output_image.<span class="built_in">at</span>&lt;uchar&gt;(i, j) = <span class="number">4</span> * <span class="built_in">pow</span>((<span class="type">double</span>)image_gray.<span class="built_in">at</span>&lt;uchar&gt;(i, j), <span class="number">0.9</span>);</span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">normalize</span>(output_image, output_image, <span class="number">0</span>, <span class="number">255</span>, cv::NORM_MINMAX);</span><br><span class="line">    cv::<span class="built_in">convertScaleAbs</span>(output_image, output_image);</span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;after&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;after&quot;</span>, output_image);</span><br><span class="line">    </span><br><span class="line">    cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b2_run2.jpg" alt="灰度反转效果展示"><figcaption>灰度反转效果展示</figcaption></figure></p>
<h1>直方图处理</h1>
<h2 id="图像直方图">图像直方图</h2>
<p>非归一化直方图：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><msub><mi>r</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mi>n</mi><mi>k</mi></msub><mtext>，其中</mtext><msub><mi>r</mi><mi>k</mi></msub><mtext>为图像像素灰度值，</mtext><msub><mi>n</mi><mi>k</mi></msub><mtext>为图像中灰度值</mtext><msub><mi>r</mi><mi>k</mi></msub><mtext>对应的像素个数</mtext></mrow><annotation encoding="application/x-tex">h(r_k) = n_k，其中r_k为图像像素灰度值，n_k为图像中灰度值r_k对应的像素个数
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">其</span><span class="mord cjk_fallback">中</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">图</span><span class="mord cjk_fallback">像</span><span class="mord cjk_fallback">像</span><span class="mord cjk_fallback">素</span><span class="mord cjk_fallback">灰</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">值</span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">图</span><span class="mord cjk_fallback">像</span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">灰</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">值</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">应</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">像</span><span class="mord cjk_fallback">素</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">数</span></span></span></span></span></p>
<p>归一化直方图：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><msub><mi>r</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><msub><mi>n</mi><mi>k</mi></msub><mrow><mi>M</mi><mi>N</mi></mrow></mfrac><mtext>，其中</mtext><mi>M</mi><mtext>和</mtext><mi>N</mi><mtext>为图像行数和列数。</mtext></mrow><annotation encoding="application/x-tex">p(r_k) = \frac {n_k} {MN}，其中M和N为图像行数和列数。
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.7935599999999998em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">其</span><span class="mord cjk_fallback">中</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord cjk_fallback">和</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">图</span><span class="mord cjk_fallback">像</span><span class="mord cjk_fallback">行</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">和</span><span class="mord cjk_fallback">列</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">。</span></span></span></span></span></p>
<p>计算直方图与一些函数相关：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">calcHist</span><span class="params">( <span class="type">const</span> Mat* images, <span class="type">int</span> nimages, <span class="type">const</span> <span class="type">int</span>* channels, InputArray mask,  OutputArray hist, <span class="type">int</span> dims, <span class="type">const</span> <span class="type">int</span>* histSize, <span class="type">const</span> <span class="type">float</span>** ranges, <span class="type">bool</span> uniform = <span class="literal">true</span>, <span class="type">bool</span> accumulate = <span class="literal">false</span> )</span></span></span><br></pre></td></tr></table></figure></div>
<p>参数如下：</p>
<ul>
<li>
<p>images：源数组指针，它们都应该具有相同的深度，CV_8U, CV_16U或CV_32F，以及相同的大小。它们中的每一个都可以有任意数量的通道。</p>
</li>
<li>
<p>nimages：源图像的数量。</p>
</li>
<li>
<p>channels：需要统计直方图的第几通道。通道的数量必须与直方图的维度相匹配。第一个数组通道的编号从0到images[0].channels()-1，第二个数组通道的编号从images[0].channels()到images[0].channels() + images[1].channels()-1，以此类推。</p>
</li>
<li>
<p>mask：掩码。选择感兴趣区域，选定后只能对该区域进行操作。</p>
</li>
<li>
<p>hist：直方图计算的输出值。</p>
</li>
<li>
<p>dims：输出直方图的维度（由channels指定）。</p>
</li>
<li>
<p>histSize：直方图中每个dims维度需要分成多少个区间（直方图竖条的个数）。</p>
</li>
<li>
<p>ranges：统计像素值的区间。</p>
</li>
<li>
<p>uniform=true：是否对得到的直方图进行归一化处理。</p>
</li>
<li>
<p>accumulate=false：在多个图像时是否累计计算像素值的个数。</p>
</li>
</ul>
<p>获取图像的直方图代码：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cv::Mat image = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>);</span><br><span class="line">    cv::Mat hist, image_gray;</span><br><span class="line">    cv::<span class="built_in">cvtColor</span>(image, image_gray, cv::COLOR_BGR2GRAY);</span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;img&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;img&quot;</span>, image_gray);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> hsize = <span class="number">256</span>;    <span class="comment">// 直方图区间数</span></span><br><span class="line">    <span class="type">float</span> ranges[] = &#123; <span class="number">0</span>, <span class="number">256</span> &#125;;   <span class="comment">// 统计像素值的区间</span></span><br><span class="line">    <span class="type">const</span> <span class="type">float</span> *hRanges = &#123; ranges &#125;;</span><br><span class="line">    <span class="comment">// 计算直方图的输出值</span></span><br><span class="line">    cv::<span class="built_in">calcHist</span>(&amp;image_gray, <span class="number">1</span>, <span class="number">0</span>, cv::<span class="built_in">Mat</span>(), hist, <span class="number">1</span>, &amp;hsize, &amp;hRanges, <span class="literal">true</span>, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> hist_h = <span class="number">300</span>, hist_w = <span class="number">512</span>; <span class="comment">// 直方图图像高和宽</span></span><br><span class="line">    <span class="type">int</span> bin_w = hist_w / hsize; <span class="comment">// 区间</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 直方图图像</span></span><br><span class="line">    <span class="function">cv::Mat <span class="title">histImage</span><span class="params">(hist_h, hist_w, CV_8UC3, cv::Scalar(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</span></span>;</span><br><span class="line">    <span class="comment">// 直方图输出值归一化到0~255</span></span><br><span class="line">    cv::<span class="built_in">normalize</span>(hist, hist, <span class="number">0</span>, hist_h, cv::NORM_MINMAX, <span class="number">-1</span>, cv::<span class="built_in">Mat</span>());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; hsize; i ++)</span><br><span class="line">        cv::<span class="built_in">line</span>(histImage, cv::<span class="built_in">Point</span>((i - <span class="number">1</span>) * bin_w, hist_h - <span class="built_in">cvRound</span>(hist.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(i - <span class="number">1</span>))), cv::<span class="built_in">Point</span>((i) *bin_w, hist_h - <span class="built_in">cvRound</span>(hist.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(i))), cv::<span class="built_in">Scalar</span>(<span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>), <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;pic&quot;</span>, histImage);</span><br><span class="line">    cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b2_run3.jpg" alt="效果展示"><figcaption>效果展示</figcaption></figure></p>
<h2 id="直方图均衡化">直方图均衡化</h2>
<p><strong>通过均衡化处理可以使得图像的直方图分布变得较广较平均。</strong></p>
<p>经过公式：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mi>k</mi></msub><mo>=</mo><mo stretchy="false">(</mo><mi>L</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mi>k</mi></munderover><msub><mi>P</mi><mi>r</mi></msub><mo stretchy="false">(</mo><msub><mi>r</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mtext>，</mtext><mi>k</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo>…</mo><mo separator="true">,</mo><mi>L</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">s_k = (L - 1)\sum_{j=0}^kP_r(r_j)，k = 0,1…,L-1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.2498900000000006em;vertical-align:-1.4137769999999998em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361130000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord cjk_fallback">，</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p>
<p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">s_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是变换后的灰度级，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>r</mi></msub><mo stretchy="false">(</mo><msub><mi>r</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P_r(r_j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>是灰度级为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">r_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>的直方图值。</p>
<p>涉及一个函数：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">equalizeHist</span><span class="params">( InputArray src, OutputArray dst )</span></span></span><br></pre></td></tr></table></figure></div>
<p>该函数参数十分简单，只有输入图像矩阵和输出图像矩阵，即可进行图像直方图的均衡化。</p>
<p>代码：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cv::Mat image = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>);</span><br><span class="line">    cv::Mat hist, hist1, image_gray, image_;</span><br><span class="line">    cv::<span class="built_in">cvtColor</span>(image, image_gray, cv::COLOR_BGR2GRAY);</span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;img_before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;img_after&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;img_before&quot;</span>, image_gray);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 直方图均衡化</span></span><br><span class="line">    cv::<span class="built_in">equalizeHist</span>(image_gray, image_);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;img_after&quot;</span>, image_);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> hsize = <span class="number">256</span>;    <span class="comment">// 直方图区间数</span></span><br><span class="line">    <span class="type">float</span> ranges[] = &#123; <span class="number">0</span>, <span class="number">256</span> &#125;;   <span class="comment">// 统计像素值的区间</span></span><br><span class="line">    <span class="type">const</span> <span class="type">float</span> *hRanges = &#123; ranges &#125;;</span><br><span class="line">    <span class="comment">// 计算直方图的输出值</span></span><br><span class="line">    cv::<span class="built_in">calcHist</span>(&amp;image_gray, <span class="number">1</span>, <span class="number">0</span>, cv::<span class="built_in">Mat</span>(), hist, <span class="number">1</span>, &amp;hsize, &amp;hRanges, <span class="literal">true</span>, <span class="literal">false</span>);</span><br><span class="line">    cv::<span class="built_in">calcHist</span>(&amp;image_, <span class="number">1</span>, <span class="number">0</span>, cv::<span class="built_in">Mat</span>(), hist1, <span class="number">1</span>, &amp;hsize, &amp;hRanges, <span class="literal">true</span>, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> hist_h = <span class="number">300</span>, hist_w = <span class="number">512</span>; <span class="comment">// 直方图图像高和宽</span></span><br><span class="line">    <span class="type">int</span> bin_w = hist_w / hsize; <span class="comment">// 区间</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 直方图图像</span></span><br><span class="line">    <span class="function">cv::Mat <span class="title">histImage</span><span class="params">(hist_h, hist_w, CV_8UC3, cv::Scalar(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</span></span>;</span><br><span class="line">    <span class="function">cv::Mat <span class="title">histImage1</span><span class="params">(hist_h, hist_w, CV_8UC3, cv::Scalar(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 直方图输出值归一化到0~255</span></span><br><span class="line">    cv::<span class="built_in">normalize</span>(hist, hist, <span class="number">0</span>, hist_h, cv::NORM_MINMAX, <span class="number">-1</span>, cv::<span class="built_in">Mat</span>());</span><br><span class="line">    cv::<span class="built_in">normalize</span>(hist1, hist1, <span class="number">0</span>, hist_h, cv::NORM_MINMAX, <span class="number">-1</span>, cv::<span class="built_in">Mat</span>());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; hsize; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        cv::<span class="built_in">line</span>(histImage, cv::<span class="built_in">Point</span>((i - <span class="number">1</span>) * bin_w, hist_h - <span class="built_in">cvRound</span>(hist.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(i - <span class="number">1</span>))), cv::<span class="built_in">Point</span>((i) *bin_w, hist_h - <span class="built_in">cvRound</span>(hist.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(i))), cv::<span class="built_in">Scalar</span>(<span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>), <span class="number">2</span>);</span><br><span class="line">        cv::<span class="built_in">line</span>(histImage1, cv::<span class="built_in">Point</span>((i - <span class="number">1</span>) * bin_w, hist_h - <span class="built_in">cvRound</span>(hist1.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(i - <span class="number">1</span>))), cv::<span class="built_in">Point</span>((i) *bin_w, hist_h - <span class="built_in">cvRound</span>(hist1.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(i))), cv::<span class="built_in">Scalar</span>(<span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>), <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, histImage);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;after&quot;</span>, histImage1);</span><br><span class="line">    cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b2_run4.jpg" alt="效果展示"><figcaption>效果展示</figcaption></figure></p>
<h2 id="直方图匹配">直方图匹配</h2>
<p><strong>将需要处理的图像匹配另一幅直方图形状。</strong></p>
<p>由于直方图均衡化映射函数T为单调递增，即变换后的直方图可以经过逆变换回到原直方图。</p>
<p>得到直方图匹配的步骤：</p>
<ol>
<li>
<p>计算输入图像的直方图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span> ，并进行直方图均衡化，得到均衡化后的灰度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">s_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 。</p>
</li>
<li>
<p>根据公式计算 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><msub><mi>z</mi><mi>q</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G(z_q)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 并存储。</p>
</li>
</ol>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><msub><mi>z</mi><mi>q</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>L</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>q</mi></munderover><msub><mi>P</mi><mi>z</mi></msub><mo stretchy="false">(</mo><msub><mi>z</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G(z_q) = (L - 1)\sum_{i = 0}^qP_z(z_j)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.9761740000000003em;vertical-align:-1.277669em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6985050000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.347113em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<ol start="3">
<li>
<p>对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">s_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的每个值，都找到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">z_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 对应的值，使得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><msub><mi>z</mi><mi>q</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G(z_q)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 最接近 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">s_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，并存储从s到z的映射。</p>
</li>
<li>
<p>从步骤3中找到映射，将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">s_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的值映射到直方图指定图像中值为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">z_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 的对应像素，形成直方图。</p>
</li>
</ol>
<p>涉及映射Look up Table（LUT）函数：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">LUT</span><span class="params">(InputArray src, InputArray lut, OutputArray dst)</span></span></span><br></pre></td></tr></table></figure></div>
<p>参数如下：</p>
<ul>
<li>
<p>src：表示输入图像。</p>
</li>
<li>
<p>lut：表示查找表。</p>
</li>
<li>
<p>dst：表示输出图像。</p>
</li>
</ul>
<p>代码：white.jpg为纯白图像</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cv::Mat image1 = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>), image2 = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/white.jpg&quot;</span>);</span><br><span class="line">    cv::Mat image1_gray, image2_gray, hist1, hist2, image_;</span><br><span class="line">    cv::<span class="built_in">cvtColor</span>(image1, image1_gray, cv::COLOR_BGR2GRAY);</span><br><span class="line">    cv::<span class="built_in">cvtColor</span>(image2, image2_gray, cv::COLOR_BGR2GRAY);</span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;img1_gray&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;img2_gray&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;img1_gray&quot;</span>, image1_gray);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;img2_gray&quot;</span>, image2_gray);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 图像1和图像2进行均衡化</span></span><br><span class="line">    cv::<span class="built_in">equalizeHist</span>(image1_gray, image1_gray);</span><br><span class="line">    cv::<span class="built_in">equalizeHist</span>(image2_gray, image2_gray);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 求图像1和图像2均衡化后的直方图</span></span><br><span class="line">    <span class="type">int</span> hsize = <span class="number">256</span>;</span><br><span class="line">    <span class="type">float</span> ranges[] = &#123; <span class="number">0</span>, <span class="number">256</span> &#125;;</span><br><span class="line">    <span class="type">const</span> <span class="type">float</span> *hranges = &#123; ranges &#125;;</span><br><span class="line">    cv::<span class="built_in">calcHist</span>(&amp;image1_gray, <span class="number">1</span>, <span class="number">0</span>, cv::<span class="built_in">Mat</span>(), hist1, <span class="number">1</span>, &amp;hsize, &amp;hranges, <span class="literal">true</span>, <span class="literal">false</span>);</span><br><span class="line">    cv::<span class="built_in">calcHist</span>(&amp;image2_gray, <span class="number">1</span>, <span class="number">0</span>, cv::<span class="built_in">Mat</span>(), hist2, <span class="number">1</span>, &amp;hsize, &amp;hranges, <span class="literal">true</span>, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算两个均衡化图像直方图的累积概率</span></span><br><span class="line">    <span class="type">float</span> hist1_rate[<span class="number">256</span>] = &#123; hist1.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(<span class="number">0</span>) &#125;;</span><br><span class="line">    <span class="type">float</span> hist2_rate[<span class="number">256</span>] = &#123; hist2.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(<span class="number">0</span>) &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">256</span>; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        hist1_rate[i] = (hist1_rate[i - <span class="number">1</span>] + hist1.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(i));</span><br><span class="line">        hist2_rate[i] = (hist2_rate[i - <span class="number">1</span>] + hist2.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(i));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">256</span>; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        hist1_rate[i] /= (image1_gray.rows * image1_gray.cols);</span><br><span class="line">        hist2_rate[i] /= (image2_gray.rows * image2_gray.cols);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 两个累计概率之间的差值，用于找到最接近的点</span></span><br><span class="line">    <span class="type">float</span> diff[<span class="number">256</span>][<span class="number">256</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">256</span>; i ++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">256</span>; j ++)</span><br><span class="line">            diff[i][j] = <span class="built_in">fabs</span>(hist1_rate[i] - hist2_rate[j]);</span><br><span class="line"></span><br><span class="line">    <span class="function">cv::Mat <span class="title">lut</span><span class="params">(<span class="number">1</span>, <span class="number">256</span>, CV_8U)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">256</span>; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 查找源灰度级为i的映射灰度和i的累积概率差最小(灰度接近)的规定化灰度</span></span><br><span class="line">        <span class="type">float</span> min = diff[i][<span class="number">0</span>];</span><br><span class="line">        <span class="type">int</span> idx = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">256</span>; j ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(min &gt; diff[i][j])</span><br><span class="line">            &#123;</span><br><span class="line">                min = diff[i][j];</span><br><span class="line">                idx = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        lut.<span class="built_in">at</span>&lt;uchar&gt;(i) = idx;</span><br><span class="line">    &#125;</span><br><span class="line">    cv::<span class="built_in">LUT</span>(image1_gray, lut, image_);</span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;image_&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;image_&quot;</span>, image_);</span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b2_run5.jpg" alt="效果展示"><figcaption>效果展示</figcaption></figure></p>
<h1>空间滤波基础</h1>
<p><strong>讨论使用空间滤波器进行图像处理。</strong></p>
<h2 id="线性空间滤波">线性空间滤波</h2>
<p><strong>线性空间滤波器在图像f和滤波器核w之间执行乘积之和运算。</strong></p>
<p>滤波器核（或称核）是一个阵列，其大小定义了运算的邻域，其系数决定了该滤波器的性质。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b3_1.png" alt="使用3×3核进行线性空间滤波原理"><figcaption>使用3×3核进行线性空间滤波原理</figcaption></figure></p>
<p>在上图的任何一点(x, y)处，滤波器的响应g(x, y)是核系数与核所覆盖图像像素的乘积之和：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>w</mi><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>y</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mi>w</mi><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>+</mo><mo>…</mo><mo>+</mo><mi>w</mi><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mi>y</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(x,y) = w(-1,-1)f(x-1,y-1)+w(-1,0)f(x-1,y)+…+w(1,1)f(x+1, y+1)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p>
<p>坐标x和y变化时，核的中心逐个像素移动，并在移动过程中生成了滤波后的图像g。</p>
<p>核中心系数w(0,0)对其于(x,y)处的像素，当大小为m×n的核，假设m=2a+1，n=2b+1，a和b非负。这意味着这是两个坐标方向上奇数大小的核。</p>
<p>一般而言，大小为m×n的核对大小为M×N的图像的线性空间滤波可以表示为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>s</mi><mo>=</mo><mo>−</mo><mi>a</mi></mrow><mi>a</mi></munderover><munderover><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mo>−</mo><mi>b</mi></mrow><mi>b</mi></munderover><mi>w</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>s</mi><mo separator="true">,</mo><mi>y</mi><mo>+</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(x,y) = \sum_{s=-a}^a\sum_{t=-b}^bw(s,t)f(x+s,y+t)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1965570000000003em;vertical-align:-1.360444em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mathdefault mtight">a</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.836113em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mathdefault mtight">b</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.360444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span></span></p>
<p>在上式中，x和y发生变化时，核的原点可以访问图像的每个像素。当x和y不变时，上式即乘积之和，只适合任意奇数大小的核。</p>
<h2 id="空间相关与卷积">空间相关与卷积</h2>
<p>对于式子：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>s</mi><mo>=</mo><mo>−</mo><mi>a</mi></mrow><mi>a</mi></munderover><munderover><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mo>−</mo><mi>b</mi></mrow><mi>b</mi></munderover><mi>w</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>s</mi><mo separator="true">,</mo><mi>y</mi><mo>+</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(x,y) = \sum_{s=-a}^a\sum_{t=-b}^bw(s,t)f(x+s,y+t)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1965570000000003em;vertical-align:-1.360444em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mathdefault mtight">a</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.836113em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mathdefault mtight">b</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.360444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span></span></p>
<p>化简为一维讨论：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>s</mi><mo>=</mo><mo>−</mo><mi>a</mi></mrow><mi>a</mi></munderover><mi>w</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(x) = \sum_{s=-a}^aw(s)f(x+s)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.959733em;vertical-align:-1.308336em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mathdefault mtight">a</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span></span></p>
<p>举一个一维例子：核w为 <code>1 2 4 2 8</code></p>
<p><strong>相关</strong> 是滤波器核相对于图像的位移的函数，即相关的第一个值对应于核的零位移，第二个值对应于核的1单位位移。</p>
<p><strong>卷积</strong> 是滤波器核先进行预旋转，再进行相对于图像位移的函数。</p>
<p>①该核大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>5</mn></mrow><annotation encoding="application/x-tex">1\times 5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span></span></span></span>，那么有a=2，b=0。</p>
<p>②w中心系数要与f的原点重合。</p>
<p>③w的一部分在f之外，求和不能运算，所以进行零补充（零补充不是唯一选择）。如果核大小为1×m，那么在两侧都需要补 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>m</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">(m-1)/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span></span></span></span> 个0。</p>
<p>接下来根据移动和式计算：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>s</mi><mo>=</mo><mo>−</mo><mi>a</mi></mrow><mi>a</mi></munderover><mi>w</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>s</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>g</mi><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>s</mi><mo>=</mo><mo>−</mo><mn>2</mn></mrow><mn>2</mn></munderover><mi>w</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mi>f</mi><mo stretchy="false">(</mo><mi>s</mi><mo>+</mo><mn>0</mn><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mspace linebreak="newline"></mspace><mi>g</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>s</mi><mo>=</mo><mo>−</mo><mn>2</mn></mrow><mn>2</mn></munderover><mi>w</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mi>f</mi><mo stretchy="false">(</mo><mi>s</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mn>8</mn><mspace linebreak="newline"></mspace><mi>g</mi><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>s</mi><mo>=</mo><mo>−</mo><mn>2</mn></mrow><mn>2</mn></munderover><mi>w</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mi>f</mi><mo stretchy="false">(</mo><mi>s</mi><mo>+</mo><mn>2</mn><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn><mspace linebreak="newline"></mspace><mi>g</mi><mo stretchy="false">(</mo><mn>3</mn><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>s</mi><mo>=</mo><mo>−</mo><mn>2</mn></mrow><mn>2</mn></munderover><mi>w</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mi>f</mi><mo stretchy="false">(</mo><mi>s</mi><mo>+</mo><mn>3</mn><mo stretchy="false">)</mo><mo>=</mo><mn>4</mn><mspace linebreak="newline"></mspace><mi>g</mi><mo stretchy="false">(</mo><mn>4</mn><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>s</mi><mo>=</mo><mo>−</mo><mn>2</mn></mrow><mn>2</mn></munderover><mi>w</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mi>f</mi><mo stretchy="false">(</mo><mi>s</mi><mo>+</mo><mn>4</mn><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn><mspace linebreak="newline"></mspace><mi>g</mi><mo stretchy="false">(</mo><mn>5</mn><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>s</mi><mo>=</mo><mo>−</mo><mn>2</mn></mrow><mn>2</mn></munderover><mi>w</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mi>f</mi><mo stretchy="false">(</mo><mi>s</mi><mo>+</mo><mn>5</mn><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mspace linebreak="newline"></mspace><mi>g</mi><mo stretchy="false">(</mo><mn>6</mn><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>s</mi><mo>=</mo><mo>−</mo><mn>2</mn></mrow><mn>2</mn></munderover><mi>w</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mi>f</mi><mo stretchy="false">(</mo><mi>s</mi><mo>+</mo><mn>6</mn><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mspace linebreak="newline"></mspace><mi>g</mi><mo stretchy="false">(</mo><mn>7</mn><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>s</mi><mo>=</mo><mo>−</mo><mn>2</mn></mrow><mn>2</mn></munderover><mi>w</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mi>f</mi><mo stretchy="false">(</mo><mi>s</mi><mo>+</mo><mn>7</mn><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">g(x) = \sum_{s=-a}^aw(s)f(x+s)\\
g(0) = \sum_{s=-2}^2w(s)f(s+0) = 0\\
g(1) = \sum_{s=-2}^2w(s)f(s+1) = 8\\
g(2) = \sum_{s=-2}^2w(s)f(s+2) = 2\\
g(3) = \sum_{s=-2}^2w(s)f(s+3) = 4\\
g(4) = \sum_{s=-2}^2w(s)f(s+4) = 2\\
g(5) = \sum_{s=-2}^2w(s)f(s+5) = 1\\
g(6) = \sum_{s=-2}^2w(s)f(s+6) = 0\\
g(7) = \sum_{s=-2}^2w(s)f(s+7) = 0\\
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.959733em;vertical-align:-1.308336em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mathdefault mtight">a</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.126557em;vertical-align:-1.3254439999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3254439999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.126557em;vertical-align:-1.3254439999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3254439999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.126557em;vertical-align:-1.3254439999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3254439999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">3</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.126557em;vertical-align:-1.3254439999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3254439999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">4</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.126557em;vertical-align:-1.3254439999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3254439999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">5</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.126557em;vertical-align:-1.3254439999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3254439999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">5</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">6</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.126557em;vertical-align:-1.3254439999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3254439999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">6</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">7</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.126557em;vertical-align:-1.3254439999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3254439999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">7</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span><span class="mspace newline"></span></span></span></span></p>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b3_2.png" alt></p>
<p>另外，把一个元素是1，其余元素是0的函数称为 <strong>离散单位冲激函数</strong>。而核与离散单位冲激函数进行 <strong>相关</strong> 时，会在这个冲激的位置产生核的旋转版本。</p>
<p>广泛地说，一个函数与一个冲激进行卷积时，在冲激所在的位置产生这个函数的副本。</p>
<p>将一维推广到二维图像，对于大小为m×n的核，需要在图像的顶部核底部至少补 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>m</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">(m-1)/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span></span></span></span> 行0，在左侧和右侧至少补 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">(n-1)/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span></span></span></span> 列0。</p>
<p>假设m和n都为3：</p>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b3_3.png" alt></p>
<p>二维下的旋转180°等效于核关于其一个轴旋转，再关于另一个轴旋转。</p>
<p>回头再看冲激函数，其坐标 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_0,y_0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 处的离散冲激强度（振幅）A定义为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><msub><mi>x</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>y</mi><mo>−</mo><msub><mi>y</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>A</mi><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>x</mi><mn>0</mn></msub><mo>=</mo><mi>x</mi><mtext>和</mtext><msub><mi>y</mi><mn>0</mn></msub><mo>=</mo><mi>y</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>其他</mtext></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">δ(x-x_0,y-y_0)=\left\{
\begin{matrix}
A,&amp;x_0=x和y_0=y\\
0,&amp;其他
\end{matrix}
\right.
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="mpunct">,</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">x</span><span class="mord cjk_fallback">和</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">其</span><span class="mord cjk_fallback">他</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p><strong>小结</strong></p>
<p><strong>大小为m×n的核w与图像f(x,y)的相关：</strong></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mtext>☆</mtext><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>w</mi><mtext>☆</mtext><mi>f</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>s</mi><mo>=</mo><mo>−</mo><mi>a</mi></mrow><mi>a</mi></munderover><munderover><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mo>−</mo><mi>b</mi></mrow><mi>b</mi></munderover><mi>w</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>s</mi><mo separator="true">,</mo><mi>y</mi><mo>+</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">w☆f(x,y)=(w☆f)(x,y)=\sum_{s=-a}^a\sum_{t=-b}^bw(s,t)f(x+s,y+t)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord">☆</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord">☆</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1965570000000003em;vertical-align:-1.360444em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mathdefault mtight">a</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.836113em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mathdefault mtight">b</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.360444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span></span></p>
<p><strong>大小为m×n的核w与图像f(x,y)的卷积：</strong></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mtext>★</mtext><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>w</mi><mtext>★</mtext><mi>f</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>s</mi><mo>=</mo><mo>−</mo><mi>a</mi></mrow><mi>a</mi></munderover><munderover><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mo>−</mo><mi>b</mi></mrow><mi>b</mi></munderover><mi>w</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>s</mi><mo separator="true">,</mo><mi>y</mi><mo>−</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">w★f(x,y)=(w★f)(x,y)=\sum_{s=-a}^a\sum_{t=-b}^bw(s,t)f(x-s,y-t)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord">★</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord">★</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1965570000000003em;vertical-align:-1.360444em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mathdefault mtight">a</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.836113em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mathdefault mtight">b</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.360444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span></span></p>
<p>当卷积其中的一个函数旋转180°后，减号对应其f和w的坐标，也可以完成乘积之和处理即线性空间滤波。</p>
<p><strong>相关和卷积运算满足的性质：</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">性质</th>
<th style="text-align:center">卷积</th>
<th style="text-align:center">相关</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">交换律</td>
<td style="text-align:center">f★g = g★f</td>
<td style="text-align:center">不成立</td>
</tr>
<tr>
<td style="text-align:center">结合律</td>
<td style="text-align:center">f★(g★h) = (f★g)★h</td>
<td style="text-align:center">不成立</td>
</tr>
<tr>
<td style="text-align:center">分配律</td>
<td style="text-align:center">f★(g+h)=(f★g)+(f★h)</td>
<td style="text-align:center">f☆(g+h)=(f☆g)+(f☆h)</td>
</tr>
</tbody>
</table>
<h2 id="低通空间滤波器">低通空间滤波器</h2>
<h3 id="盒式滤波器-均值滤波器">盒式滤波器、均值滤波器</h3>
<p><strong>均值滤波就是将区域内的像素灰度值的平均值作为中心像素的灰度值。</strong></p>
<p>一个3×3的均值滤波器核如：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace width="2em"><mn>1</mn><mspace width="2em"><mn>1</mn><mspace width="2em"><mn>1</mn><mspace linebreak="newline"></mspace><mfrac><mn>1</mn><mn>9</mn></mfrac><mo>×</mo><mn>1</mn><mspace width="2em"><mn>1</mn><mspace width="2em"><mn>1</mn><mspace linebreak="newline"></mspace><mspace width="2em"><mn>1</mn><mspace width="2em"><mn>1</mn><mspace width="2em"><mn>1</mn></mspace></mspace></mspace></mspace></mspace></mspace></mspace></mspace></mrow><annotation encoding="application/x-tex">\qquad 1\qquad1\qquad1\\
\frac 19\times 1\qquad 1\qquad1\\ 
\qquad 1\qquad1\qquad1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mspace" style="margin-right:2em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:2em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:2em;"></span><span class="mord">1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord">9</span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord">1</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:2em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:2em;"></span><span class="mord">1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mspace" style="margin-right:2em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:2em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:2em;"></span><span class="mord">1</span></span></span></span></span></p>
<p>OpenCV提供了一个均值滤波（盒式滤波器）函数；</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">blur</span><span class="params">(InputArray src, OutputArray dst, Size ksize, Point anchor = Point(<span class="number">-1</span>,<span class="number">-1</span>), <span class="type">int</span> borderType = BORDER_DEFAULT)</span></span></span><br></pre></td></tr></table></figure></div>
<p>参数如下：</p>
<ul>
<li>
<p>src：输入图像; 它可以有任意数量的通道，这些通道是独立处理的，但深度应该是CV_8U, CV_16U, CV_16S, CV_32F或CV_64F。</p>
</li>
<li>
<p>dst：输出与src相同大小和类型的图像。</p>
</li>
<li>
<p>ksize：核大小，cv::Size类型。</p>
</li>
<li>
<p>anchor：锚点，默认值Point(-1，-1)表示锚点位于内核中心。</p>
</li>
<li>
<p>borderType：int类型，用于推断图像外部像素的某种边界模式，一般不管。</p>
</li>
</ul>
<p>代码：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 手动实现盒式均值滤波器</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">filter</span><span class="params">(<span class="type">int</span> filter_size, cv::Mat &amp;image_input, cv::Mat &amp;image_output)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    image_output = image_input.<span class="built_in">clone</span>();</span><br><span class="line">    <span class="type">int</span> k = (filter_size - <span class="number">1</span>) / <span class="number">2</span>;  <span class="comment">// 实现对齐核中心元素</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = k; i &lt; image_input.rows - k; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = k; j &lt; image_input.cols - k; j ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> sum = <span class="number">0</span>;    <span class="comment">// 计算相关</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> m = -k; m &lt; k + <span class="number">1</span>; m ++)</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> n = -k; n &lt; k + <span class="number">1</span>; n ++)</span><br><span class="line">                    sum += image_input.<span class="built_in">at</span>&lt;uchar&gt;(i + m, j + n);</span><br><span class="line"></span><br><span class="line">            image_output.<span class="built_in">at</span>&lt;uchar&gt;(i, j) = <span class="built_in">round</span>(sum / (filter_size * filter_size));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cv::Mat image = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>, <span class="number">0</span>);</span><br><span class="line">    cv::Mat image_output, image_output2;</span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, image);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// CV自带的均值滤波器，核大小为7</span></span><br><span class="line">    cv::<span class="built_in">blur</span>(image, image_output, cv::<span class="built_in">Size</span>(<span class="number">7</span>, <span class="number">7</span>));</span><br><span class="line">    <span class="comment">// 自己实现的均值滤波器，核大小为7</span></span><br><span class="line">    <span class="built_in">filter</span>(<span class="number">7</span>, image, image_output2);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对比CV自带的均值滤波器与自己实现的均值滤波器性能表现</span></span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;after1&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;after1&quot;</span>, image_output);</span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;after2&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;after2&quot;</span>, image_output2);</span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b3_run1.jpg" alt="效果展示"><figcaption>效果展示</figcaption></figure></p>
<p>也许上述效果不明显，可以进行彩色图像，增加杂波，再进行均值滤波器处理。</p>
<p>代码：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;random&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 随机将n个像素值变成白点，构成噪声</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Salt</span><span class="params">(cv::Mat image, <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 生成随机数</span></span><br><span class="line">    std::default_random_engine generater;</span><br><span class="line">    std::uniform_int_distribution&lt;<span class="type">int</span>&gt;<span class="built_in">randomRow</span>(<span class="number">0</span>, image.rows - <span class="number">1</span>);</span><br><span class="line">    std::uniform_int_distribution&lt;<span class="type">int</span>&gt;<span class="built_in">randomCol</span>(<span class="number">0</span>, image.cols - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; n; k ++)</span><br><span class="line">    &#123;</span><br><span class="line">        i = <span class="built_in">randomRow</span>(generater);</span><br><span class="line">        j = <span class="built_in">randomCol</span>(generater);</span><br><span class="line">        <span class="keyword">if</span> (image.<span class="built_in">channels</span>() == <span class="number">1</span>)</span><br><span class="line">            image.<span class="built_in">at</span>&lt;uchar&gt;(i, j) = <span class="number">255</span>;</span><br><span class="line">        <span class="keyword">if</span> (image.<span class="built_in">channels</span>() == <span class="number">3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            image.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i, j)[<span class="number">0</span>] = <span class="number">255</span>;</span><br><span class="line">            image.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i, j)[<span class="number">1</span>] = <span class="number">255</span>;</span><br><span class="line">            image.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i, j)[<span class="number">2</span>] = <span class="number">255</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 手动实现均值滤波器，BGR三通道都进行均值滤波</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">filter</span><span class="params">(<span class="type">int</span> filter_size, cv::Mat &amp;image_input, cv::Mat &amp;image_output)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    image_output = image_input.<span class="built_in">clone</span>();</span><br><span class="line">    <span class="type">int</span> k = (filter_size - <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = k; i &lt; image_input.rows - k; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = k; j &lt; image_input.cols - k; j ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> sum1 = <span class="number">0</span>, sum2 = <span class="number">0</span>, sum3 = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> m = -k; m &lt; k + <span class="number">1</span>; m ++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> n = -k; n &lt; k + <span class="number">1</span>; n ++)</span><br><span class="line">                &#123;</span><br><span class="line">                    sum1 += image_input.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i + m, j + n)[<span class="number">0</span>];</span><br><span class="line">                    sum2 += image_input.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i + m, j + n)[<span class="number">1</span>];</span><br><span class="line">                    sum3 += image_input.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i + m, j + n)[<span class="number">2</span>];</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            image_output.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i, j)[<span class="number">0</span>] = <span class="built_in">round</span>(sum1 / (filter_size * filter_size));</span><br><span class="line">            image_output.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i, j)[<span class="number">1</span>] = <span class="built_in">round</span>(sum2 / (filter_size * filter_size));</span><br><span class="line">            image_output.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i, j)[<span class="number">2</span>] = <span class="built_in">round</span>(sum3 / (filter_size * filter_size));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cv::Mat image = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>);</span><br><span class="line">    cv::Mat image_output, image_output2;</span><br><span class="line">    <span class="built_in">Salt</span>(image, <span class="number">100000</span>);    <span class="comment">// 随机生成10w个白点构成噪声</span></span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, image);</span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">blur</span>(image, image_output, cv::<span class="built_in">Size</span>(<span class="number">7</span>, <span class="number">7</span>));</span><br><span class="line">    <span class="built_in">filter</span>(<span class="number">7</span>, image, image_output2);</span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;after1&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;after1&quot;</span>, image_output);</span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;after2&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;after2&quot;</span>, image_output2);</span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b3_run2.jpg" alt="效果展示"><figcaption>效果展示</figcaption></figure></p>
<h3 id="高斯滤波器">高斯滤波器</h3>
<p>在统计学与概率论中，高斯函数是正态分布（高斯分布）的密度函数。一维的高斯表达式如下：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>a</mi><msup><mi>e</mi><mrow><mo>−</mo><mfrac><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>μ</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac></mrow></msup><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">f(x)=ae^{-\frac{(x-μ)^2} {2σ^2} }\\
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.32909em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.32909em;"><span style="top:-3.4534200000000004em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.250957142857143em;"><span style="top:-2.5061857142857145em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9384399999999999em;"><span style="top:-2.93844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.5020714285714285em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">x</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">μ</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04844em;"><span style="top:-3.04844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49381428571428565em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span><span class="mspace newline"></span></span></span></span></p>
<p>其中a、μ、σ为实数常数，a&gt;0；a表示曲线的高度，μ表示曲线在x轴的中心，σ与半峰全宽有关。</p>
<p>而二维高斯表达式如下：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>π</mi><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac><msup><mi>e</mi><mrow><mo>−</mo><mfrac><mrow><mo>−</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac></mrow></msup></mrow><annotation encoding="application/x-tex">G(x,y)=\frac{1} {2\piσ^2}e^{-\frac{-(x^2+y^2)} {2σ^2} }
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.0150900000000003em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.32909em;"><span style="top:-3.4534200000000004em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.250957142857143em;"><span style="top:-2.5061857142857145em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9384399999999999em;"><span style="top:-2.93844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.5020714285714285em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04844em;"><span style="top:-3.04844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04844em;"><span style="top:-3.04844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49381428571428565em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>故高斯核为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>G</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>K</mi><msup><mi>e</mi><mrow><mo>−</mo><mfrac><mrow><msup><mi>s</mi><mn>2</mn></msup><mo>+</mo><msup><mi>t</mi><mn>2</mn></msup></mrow><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac></mrow></msup><mspace linebreak="newline"></mspace><mi>G</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo><mo>=</mo><mi>K</mi><msup><mi>e</mi><mrow><mo>−</mo><mfrac><msup><mi>r</mi><mn>2</mn></msup><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac></mrow></msup><mtext>，当</mtext><mi>r</mi><mo>=</mo><mo stretchy="false">(</mo><msup><mi>s</mi><mn>2</mn></msup><mo>+</mo><msup><mi>t</mi><mn>2</mn></msup><msup><mo stretchy="false">)</mo><mfrac><mn>1</mn><mn>2</mn></mfrac></msup></mrow><annotation encoding="application/x-tex">w(s,t)=G(s,t)=Ke^{-\frac{s^2+t^2} {2σ^2} }\\
G(r)=Ke^{-\frac{r^2} {2σ^2} }，当r=(s^2+t^2)^{\frac 12}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.24644em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.24644em;"><span style="top:-3.4534200000000004em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1328857142857145em;"><span style="top:-2.5061857142857145em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9384399999999999em;"><span style="top:-2.93844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04844em;"><span style="top:-3.04844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04844em;"><span style="top:-3.04844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49381428571428565em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.24644em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.24644em;"><span style="top:-3.4534200000000004em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1328857142857145em;"><span style="top:-2.5061857142857145em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9384399999999999em;"><span style="top:-2.93844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04844em;"><span style="top:-3.04844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49381428571428565em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">当</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2540200000000001em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0040200000000001em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>OpenCV提供了一个高斯滤波器函数；</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">GaussianBlur</span><span class="params">( InputArray src, OutputArray dst, Size ksize, <span class="type">double</span> sigmaX, <span class="type">double</span> sigmaY = <span class="number">0</span>, <span class="type">int</span> borderType = BORDER_DEFAULT )</span></span></span><br></pre></td></tr></table></figure></div>
<p>参数如下：</p>
<ul>
<li>
<p>src：输入图像; 它可以有任意数量的通道，这些通道是独立处理的，但深度应该是CV_8U, CV_16U, CV_16S, CV_32F或CV_64F。</p>
</li>
<li>
<p>dst：输出与src相同大小和类型的图像。</p>
</li>
<li>
<p>ksize：核大小，cv::Size类型。</p>
</li>
<li>
<p>sigmaX：高斯核函数在X方向上的标准偏差。</p>
</li>
<li>
<p>sigmaY：高斯核函数在Y方向上的标准偏差。如果sigmaY为0，则将其设为sigmaX；如果sigmaX核sigmaY都为0，则有ksize.width核ksize.height计算。</p>
</li>
<li>
<p>borderType：int类型，用于推断图像外部像素的某种边界模式，一般不管。</p>
</li>
</ul>
<p>代码：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;random&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 随机将n个像素值变成白点，构成噪声</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Salt</span><span class="params">(cv::Mat image, <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 生成随机数</span></span><br><span class="line">    std::default_random_engine generater;</span><br><span class="line">    std::uniform_int_distribution&lt;<span class="type">int</span>&gt;<span class="built_in">randomRow</span>(<span class="number">0</span>, image.rows - <span class="number">1</span>);</span><br><span class="line">    std::uniform_int_distribution&lt;<span class="type">int</span>&gt;<span class="built_in">randomCol</span>(<span class="number">0</span>, image.cols - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; n; k ++)</span><br><span class="line">    &#123;</span><br><span class="line">        i = <span class="built_in">randomRow</span>(generater);</span><br><span class="line">        j = <span class="built_in">randomCol</span>(generater);</span><br><span class="line">        <span class="keyword">if</span> (image.<span class="built_in">channels</span>() == <span class="number">1</span>)</span><br><span class="line">            image.<span class="built_in">at</span>&lt;uchar&gt;(i, j) = <span class="number">255</span>;</span><br><span class="line">        <span class="keyword">if</span> (image.<span class="built_in">channels</span>() == <span class="number">3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            image.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i, j)[<span class="number">0</span>] = <span class="number">255</span>;</span><br><span class="line">            image.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i, j)[<span class="number">1</span>] = <span class="number">255</span>;</span><br><span class="line">            image.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i, j)[<span class="number">2</span>] = <span class="number">255</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 手动实现高斯滤波器，BGR三通道都进行高斯滤波</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">filter1</span><span class="params">(<span class="type">int</span> filter_size, cv::Mat &amp;image_input, cv::Mat &amp;image_output)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    image_output = image_input.<span class="built_in">clone</span>();</span><br><span class="line">    <span class="type">int</span> k = (filter_size - <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = k; i &lt; image_input.rows - k; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = k; j &lt; image_input.cols - k; j ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">double</span> sum1 = <span class="number">0.0</span>, sum2 = <span class="number">0.0</span>, sum3 = <span class="number">0.0</span>;</span><br><span class="line">            <span class="type">double</span> sum1_ = <span class="number">0.0</span>, sum2_ = <span class="number">0.0</span>, sum3_ = <span class="number">0.0</span>;</span><br><span class="line">            <span class="type">double</span> sigma = <span class="number">7</span>, g;   <span class="comment">// sigma可修改</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> m = -k; m &lt; k + <span class="number">1</span>; m ++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> n = -k; n &lt; k + <span class="number">1</span>; n ++)</span><br><span class="line">                &#123;</span><br><span class="line">                    g = <span class="built_in">exp</span>(-(m * m + n * n) / (<span class="number">2</span> * sigma * sigma));</span><br><span class="line">                    sum1 += g * image_input.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i + m, j + n)[<span class="number">0</span>];</span><br><span class="line">                    sum1_ += g;</span><br><span class="line">                    sum2 += g * image_input.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i + m, j + n)[<span class="number">1</span>];</span><br><span class="line">                    sum2_ += g;</span><br><span class="line">                    sum3 += g * image_input.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i + m, j + n)[<span class="number">2</span>];</span><br><span class="line">                    sum3_ += g;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            image_output.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i, j)[<span class="number">0</span>] = (<span class="type">int</span>) <span class="built_in">round</span>(sum1 / sum1_);</span><br><span class="line">            image_output.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i, j)[<span class="number">1</span>] = (<span class="type">int</span>) <span class="built_in">round</span>(sum2 / sum2_);</span><br><span class="line">            image_output.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i, j)[<span class="number">2</span>] = (<span class="type">int</span>) <span class="built_in">round</span>(sum3 / sum3_);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cv::Mat image = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>);</span><br><span class="line">    cv::Mat image_output, image_output2;</span><br><span class="line">    <span class="built_in">Salt</span>(image, <span class="number">100000</span>);    <span class="comment">// 随机生成10w个白点构成噪声</span></span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, image);</span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">GaussianBlur</span>(image, image_output, cv::<span class="built_in">Size</span>(<span class="number">7</span>, <span class="number">7</span>), <span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="built_in">filter1</span>(<span class="number">7</span>, image, image_output2);</span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;after1&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;after1&quot;</span>, image_output);</span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;after2&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;after2&quot;</span>, image_output2);</span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b3_run3.jpg" alt="效果展示"><figcaption>效果展示</figcaption></figure></p>
<h3 id="中值滤波">中值滤波</h3>
<p><strong>中值滤波就是取周围邻域像素灰度值（或GRB值）的中值作为中心像素灰度值结果。</strong></p>
<p>OpenCV提供了一个中值滤波器函数；</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">medianBlur</span><span class="params">(InputArray src, OutputArray dst, <span class="type">int</span> ksize)</span></span></span><br></pre></td></tr></table></figure></div>
<p>参数如下：</p>
<ul>
<li>
<p>src：输入图像; 输入1、3或4通道图像，当ksize为3或5时，图像深度应该是CV_8U、CV_16U或CV_32F，对于更大的孔径尺寸，只能是CV_8U。</p>
</li>
<li>
<p>dst：输出与src相同大小和类型的图像。</p>
</li>
<li>
<p>ksize：核大小。</p>
</li>
</ul>
<p>代码：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;random&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 随机将n个像素值变成白点，构成噪声</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Salt</span><span class="params">(cv::Mat image, <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 生成随机数</span></span><br><span class="line">    std::default_random_engine generater;</span><br><span class="line">    std::uniform_int_distribution&lt;<span class="type">int</span>&gt;<span class="built_in">randomRow</span>(<span class="number">0</span>, image.rows - <span class="number">1</span>);</span><br><span class="line">    std::uniform_int_distribution&lt;<span class="type">int</span>&gt;<span class="built_in">randomCol</span>(<span class="number">0</span>, image.cols - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; n; k ++)</span><br><span class="line">    &#123;</span><br><span class="line">        i = <span class="built_in">randomRow</span>(generater);</span><br><span class="line">        j = <span class="built_in">randomCol</span>(generater);</span><br><span class="line">        <span class="keyword">if</span> (image.<span class="built_in">channels</span>() == <span class="number">1</span>)</span><br><span class="line">            image.<span class="built_in">at</span>&lt;uchar&gt;(i, j) = <span class="number">255</span>;</span><br><span class="line">        <span class="keyword">if</span> (image.<span class="built_in">channels</span>() == <span class="number">3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            image.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i, j)[<span class="number">0</span>] = <span class="number">255</span>;</span><br><span class="line">            image.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i, j)[<span class="number">1</span>] = <span class="number">255</span>;</span><br><span class="line">            image.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i, j)[<span class="number">2</span>] = <span class="number">255</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 找中值</span></span><br><span class="line"><span class="function">cv::Vec3b <span class="title">MedianFinding</span><span class="params">(cv::Mat &amp;mat, <span class="type">int</span> filter_size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cv::Vec3b tmp;</span><br><span class="line">    cv::Vec3b m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= filter_size - <span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= filter_size - i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (mat.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(j - <span class="number">1</span>)[<span class="number">0</span>] &gt; mat.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(j)[<span class="number">0</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                tmp = mat.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(j - <span class="number">1</span>);</span><br><span class="line">                mat.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(j - <span class="number">1</span>) = mat.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(j);</span><br><span class="line">                mat.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(j) = tmp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> m = mat.<span class="built_in">at</span>&lt;cv::Vec3b&gt;((filter_size + <span class="number">1</span>) / <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 手动实现中值滤波器，BGR三通道都进行中值滤波</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">filter2</span><span class="params">(<span class="type">int</span> filter_size, cv::Mat &amp;image_input, cv::Mat &amp;image_output)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    image_output = image_input.<span class="built_in">clone</span>();</span><br><span class="line">    <span class="type">int</span> k = (filter_size - <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">    <span class="function">cv::Mat <span class="title">arry</span><span class="params">(<span class="number">1</span>, filter_size * filter_size, CV_8UC3)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = k; i &lt; image_input.rows - k; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = k; j &lt; image_input.cols - k; j ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> mid = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> m = -k; m &lt; k + <span class="number">1</span>; m ++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> n = -k; n &lt; k + <span class="number">1</span>; n ++)</span><br><span class="line">                &#123;</span><br><span class="line">                    arry.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(mid) = image_input.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i + m, j + n);</span><br><span class="line">                    mid ++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            image_output.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i, j) = <span class="built_in">MedianFinding</span>(arry, filter_size * filter_size);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cv::Mat image = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>);</span><br><span class="line">    cv::Mat image_output, image_output2;</span><br><span class="line">    <span class="built_in">Salt</span>(image, <span class="number">100000</span>);    <span class="comment">// 随机生成10w个白点构成噪声</span></span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, image);</span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">medianBlur</span>(image, image_output, <span class="number">7</span>);</span><br><span class="line">    <span class="built_in">filter2</span>(<span class="number">7</span>, image, image_output2);   <span class="comment">// 个人体验速度较慢</span></span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;after1&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;after1&quot;</span>, image_output);</span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;after2&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;after2&quot;</span>, image_output2);</span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b3_run4.jpg" alt="效果展示"><figcaption>效果展示</figcaption></figure></p>
<h2 id="高通空间滤波器">高通空间滤波器</h2>
<h3 id="基础">基础</h3>
<p><strong>锐化的作用时突出灰度中的过渡。</strong></p>
<p>平滑可以类似为积分运算，那么锐化则可以类似为微分运算。图像模糊在空间域中可以通过平均（平滑）一个邻域中的像素实现。而图像微分将会增强边缘和其他不连续（如噪声）。</p>
<p>数字函数的导数是用差分定义，一阶导数的任何定义都要满足：</p>
<ol>
<li>
<p>恒定灰度区域的一阶导数必须为零。</p>
</li>
<li>
<p>灰度台阶或斜坡开始处的一阶导数必须非零。</p>
</li>
<li>
<p>灰度斜坡上的一阶导数必须非零。</p>
</li>
</ol>
<p>类似有二阶导数的任何定义都要满足：</p>
<ol>
<li>
<p>恒定灰度区域的二阶导数必须为零。</p>
</li>
<li>
<p>灰度台阶或斜坡的开始处和结束处的二阶导数必须非零。</p>
</li>
<li>
<p>灰度斜坡上的二阶导数必须为零。</p>
</li>
</ol>
<p>而处理图像时，变化发生的最短距离也就是像素间的距离。</p>
<p>一维函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span> 的一阶导数的一个基本定义是差分：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">d</mi><mi>f</mi></mrow><mrow><mi mathvariant="normal">d</mi><mi>x</mi></mrow></mfrac><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>−</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac {\mathrm{d}f} {\mathrm{d}x}=f(x+1)-f(x)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0574399999999997em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathdefault">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span></span></p>
<p>二维函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 的二阶导数定义为差分：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><msup><mi mathvariant="normal">∂</mi><mn>2</mn></msup><mi>f</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>x</mi><mn>2</mn></msup></mrow></mfrac><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>−</mo><mn>2</mn><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac {\partial^2 f} {\partial x^2}=f(x+1)+f(x-1)-2f(x)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.177108em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span></span></p>
<p>先用一维函数举例：</p>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b4_1.png" alt></p>
<p>一维函数导数满足上述性质，类比一维函数可知二维函数。数字图像的边缘在灰度上通常类似于斜坡过渡，图像的一阶导数会产生较宽的边缘；另外，二阶导数会产生宽度为1像素并由零分隔的双边缘。所以， <strong>与一阶导数相比，二阶导数可增强更精细的细节，而实现二阶导数所需的运算量也更少。</strong></p>
<h3 id="拉普拉斯锐化滤波">拉普拉斯锐化滤波</h3>
<p><strong>最简单的各向同性导数算子（核）是拉普拉斯。</strong> 对于两个变量的函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> ，定义为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="normal">∇</mi><mn>2</mn></msup><mi>f</mi><mo>=</mo><mfrac><mrow><msup><mi mathvariant="normal">∂</mi><mn>2</mn></msup><mi>f</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>x</mi><mn>2</mn></msup></mrow></mfrac><mo>+</mo><mfrac><mrow><msup><mi mathvariant="normal">∂</mi><mn>2</mn></msup><mi>f</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>y</mi><mn>2</mn></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\nabla^2f=\frac {\partial^2f} {\partial x^2} + \frac {\partial^2f} {\partial y^2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0585479999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.177108em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.371548em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>拉普拉斯是线性算子。在x方向有：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><msup><mi mathvariant="normal">∂</mi><mn>2</mn></msup><mi>f</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>x</mi><mn>2</mn></msup></mrow></mfrac><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>+</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>−</mo><mn>2</mn><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{\partial^2f} {\partial x^2}=f(x+1,y)+f(x-1,y)-2f(x,y)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.177108em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></span></p>
<p>在y方向有：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><msup><mi mathvariant="normal">∂</mi><mn>2</mn></msup><mi>f</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>x</mi><mn>2</mn></msup></mrow></mfrac><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>−</mo><mn>2</mn><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{\partial^2f} {\partial x^2}=f(x,y+1)+f(x,y-1)-2f(x,y)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.177108em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></span></p>
<p>由上面三个式子可得两个变量的拉普拉斯是：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="normal">∇</mi><mn>2</mn></msup><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>+</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>+</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>−</mo><mn>4</mn><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\nabla^2f(x,y)=f(x+1,y)+f(x-1,y)+f(x,y+1)+f(x,y-1)-4f(x,y)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></span></p>
<p>该公式可以使用卷积运算，上式的拉普拉斯核为：</p>
<table>
<thead>
<tr>
<th style="text-align:center">0</th>
<th style="text-align:center">1</th>
<th style="text-align:center">0</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">-4</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">0</td>
</tr>
</tbody>
</table>
<p><em>(a)</em></p>
<p>这个也叫四邻域核，还有八邻域核：</p>
<table>
<thead>
<tr>
<th style="text-align:center">1</th>
<th style="text-align:center">1</th>
<th style="text-align:center">1</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">-8</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
</tr>
</tbody>
</table>
<p><em>(b)</em></p>
<p>两个其他的核（系数反转）：</p>
<table>
<thead>
<tr>
<th style="text-align:center">0</th>
<th style="text-align:center">-1</th>
<th style="text-align:center">0</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">-1</td>
<td style="text-align:center">4</td>
<td style="text-align:center">-1</td>
</tr>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">-1</td>
<td style="text-align:center">0</td>
</tr>
</tbody>
</table>
<p><em>©</em></p>
<table>
<thead>
<tr>
<th style="text-align:center">-1</th>
<th style="text-align:center">-1</th>
<th style="text-align:center">-1</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">-1</td>
<td style="text-align:center">8</td>
<td style="text-align:center">-1</td>
</tr>
<tr>
<td style="text-align:center">-1</td>
<td style="text-align:center">-1</td>
<td style="text-align:center">-1</td>
</tr>
</tbody>
</table>
<p><em>(d)</em></p>
<p>但是不能直接使用拉普拉斯，它会突出图像中急剧灰度过渡，不强调缓慢变化的灰度区域，往往会产生具有灰色边缘线核其他不连续的图像。所以需要 <strong>将拉普拉斯图像和原图像相加恢复背景特征</strong>。</p>
<p>使用拉普拉斯锐化图像：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>+</mo><mi>c</mi><mo stretchy="false">[</mo><msup><mi mathvariant="normal">∇</mi><mn>2</mn></msup><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">g(x,y)=f(x,y)+c[\nabla^2f(x,y)]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mopen">[</span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">]</span></span></span></span></span></p>
<p>f(x,y)为输入图像，g(x,y)为锐化后图像。若使用核(a)或核(b)，取c=-1；若使用核©或核(d)，取c=1。</p>
<p>代码：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 四邻域拉普拉斯核</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">filter_4</span><span class="params">(cv::Mat &amp;input, cv::Mat &amp;output)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    output = input.<span class="built_in">clone</span>();</span><br><span class="line">	<span class="type">int</span> la;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; input.rows - <span class="number">1</span>; i ++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; input.cols - <span class="number">1</span>; j ++)</span><br><span class="line">		&#123;</span><br><span class="line">            la = input.<span class="built_in">at</span>&lt;uchar&gt;(i + <span class="number">1</span>, j) + input.<span class="built_in">at</span>&lt;uchar&gt;(i - <span class="number">1</span>, j)</span><br><span class="line">                + input.<span class="built_in">at</span>&lt;uchar&gt;(i, j + <span class="number">1</span>) + input.<span class="built_in">at</span>&lt;uchar&gt;(i, j - <span class="number">1</span>)</span><br><span class="line">                - <span class="number">4</span> * input.<span class="built_in">at</span>&lt;uchar&gt;(i, j);</span><br><span class="line">            output.<span class="built_in">at</span>&lt;uchar&gt;(i, j) = cv::<span class="built_in">saturate_cast</span>&lt;uchar&gt;(output.<span class="built_in">at</span>&lt;uchar&gt;(i, j) - la);</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 八邻域拉普拉斯核</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">filter_8</span><span class="params">(cv::Mat &amp;input, cv::Mat &amp;output)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    output = input.<span class="built_in">clone</span>();</span><br><span class="line">    <span class="type">int</span> la;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; input.rows - <span class="number">1</span>; i ++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; input.cols - <span class="number">1</span>; j ++)</span><br><span class="line">        &#123;</span><br><span class="line">            la = input.<span class="built_in">at</span>&lt;uchar&gt;(i - <span class="number">1</span>, j - <span class="number">1</span>) + input.<span class="built_in">at</span>&lt;uchar&gt;(i - <span class="number">1</span>, j) +</span><br><span class="line">                input.<span class="built_in">at</span>&lt;uchar&gt;(i - <span class="number">1</span>, j + <span class="number">1</span>) + input.<span class="built_in">at</span>&lt;uchar&gt;(i, j - <span class="number">1</span>) +</span><br><span class="line">                input.<span class="built_in">at</span>&lt;uchar&gt;(i, j + <span class="number">1</span>) + input.<span class="built_in">at</span>&lt;uchar&gt;(i + <span class="number">1</span>, j - <span class="number">1</span>) +</span><br><span class="line">                input.<span class="built_in">at</span>&lt;uchar&gt;(i + <span class="number">1</span>, j) + input.<span class="built_in">at</span>&lt;uchar&gt;(i + <span class="number">1</span>, j + <span class="number">1</span>) -</span><br><span class="line">                <span class="number">8</span> * input.<span class="built_in">at</span>&lt;uchar&gt;(i, j);</span><br><span class="line">            output.<span class="built_in">at</span>&lt;uchar&gt;(i, j) = cv::<span class="built_in">saturate_cast</span>&lt;uchar&gt;(output.<span class="built_in">at</span>&lt;uchar&gt;(i, j) - la);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cv::Mat image = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>, <span class="number">0</span>);</span><br><span class="line">    cv::Mat image_output, image_output2;</span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, image);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">filter_4</span>(image, image_output);</span><br><span class="line">    <span class="built_in">filter_8</span>(image, image_output2);</span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;after1&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;after1&quot;</span>, image_output);</span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;after2&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;after2&quot;</span>, image_output2);</span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>拉普拉斯锐化滤波对于灰度图像的影响十分明显，但是对于彩色图像影响一般。如果想改为适用于彩色图像，只需将数据类型从 <code>uchar</code> 改为 <code>cv::Vec2b</code>。</p>
<p>效果展示：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b4_run1.jpg" alt="效果展示"><figcaption>效果展示</figcaption></figure></p>
<h3 id="一阶导数锐化-梯度">一阶导数锐化——梯度</h3>
<p>一阶导数是用梯度幅度实现。图像f在坐标(x,y)处的梯度定义为二维列向量：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∇</mi><mi>f</mi><mo>≡</mo><mi>g</mi><mi>r</mi><mi>a</mi><mi>d</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>g</mi><mi>x</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>g</mi><mi>y</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">∂</mi><mi>f</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">∂</mi><mi>f</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">∂</mi><mi>y</mi></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\nabla f\equiv grad(f)=\left[\begin{matrix}g_x \\ g_y\end{matrix}\right]=\left[\begin{matrix}\partial f/\partial x \\ \partial f/\partial y\end{matrix}\right]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">∇</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord">/</span><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">x</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord">/</span><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></span></p>
<p>这个向量指向f的最大变化率方向。</p>
<p>向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∇</mi><mi>f</mi></mrow><annotation encoding="application/x-tex">\nabla f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">∇</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span> 的幅度（长度）表示为M(x,y)（有时候用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∇</mi><mi>f</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">\vert\vert\nabla f\vert\vert</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord">∇</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord">∣</span><span class="mord">∣</span></span></span></span> ），其中</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∇</mi><mi>f</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>=</mo><mi>m</mi><mi>a</mi><mi>g</mi><mo stretchy="false">(</mo><mi mathvariant="normal">∇</mi><mi>f</mi><mo stretchy="false">)</mo><mo>=</mo><msqrt><mrow><msubsup><mi>g</mi><mi>x</mi><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>g</mi><mi>y</mi><mn>2</mn></msubsup></mrow></msqrt></mrow><annotation encoding="application/x-tex">M(x,y)=\vert\vert\nabla f\vert\vert=mag(\nabla f)=\sqrt{g_x^2+g_y^2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord">∇</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord">∣</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">∇</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.84em;vertical-align:-0.6276249999999999em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2123750000000002em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7401079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.1723749999999997em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.8800000000000001em;"><svg width="400em" height="1.8800000000000001em" viewbox="0 0 400000 1944" preserveaspectratio="xMinYMin slice"><path d="M983 90
l0 -0
c4,-6.7,10,-10,18,-10 H400000v40
H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7
s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744
c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30
c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722
c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5
c53.7,-170.3,84.5,-266.8,92.5,-289.5z
M1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6276249999999999em;"><span></span></span></span></span></span></span></span></span></span></p>
<p>是梯度向量方向的变化率在(x,y)处的值，方向为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mo><mi>tan</mi><mo>⁡</mo></mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><msub><mi>g</mi><mi>y</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mrow><msub><mi>g</mi><mi>x</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mfrac></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\alpha(x,y)=\tan^{-1}\left[\begin{matrix}\frac{g_y(x,y)} {g_x(x,y)}\end{matrix}\right]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="mop"><span class="mop">tan</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.02616em;"><span style="top:-3.02616em;"><span class="pstrut" style="height:3.03232em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.03232em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.50732em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52616em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">]</span></span></span></span></span></span></span></p>
<p>而M(x,y)是与原图像大小相同的图像，也称为梯度图像。</p>
<p>梯度常用于检测边缘，在边缘检测会详细介绍。</p>
<h1>频率域滤波</h1>
<h2 id="傅里叶变换">傅里叶变换</h2>
<h3 id="傅里叶级数">傅里叶级数</h3>
<p><strong>傅里叶级数：任何周期函数都可表示为不同频率的正弦函数和或余弦函数和，其中每个正弦函数和或余弦函数和都有不同的系数。</strong></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></munderover><msub><mi>c</mi><mi>n</mi></msub><msup><mi>e</mi><mrow><mi>j</mi><mfrac><mrow><mn>2</mn><mi>π</mi><mi>n</mi></mrow><mi>T</mi></mfrac><mi>t</mi></mrow></msup></mrow><annotation encoding="application/x-tex">f(t)=\sum_{n=-\infty}^\infty c_ne^{j\frac {2\pi n} {T}t}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.959733em;vertical-align:-1.308336em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0040200000000001em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>其中，</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mi>n</mi></msub><mo>=</mo><mfrac><mn>1</mn><mi>T</mi></mfrac><msubsup><mo>∫</mo><mrow><mo>−</mo><mi>T</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><mrow><mi>T</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mfrac><mrow><mn>2</mn><mi>π</mi><mi>n</mi></mrow><mi>T</mi></mfrac><mi>t</mi></mrow></msup><mi>d</mi><mi>t</mi><mo separator="true">,</mo><mi>n</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mo>±</mo><mn>1</mn><mo separator="true">,</mo><mo>±</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo></mrow><annotation encoding="application/x-tex">c_n=\frac 1T\int_{-T/2}^{T/2}f(t)e^{-j\frac {2\pi n} {T}t}dt,n=0,\pm 1,\pm 2,…
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.72485em;vertical-align:-1.0869499999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord">1</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6379000000000004em;"><span style="top:-1.7880500000000004em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0869499999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0040200000000001em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">±</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">±</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span></span></span></span></span></p>
<p>是系数。此篇j表示虚数单位： <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>j</mi><mn>2</mn></msup><mo>=</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">j^2=-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span> 。</p>
<h3 id="傅里叶变换">傅里叶变换</h3>
<p><strong>傅里叶变换：（曲线下方面积有限的）非周期函数也能用正弦函数和/或余弦函数乘以加权函数的积分来表示</strong></p>
<p>这表明用傅里叶级数或变换表示的函数可由逆过程完全重建（复原），而不丢失信息；允许我们工作在傅里叶域，然后返回到函数的原始域中，而不会丢失任何信息。</p>
<p>计算机慢慢出现了快速傅里叶变换算法（FFT），使用FFT进行频率域处理比不可分离核的空间域处理要快。</p>
<h3 id="冲激函数及其取样-筛选-性质">冲激函数及其取样（筛选）性质</h3>
<p>连续变量t在t=0处的单位冲激表示为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\delta(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span> ，其定义为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">∞</mi><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>t</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>t</mi><mo mathvariant="normal">≠</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">\delta(t)=\begin{cases}
\infty,&amp;t=0\\
0, &amp;t\neq 0
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">∞</span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>该定义被限制满足：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mi>d</mi><mi>t</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\int_{-\infty}^{\infty}\delta(t)dt=1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.384573em;vertical-align:-0.970281em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p>
<p>当t解释为时间时，冲激可视作幅度为无线、持续时间为0、具有单位面积的尖峰信号。</p>
<p>冲激具有关于积分的所谓 <strong>取样性质</strong> ：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mi>d</mi><mi>t</mi><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\int_{-\infty}^{\infty}f(t)\delta(t)dt=f(0)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.384573em;vertical-align:-0.970281em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord">0</span><span class="mclose">)</span></span></span></span></span></p>
<p>对其一般化，任意一点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">t_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的冲激表示为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><msub><mi>t</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\delta(t-t_0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> ，有：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><msub><mi>t</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mi>d</mi><mi>t</mi><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\int_{-\infty}^{\infty}f(t)\delta(t-t_0)dt=f(t_0)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.384573em;vertical-align:-0.970281em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>举一个小例子，取 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>cos</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(t)=\cos(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">cos</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span> ，则使用冲激 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><mi>π</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\delta(t-\pi)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mclose">)</span></span></span></span> 得到取样 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>π</mi><mo stretchy="false">)</mo><mo>=</mo><mi>cos</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>π</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">f(\pi)=\cos(\pi)=-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">cos</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span> 。</p>
<p>冲激串则是无穷多个冲激 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow><annotation encoding="application/x-tex">\Delta T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span></span> 单位的和：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></munderover><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><mi>k</mi><mi mathvariant="normal">Δ</mi><mi>T</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">s_{\Delta T}(t)=\sum_{k=-\infty}^{\infty}\delta(t-k\Delta T)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0118410000000004em;vertical-align:-1.360444em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.360444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mclose">)</span></span></span></span></span></p>
<p>单位离散冲激 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\delta(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span> 在离散系统的作用域处理连续变量时冲激 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\delta(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span> 作用相同，定义为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo mathvariant="normal">≠</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">\delta(x)=\begin{cases}
1,&amp;x=0\\
0, &amp;x\neq 0
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>该定义被限制的离散等效形式为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>x</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></munderover><mi>δ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\sum_{x=-\infty}^{\infty}\delta(x) = 1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.959733em;vertical-align:-1.308336em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p>
<p>离散变量的取样性质的形式为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>x</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></munderover><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sum_{x=-\infty}^{\infty}f(x)\delta(x)=f(0)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.959733em;vertical-align:-1.308336em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord">0</span><span class="mclose">)</span></span></span></span></span></p>
<p>一般式为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>x</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></munderover><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sum_{x=-\infty}^{\infty}f(x)\delta(x-x_0)=f(x_0)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.959733em;vertical-align:-1.308336em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p><strong>小结：</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">项</th>
<th style="text-align:center">连续变量t</th>
<th style="text-align:center">离散变量x</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">在0处的单位冲激</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">∞</mi><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>t</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>t</mi><mo mathvariant="normal">≠</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">\delta(t)=\begin{cases}\infty,&amp;t=0\\0, &amp;t\neq 0\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">∞</span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo mathvariant="normal">≠</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">\delta(x)=\begin{cases}1,&amp;x=0\\0, &amp;x\neq 0\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></td>
</tr>
<tr>
<td style="text-align:center">单位冲激满足</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mi>d</mi><mi>t</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\int_{-\infty}^{\infty}\delta(t)dt=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.273443em;vertical-align:-0.41415100000000005em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8592920000000001em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.2579000000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.41415100000000005em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>x</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>δ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\sum_{x=-\infty}^{\infty}\delta(x) = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.162333em;vertical-align:-0.35804100000000005em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35804100000000005em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></td>
</tr>
<tr>
<td style="text-align:center">取样性质</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mi>d</mi><mi>t</mi><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\int_{-\infty}^{\infty}f(t)\delta(t)dt=f(0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.273443em;vertical-align:-0.41415100000000005em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8592920000000001em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.2579000000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.41415100000000005em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord">0</span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>x</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sum_{x=-\infty}^{\infty}f(x)\delta(x)=f(0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.162333em;vertical-align:-0.35804100000000005em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35804100000000005em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord">0</span><span class="mclose">)</span></span></span></span></td>
</tr>
<tr>
<td style="text-align:center">取样性质一般化</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><msub><mi>t</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mi>d</mi><mi>t</mi><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>t</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\int_{-\infty}^{\infty}f(t)\delta(t-t_0)dt=f(t_0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.273443em;vertical-align:-0.41415100000000005em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8592920000000001em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.2579000000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.41415100000000005em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>x</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sum_{x=-\infty}^{\infty}f(x)\delta(x-x_0)=f(x_0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.162333em;vertical-align:-0.35804100000000005em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35804100000000005em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
</tr>
</tbody>
</table>
<p>冲激串：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></munderover><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><mi>k</mi><mi mathvariant="normal">Δ</mi><mi>T</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">s_{\Delta T}(t)=\sum_{k=-\infty}^{\infty}\delta(t-k\Delta T)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0118410000000004em;vertical-align:-1.360444em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.360444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mclose">)</span></span></span></span></span></p>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b5_1.png" alt></p>
<h3 id="连续单变量函数的傅里叶变换">连续单变量函数的傅里叶变换</h3>
<p>连续变量t的连续函数f(t)的傅里叶变换 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ℑ</mi><mo stretchy="false">{</mo><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\Im\{f(t)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℑ</span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mclose">}</span></span></span></span> 表示，它定义为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ℑ</mi><mo stretchy="false">{</mo><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>μ</mi><mi>t</mi></mrow></msup><mi>d</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">\Im\{f(t)\}=\int_{-\infty}^{\infty}f(t)e^{-j2\pi \mu t}dt
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℑ</span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.384573em;vertical-align:-0.970281em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">μ</span><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span></span></span></span></span></p>
<p>上式中， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi></mrow><annotation encoding="application/x-tex">\mu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">μ</span></span></span></span> 为连续变量，积分变量为t，所以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ℑ</mi><mo stretchy="false">{</mo><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\Im\{f(t)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℑ</span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mclose">}</span></span></span></span> 只是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi></mrow><annotation encoding="application/x-tex">\mu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">μ</span></span></span></span> 的函数，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ℑ</mi><mo stretchy="false">{</mo><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mo>=</mo><mi>F</mi><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Im\{f(t)\}=F(\mu)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℑ</span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span></span></span></span> ，所以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span> 的傅里叶变换也可以写为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>μ</mi><mi>t</mi></mrow></msup><mi>d</mi><mi>t</mi><mspace width="1em"><mtext>①</mtext></mspace></mrow><annotation encoding="application/x-tex">F(\mu)=\int_{-\infty}^{\infty}f(t)e^{-j2\pi \mu t}dt \quad ①
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.384573em;vertical-align:-0.970281em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">μ</span><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:1em;"></span><span class="mord">①</span></span></span></span></span></p>
<p>相反，已知 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(\mu)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span></span></span></span> 是可以通过傅里叶反变换得到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span> ，为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>F</mi><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mi>j</mi><mn>2</mn><mi>π</mi><mi>μ</mi><mi>t</mi></mrow></msup><mi>d</mi><mi>t</mi><mspace width="1em"><mtext>②</mtext></mspace></mrow><annotation encoding="application/x-tex">f(t)=\int_{-\infty}^{\infty}F(\mu)e^{j2\pi \mu t}dt\quad ②
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.384573em;vertical-align:-0.970281em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">μ</span><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:1em;"></span><span class="mord">②</span></span></span></span></span></p>
<p>称①式和②式共同构成傅里叶变换对，通常表示为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>⇔</mo><mi>F</mi><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(t) \Leftrightarrow F(\mu)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span></span></span></span> 。双箭头表明傅里叶正变换得到右侧表达式，而左侧表达式是取右侧表达式的傅里叶反变换得到。</p>
<p>利用欧拉公式 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>e</mi><mrow><mi>j</mi><mi>θ</mi></mrow></msup><mo>=</mo><mi>cos</mi><mo>⁡</mo><mi>θ</mi><mo>+</mo><mi>j</mi><mi>sin</mi><mo>⁡</mo><mi>θ</mi></mrow><annotation encoding="application/x-tex">e^{j\theta}=\cos\theta+j\sin\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span> ，将式①变成</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">[</mo><mi>cos</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>2</mn><mi>π</mi><mi>μ</mi><mi>t</mi><mo stretchy="false">)</mo><mo>−</mo><mi>j</mi><mi>sin</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>2</mn><mi>π</mi><mi>μ</mi><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mi>d</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">F(\mu)=\int_{-\infty}^{\infty}f(t)[\cos(2\pi\mu t)-j\sin(2\pi\mu t)]dt
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.384573em;vertical-align:-0.970281em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mopen">[</span><span class="mop">cos</span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mord mathdefault">μ</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sin</span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mord mathdefault">μ</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mclose">]</span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span></span></span></span></span></p>
<p>可以看到，如果f(t)为实数，则变换通常是复数。傅里叶变换式f(t)乘以正弦函数的展开式，而其中正弦函数的频率由 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi></mrow><annotation encoding="application/x-tex">\mu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">μ</span></span></span></span> 值决定。因此积分后留下的唯一变量是频率，故称傅里叶变换域是频率域。</p>
<p>讨论中， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span> 可以表示任何连续变量，并且频率变量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi></mrow><annotation encoding="application/x-tex">\mu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">μ</span></span></span></span> 的单位取决于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span> 的单位。</p>
<p>举个例子：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b5_2.png" alt="简单连续函数的傅里叶变换"><figcaption>简单连续函数的傅里叶变换</figcaption></figure></p>
<p>对盒式函数进行傅里叶变换，有</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>μ</mi><mi>t</mi></mrow></msup><mi>d</mi><mi>t</mi><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi>W</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><mrow><mi>W</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msubsup><mi>A</mi><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>μ</mi><mi>t</mi></mrow></msup><mi>d</mi><mi>t</mi><mspace linebreak="newline"></mspace><mo>=</mo><mfrac><mrow><mo>−</mo><mi>A</mi></mrow><mrow><mi>j</mi><mn>2</mn><mi>π</mi><mi>μ</mi></mrow></mfrac><mo fence="false">[</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>μ</mi><mi>t</mi></mrow></msup><msubsup><mo fence="false">]</mo><mrow><mo>−</mo><mi>W</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><mrow><mi>W</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msubsup><mo>=</mo><mfrac><mrow><mo>−</mo><mi>A</mi></mrow><mrow><mi>j</mi><mn>2</mn><mi>π</mi><mi>μ</mi></mrow></mfrac><mo fence="false">[</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mi>π</mi><mi>μ</mi><mi>W</mi></mrow></msup><mo>−</mo><msup><mi>e</mi><mrow><mi>j</mi><mi>π</mi><mi>μ</mi><mi>W</mi></mrow></msup><mo fence="false">]</mo><mspace linebreak="newline"></mspace><mo>=</mo><mfrac><mi>A</mi><mrow><mi>j</mi><mn>2</mn><mi>π</mi><mi>μ</mi></mrow></mfrac><mo fence="false">[</mo><msup><mi>e</mi><mrow><mi>j</mi><mi>π</mi><mi>μ</mi><mi>W</mi></mrow></msup><mo>−</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mi>π</mi><mi>μ</mi><mi>W</mi></mrow></msup><mo fence="false">]</mo><mo>=</mo><mi>A</mi><mi>W</mi><mfrac><mrow><mi>sin</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>π</mi><mi>μ</mi><mi>W</mi><mo stretchy="false">)</mo></mrow><mrow><mi>π</mi><mi>μ</mi><mi>W</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">F(\mu)=\int_{-\infty}^{\infty}f(t)e^{-j2\pi\mu t}dt=\int_{-W/2}^{W/2}Ae^{-j2\pi\mu t}dt\\
=\frac {-A} {j2\pi\mu}\Big[e^{-j2\pi\mu t}\Big]^{W/2}_{-W/2}=\frac {-A} {j2\pi\mu}\Big[e^{-j\pi\mu W}-e^{j\pi\mu W}\Big]\\
=\frac {A} {j2\pi\mu}\Big[e^{j\pi\mu W}-e^{-j\pi\mu W}\Big]=AW\frac {\sin(\pi\mu W)} {\pi\mu W}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.384573em;vertical-align:-0.970281em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">μ</span><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.72485em;vertical-align:-1.0869499999999999em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6379000000000004em;"><span style="top:-1.7880500000000004em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0869499999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">μ</span><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.30834em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mord mathdefault">μ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathdefault">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="delimsizing size2">[</span></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">μ</span><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="delimsizing size2">]</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4278999999999997em;"><span style="top:-2.00028em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.6029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8747199999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.2407700000000004em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mord mathdefault">μ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathdefault">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="delimsizing size2">[</span></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.891331em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">μ</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.891331em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">μ</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span></span></span></span></span></span></span></span></span><span class="mord"><span class="delimsizing size2">]</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.2407700000000004em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mord mathdefault">μ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="delimsizing size2">[</span></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.891331em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">μ</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.891331em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">μ</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span></span></span></span></span></span></span></span></span><span class="mord"><span class="delimsizing size2">]</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.30744em;vertical-align:-0.8804400000000001em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mord mathdefault">μ</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">sin</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mord mathdefault">μ</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>上式用到了 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>sin</mi><mo>⁡</mo><mi>θ</mi><mo>=</mo><mo stretchy="false">(</mo><msup><mi>e</mi><mrow><mi>j</mi><mi>θ</mi></mrow></msup><mo>−</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mi>θ</mi></mrow></msup><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn><mi>j</mi></mrow><annotation encoding="application/x-tex">\sin\theta=(e^{j\theta}-e^{-j\theta})/2j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0991079999999998em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0991079999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span></p>
<p>傅里叶变换中包含复数项，这是为了显示变换的幅值（一个实量）的一种约定。这个幅值称为傅里叶频谱或频谱：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>F</mi><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mo>=</mo><mi>A</mi><mi>W</mi><mi mathvariant="normal">∣</mi><mfrac><mrow><mi>sin</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>π</mi><mi>μ</mi><mi>W</mi><mo stretchy="false">)</mo></mrow><mrow><mi>π</mi><mi>μ</mi><mi>W</mi></mrow></mfrac><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">\vert F(\mu)\vert=AW\vert\frac{\sin(\pi\mu W)} {\pi\mu W}\vert
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.30744em;vertical-align:-0.8804400000000001em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord">∣</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mord mathdefault">μ</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">sin</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mord mathdefault">μ</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">∣</span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(\mu)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span></span></span></span> 与频率的关系曲线如下：</p>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b5_3.png" alt></p>
<p>该曲线的关键性质：</p>
<ol>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(\mu)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>F</mi><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">\vert F(\mu)\vert</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span><span class="mord">∣</span></span></span></span> 的零值都与盒式函数的宽度W成反比；</p>
</li>
<li>
<p>到原点的距离越大，旁瓣的高度随到原点的举例增加而减小；</p>
</li>
<li>
<p>函数向μ的正负方向无限扩展。</p>
</li>
</ol>
<p>再举一个冲激傅里叶变换的例子。</p>
<p>位于原点的单位冲激的傅里叶变换由上面式①得：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ℑ</mi><mo stretchy="false">{</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mo>=</mo><mi>F</mi><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>μ</mi><mi>t</mi></mrow></msup><mi>d</mi><mi>t</mi><mo>=</mo><msubsup><mo>∫</mo><mi mathvariant="normal">∞</mi><mi mathvariant="normal">∞</mi></msubsup><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>μ</mi><mi>t</mi></mrow></msup><mi>d</mi><mi>t</mi><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><msub><mi>μ</mi><mn>0</mn></msub></mrow></msup><mo>=</mo><msup><mi>e</mi><mn>0</mn></msup><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\Im \{\delta(t)\}=F(\mu)=\int_{-\infty}^{\infty}f(t)e^{-j2\pi \mu t}dt=\int_{\infty}^{\infty}\delta(t)e^{-j2\pi\mu t}dt=e^{-j2\pi\mu_0}=e^0=1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℑ</span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.384573em;vertical-align:-0.970281em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">μ</span><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.3262420000000006em;vertical-align:-0.9119499999999999em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4142920000000005em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span><span style="top:-3.812900000000001em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119499999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">μ</span><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.874664em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mtight"><span class="mord mathdefault mtight">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p>
<p>这就是空间域原点位置的一个冲激的傅里叶变换，在频率域中是一个常数。</p>
<p>当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo>=</mo><msub><mi>t</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">t=t_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 处一个冲击傅里叶变换是：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ℑ</mi><mo stretchy="false">{</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mo>=</mo><mi>F</mi><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mi mathvariant="normal">∞</mi><mi mathvariant="normal">∞</mi></msubsup><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><msub><mi>t</mi><mn>0</mn></msub><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>μ</mi><mi>t</mi></mrow></msup><mi>d</mi><mi>t</mi><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>μ</mi><mi>t</mi></mrow></msup><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><msub><mi>t</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mi>d</mi><mi>t</mi><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>μ</mi><msub><mi>t</mi><mn>0</mn></msub></mrow></msup></mrow><annotation encoding="application/x-tex">\Im \{\delta(t)\}=F(\mu)=\int_{\infty}^{\infty}\delta(t-t_0)e^{-j2\pi\mu t}dt=\int_{-\infty}^{\infty}e^{-j2\pi\mu t}\delta(t-t_0)dt=e^{-j2\pi\mu t_0}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℑ</span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.3262420000000006em;vertical-align:-0.9119499999999999em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4142920000000005em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span><span style="top:-3.812900000000001em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119499999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.124664em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">μ</span><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.384573em;vertical-align:-0.970281em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">μ</span><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.874664em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">μ</span><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>上式使用了取样一般化性质。 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>μ</mi><msub><mi>t</mi><mn>0</mn></msub></mrow></msup></mrow><annotation encoding="application/x-tex">e^{-j2\pi\mu t_0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">μ</span><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> 表示中心在复平面原点的一个单位圆。</p>
<p>观察式①式②</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>μ</mi><mi>t</mi></mrow></msup><mi>d</mi><mi>t</mi><mspace linebreak="newline"></mspace><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>F</mi><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mi>j</mi><mn>2</mn><mi>π</mi><mi>μ</mi><mi>t</mi></mrow></msup><mi>d</mi><mi>t</mi><mspace width="1em"></mspace></mrow><annotation encoding="application/x-tex">F(\mu)=\int_{-\infty}^{\infty}f(t)e^{-j2\pi \mu t}dt \\
f(t)=\int_{-\infty}^{\infty}F(\mu)e^{j2\pi \mu t}dt\quad
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.384573em;vertical-align:-0.970281em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">μ</span><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.384573em;vertical-align:-0.970281em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">μ</span><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:1em;"></span></span></span></span></span></p>
<p>发现只有指数符号不同。因此如果函数f(t)有傅里叶变换F(μ)，那么求该函数在点t的值F(t)时，一定有变换f(-μ)。利用这种对称性质，将冲激 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><msub><mi>t</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\delta(t-t_0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 的傅里叶变换 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>μ</mi><msub><mi>t</mi><mn>0</mn></msub></mrow></msup></mrow><annotation encoding="application/x-tex">e^{-j2\pi\mu t_0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">μ</span><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> 得到函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>μ</mi><msub><mi>t</mi><mn>0</mn></msub></mrow></msup></mrow><annotation encoding="application/x-tex">e^{-j2\pi\mu t_0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">μ</span><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> 的变换为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mo stretchy="false">(</mo><mo>−</mo><mi>μ</mi><mo>−</mo><msub><mi>t</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\delta(-\mu-t_0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathdefault">μ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 。令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><msub><mi>t</mi><mn>0</mn></msub><mo>=</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">-t_0=a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord">−</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span> ，可得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>e</mi><mrow><mi>j</mi><mn>2</mn><mi>π</mi><mi>a</mi><mi>t</mi></mrow></msup></mrow><annotation encoding="application/x-tex">e^{j2\pi a t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span></span></span></span> 的变换是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mo stretchy="false">(</mo><mo>−</mo><mi>μ</mi><mo>+</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>μ</mi><mo>+</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\delta(-\mu+a)=\delta(\mu+a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathdefault">μ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span></span></span></span></p>
<p>冲激串 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">s_{\Delta T}(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span> 是周期为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow><annotation encoding="application/x-tex">\Delta T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span></span> 的周期函数：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></munderover><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><mi>k</mi><mi mathvariant="normal">Δ</mi><mi>T</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">s_{\Delta T}(t)=\sum_{k=-\infty}^{\infty}\delta(t-k\Delta T)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0118410000000004em;vertical-align:-1.360444em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.360444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mclose">)</span></span></span></span></span></p>
<p>因此可以表示为傅里叶级数：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></munderover><msub><mi>c</mi><mi>n</mi></msub><msup><mi>e</mi><mrow><mi>j</mi><mfrac><mrow><mn>2</mn><mi>π</mi><mi>n</mi></mrow><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></mfrac><mi>t</mi></mrow></msup><mo separator="true">,</mo><mspace linebreak="newline"></mspace><msub><mi>c</mi><mi>n</mi></msub><mo>=</mo><mfrac><mn>1</mn><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></mfrac><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">Δ</mi><mi>T</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msubsup><msub><mi>S</mi><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mfrac><mrow><mn>2</mn><mi>π</mi><mi>n</mi></mrow><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></mfrac><mi>t</mi></mrow></msup><mi>d</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">s_{\Delta T}(t)=\sum_{k=-\infty}^{\infty}c_ne^{j\frac{2\pi n} {\Delta T}t},\\
c_n=\frac{1} {\Delta T}\int_{-\Delta T/2}^{\Delta T/2}S_{\Delta T}(t)e^{-j\frac{2\pi n} {\Delta T}t}dt
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0118410000000004em;vertical-align:-1.360444em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.360444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0040200000000001em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.72485em;vertical-align:-1.0869499999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6379000000000004em;"><span style="top:-1.7880500000000004em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">Δ</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0869499999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0040200000000001em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span></span></span></span></span></p>
<p>由于区间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="false">[</mo><mo>−</mo><mi mathvariant="normal">Δ</mi><mi>T</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">Δ</mi><mi>T</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo fence="false">]</mo></mrow><annotation encoding="application/x-tex">\big[-\Delta T/2,\Delta T/2\big]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="mord"><span class="delimsizing size1">[</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord">/</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord">/</span><span class="mord">2</span><span class="mord"><span class="delimsizing size1">]</span></span></span></span></span> 上积分仅包含原点的冲激，故上式简化为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mi>n</mi></msub><mo>=</mo><mfrac><mn>1</mn><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></mfrac><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">Δ</mi><mi>T</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msubsup><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mfrac><mrow><mn>2</mn><mi>π</mi><mi>n</mi></mrow><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></mfrac><mi>t</mi></mrow></msup><mi>d</mi><mi>t</mi><mo>=</mo><mfrac><mn>1</mn><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></mfrac><msup><mi>e</mi><mn>0</mn></msup><mo>=</mo><mfrac><mn>1</mn><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">c_n=\frac{1} {\Delta T}\int_{-\Delta T/2}^{\Delta T/2}\delta(t)e^{-j\frac{2\pi n} {\Delta T}t}dt=\frac{1} {\Delta T}e^0=\frac{1} {\Delta T}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.72485em;vertical-align:-1.0869499999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6379000000000004em;"><span style="top:-1.7880500000000004em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">Δ</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0869499999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0040200000000001em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>于是傅里叶级数变成：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></munderover><msup><mi>e</mi><mrow><mi>j</mi><mfrac><mrow><mn>2</mn><mi>π</mi><mi>n</mi></mrow><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></mfrac><mi>t</mi></mrow></msup></mrow><annotation encoding="application/x-tex">s_{\Delta T}(t)=\frac{1} {\Delta T}\sum_{n=-\infty}^{\infty}e^{j\frac{2\pi n} {\Delta T}t}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.959733em;vertical-align:-1.308336em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0040200000000001em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>由 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ℑ</mi><mo stretchy="false">{</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><msub><mi>t</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>μ</mi><msub><mi>t</mi><mn>0</mn></msub></mrow></msup></mrow><annotation encoding="application/x-tex">\Im \{\delta(t-t_0)\}=e^{-j2\pi\mu t_0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℑ</span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">μ</span><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> ，得到：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ℑ</mi><mo stretchy="false">{</mo><msup><mi>e</mi><mrow><mi>j</mi><mfrac><mrow><mn>2</mn><mi>π</mi><mi>n</mi></mrow><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></mfrac><mi>t</mi></mrow></msup><mo stretchy="false">}</mo><mo>=</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>μ</mi><mo>−</mo><mfrac><mi>n</mi><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Im \{e^{j\frac{2\pi n} {\Delta T}t}\}=\delta(\mu-\frac{n} {\Delta T})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2540200000000001em;vertical-align:-0.25em;"></span><span class="mord">ℑ</span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0040200000000001em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>再由于和的傅里叶变换等于各分量的傅里叶变换之和，所以周期冲激串的傅里叶变换 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S(\mu)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span></span></span></span> 是：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>S</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">ℑ</mi><mo stretchy="false">{</mo><msub><mi>s</mi><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mo>=</mo><mi mathvariant="normal">ℑ</mi><mo stretchy="false">{</mo><mfrac><mn>1</mn><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></munderover><msup><mi>e</mi><mrow><mi>j</mi><mfrac><mrow><mn>2</mn><mi>π</mi><mi>n</mi></mrow><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></mfrac><mi>t</mi></mrow></msup><mo stretchy="false">}</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></mfrac><mi mathvariant="normal">ℑ</mi><mo stretchy="false">{</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></munderover><msup><mi>e</mi><mrow><mi>j</mi><mfrac><mrow><mn>2</mn><mi>π</mi><mi>n</mi></mrow><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></mfrac><mi>t</mi></mrow></msup><mo stretchy="false">}</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></munderover><mi>δ</mi><mo stretchy="false">(</mo><mi>μ</mi><mo>−</mo><mfrac><mi>n</mi><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\tilde{S}(\mu)=\Im\{s_{\Delta T}(t)\}=\Im\{\frac{1} {\Delta T}\sum_{n=-\infty}^{\infty}e^{j\frac{2\pi n} {\Delta T}t}\}=\frac{1} {\Delta T}\Im\{\sum_{n=-\infty}^{\infty}e^{j\frac{2\pi n} {\Delta T}t}\}=\frac{1} {\Delta T}\sum_{n=-\infty}^{\infty}\delta(\mu-\frac{n} {\Delta T})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1701899999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℑ</span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.959733em;vertical-align:-1.308336em;"></span><span class="mord">ℑ</span><span class="mopen">{</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0040200000000001em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.959733em;vertical-align:-1.308336em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">ℑ</span><span class="mopen">{</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0040200000000001em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.959733em;vertical-align:-1.308336em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>上述结果可得，周期为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow><annotation encoding="application/x-tex">\Delta T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span></span> 的冲激串的傅里叶变换仍然是冲激串，其周期变为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow><annotation encoding="application/x-tex">1/\Delta T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">/</span><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span></span>。</p>
<h3 id="傅里叶变换与卷积">傅里叶变换与卷积</h3>
<p><strong>卷积：空间域中两个函数的卷积的傅里叶变换，等于频率域中两个函数的傅里叶变换的乘积。</strong></p>
<p>设f(t)和h(t)为两个连续函数，F(t)和H(t)为f(t)和h(t)的傅里叶变换，则有：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>f</mi><mtext>★</mtext><mi>h</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>⇔</mo><mo stretchy="false">(</mo><mi>H</mi><mo>⋅</mo><mi>F</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo stretchy="false">(</mo><mi>f</mi><mo>⋅</mo><mi>h</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>⇔</mo><mo stretchy="false">(</mo><mi>H</mi><mtext>★</mtext><mi>F</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(f★h)(t)\Leftrightarrow(H\cdot F)(\mu)\\
(f\cdot h)(t)\Leftrightarrow(H★F)(\mu)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord">★</span><span class="mord mathdefault">h</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord">★</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span></span></span></span></span></p>
<h3 id="取样和取样函数的傅里叶变换">取样和取样函数的傅里叶变换</h3>
<p><strong>取样：对连续函数转换为一系列的离散值。</strong></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>f</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><msub><mi>s</mi><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></munderover><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><mi>n</mi><mi mathvariant="normal">Δ</mi><mi>T</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\tilde{f}(t)=f(t)s_{\Delta T}(t)=\sum_{n=-\infty}^{\infty}f(t)\delta(t-n\Delta T)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1812999999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9312999999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.61344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.959733em;vertical-align:-1.308336em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mclose">)</span></span></span></span></span></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>k</mi></msub><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><mi>k</mi><mi mathvariant="normal">Δ</mi><mi>T</mi><mo stretchy="false">)</mo><mi>d</mi><mi>t</mi><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>k</mi><mi mathvariant="normal">Δ</mi><mi>T</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_k=\int_{-\infty}^{\infty}f(t)\delta(t-k\Delta T)dt=f(k\Delta T)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.384573em;vertical-align:-0.970281em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mclose">)</span></span></span></span></span></p>
<p>对取样后的函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>f</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\tilde{f}(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1812999999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9312999999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.61344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span> 的傅里叶变换 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>F</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\tilde{F}(\mu)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1701899999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span></span></span></span> 是：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>F</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">ℑ</mi><mo stretchy="false">{</mo><mover accent="true"><mi>f</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mo>=</mo><mi mathvariant="normal">ℑ</mi><mo stretchy="false">{</mo><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><msub><mi>s</mi><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mo>=</mo><mo stretchy="false">(</mo><mi>F</mi><mtext>★</mtext><mi>S</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\tilde{F}(\mu)=\Im\{\tilde{f}(t)\}=\Im\{f(t)s_{\Delta T}(t)\}=(F★S)(\mu)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1701899999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1812999999999998em;vertical-align:-0.25em;"></span><span class="mord">ℑ</span><span class="mopen">{</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9312999999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.61344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℑ</span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord">★</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span></span></span></span></span></p>
<p>其中， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S(\mu)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span></span></span></span> 是冲激串的傅里叶变换：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></munderover><mi>δ</mi><mo stretchy="false">(</mo><mi>μ</mi><mo>−</mo><mfrac><mi>n</mi><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S(\mu)=\frac{1} {\Delta T}\sum_{n=-\infty}^{\infty}\delta(\mu-\frac{n} {\Delta T})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.959733em;vertical-align:-1.308336em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>直接得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(\mu)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S(\mu)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span></span></span></span> 的卷积：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>F</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>F</mi><mtext>★</mtext><mi>S</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>F</mi><mo stretchy="false">(</mo><mi>τ</mi><mo stretchy="false">)</mo><mi>S</mi><mo stretchy="false">(</mo><mi>μ</mi><mo>−</mo><mi>τ</mi><mo stretchy="false">)</mo><mi>d</mi><mi>τ</mi><mspace linebreak="newline"></mspace><mo>=</mo><mfrac><mn>1</mn><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></mfrac><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>F</mi><mo stretchy="false">(</mo><mi>τ</mi><mo stretchy="false">)</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></munderover><mi>δ</mi><mo fence="false">(</mo><mi>μ</mi><mo>−</mo><mi>τ</mi><mo>−</mo><mfrac><mi>n</mi><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></mfrac><mo fence="false">)</mo><mi>d</mi><mi>τ</mi><mspace linebreak="newline"></mspace><mo>=</mo><mfrac><mn>1</mn><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></munderover><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>F</mi><mo stretchy="false">(</mo><mi>τ</mi><mo stretchy="false">)</mo><mi>δ</mi><mo fence="false">(</mo><mi>μ</mi><mo>−</mo><mi>τ</mi><mo>−</mo><mfrac><mi>n</mi><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></mfrac><mo fence="false">)</mo><mi>d</mi><mi>τ</mi><mspace linebreak="newline"></mspace><mo>=</mo><mfrac><mn>1</mn><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></munderover><mi>F</mi><mo stretchy="false">(</mo><mi>μ</mi><mo>−</mo><mfrac><mi>n</mi><mrow><mi mathvariant="normal">Δ</mi><mi>T</mi></mrow></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\tilde{F}(\mu)=(F★S)(\mu)=\int_{-\infty}^{\infty}F(\tau)S(\mu-\tau)d\tau\\
=\frac{1} {\Delta T}\int_{-\infty}^{\infty}F(\tau)\sum_{n=-\infty}^{\infty}\delta\big(\mu-\tau-\frac{n} {\Delta T}\big)d\tau\\
=\frac{1} {\Delta T}\sum_{n=-\infty}^{\infty}\int_{-\infty}^{\infty}F(\tau)\delta\big(\mu-\tau-\frac{n} {\Delta T}\big)d\tau\\
=\frac{1} {\Delta T}\sum_{n=-\infty}^{\infty}F(\mu-\frac{n} {\Delta T})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1701899999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord">★</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.384573em;vertical-align:-0.970281em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.959733em;vertical-align:-1.308336em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mord"><span class="delimsizing size1">(</span></span><span class="mord mathdefault">μ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="delimsizing size1">)</span></span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.959733em;vertical-align:-1.308336em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mord"><span class="delimsizing size1">(</span></span><span class="mord mathdefault">μ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="delimsizing size1">)</span></span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.959733em;vertical-align:-1.308336em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p>
<h3 id="单变量离散傅里叶变换dft">单变量离散傅里叶变换DFT</h3>
<p><strong>一维离散傅里叶变换：</strong></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mi>m</mi></msub><mo>=</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>M</mi><mo>−</mo><mn>1</mn></mrow></munderover><msub><mi>f</mi><mi>n</mi></msub><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mi>m</mi><mi>n</mi><mi mathvariant="normal">/</mi><mi>M</mi></mrow></msup><mo separator="true">,</mo><mi>m</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo>…</mo><mo separator="true">,</mo><mi>M</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">F_m=\sum_{n=0}^{M-1}f_ne^{-j2\pi mn/M},m=0,1,2…,M-1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0954490000000003em;vertical-align:-1.267113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000004em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">n</span><span class="mord mtight">/</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p>
<p><strong>一维离散傅里叶逆变换：</strong></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>n</mi></msub><mo>=</mo><mfrac><mn>1</mn><mi>M</mi></mfrac><munderover><mo>∑</mo><mrow><mi>m</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>M</mi><mo>−</mo><mn>1</mn></mrow></munderover><msub><mi>F</mi><mi>m</mi></msub><msup><mi>e</mi><mrow><mi>j</mi><mn>2</mn><mi>π</mi><mi>m</mi><mi>n</mi><mi mathvariant="normal">/</mi><mi>M</mi></mrow></msup><mo separator="true">,</mo><mi>n</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo>…</mo><mo separator="true">,</mo><mi>M</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">f_n=\frac{1} {M}\sum_{m=0}^{M-1}F_me^{j2\pi mn/M},n=0,1,2…,M-1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0954490000000003em;vertical-align:-1.267113em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000004em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">n</span><span class="mord mtight">/</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p>
<h3 id="二变量离散傅里叶变换">二变量离散傅里叶变换</h3>
<p><strong>二维离散傅里叶变换：</strong></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>μ</mi><mo separator="true">,</mo><mi>ν</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>x</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>M</mi><mo>−</mo><mn>1</mn></mrow></munderover><munderover><mo>∑</mo><mrow><mi>y</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></munderover><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mn>2</mn><mi>π</mi><mo stretchy="false">(</mo><mi>μ</mi><mi>x</mi><mi mathvariant="normal">/</mi><mi>M</mi><mo>+</mo><mi>ν</mi><mi>y</mi><mi mathvariant="normal">/</mi><mi>N</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">F(\mu,\nu)=\sum_{x=0}^{M-1}\sum_{y=0}^{N-1}f(x,y)e^{-j2\pi(\mu x/M+\nu y/N)}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.06366em;">ν</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2315570000000005em;vertical-align:-1.403221em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000004em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8828869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.403221em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">μ</span><span class="mord mathdefault mtight">x</span><span class="mord mtight">/</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.06366em;">ν</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mord mtight">/</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><strong>二维离散傅里叶逆变换：</strong></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mi>M</mi><mi>N</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>x</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>M</mi><mo>−</mo><mn>1</mn></mrow></munderover><munderover><mo>∑</mo><mrow><mi>y</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></munderover><mi>F</mi><mo stretchy="false">(</mo><mi>μ</mi><mo separator="true">,</mo><mi>ν</mi><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mi>j</mi><mn>2</mn><mi>π</mi><mo stretchy="false">(</mo><mi>μ</mi><mi>x</mi><mi mathvariant="normal">/</mi><mi>M</mi><mo>+</mo><mi>ν</mi><mi>y</mi><mi mathvariant="normal">/</mi><mi>N</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">f(x,y)=\frac{1} {MN}\sum_{x=0}^{M-1}\sum_{y=0}^{N-1}F(\mu,\nu)e^{j2\pi(\mu x/M+\nu y/N)}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2315570000000005em;vertical-align:-1.403221em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000004em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8828869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.403221em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.06366em;">ν</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">μ</span><span class="mord mathdefault mtight">x</span><span class="mord mtight">/</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.06366em;">ν</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mord mtight">/</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<h3 id="代码">代码</h3>
<p>先了解以下函数：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">getOptimalDFTSize</span><span class="params">(<span class="type">int</span> vecsize)</span></span></span><br></pre></td></tr></table></figure></div>
<p>vecsize为向量尺寸大小，该函数用于返回给定向量尺寸经过DFT变换后结果的最优尺寸大小。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">copyMakeBorder</span><span class="params">(InputArray src, OutputArray dst, <span class="type">int</span> top, <span class="type">int</span> bottom, <span class="type">int</span> left, <span class="type">int</span> right, <span class="type">int</span> borderType, <span class="type">const</span> Scalar&amp; value = Scalar())</span></span></span><br></pre></td></tr></table></figure></div>
<p>该函数用于扩充图像边界，参数如下：</p>
<ul>
<li>
<p>src：输入图像；</p>
</li>
<li>
<p>dst：输出与输入图像相同类型图像；</p>
</li>
<li>
<p>top、bottom、left、right：在图像的四个方向上扩充像素值；</p>
</li>
<li>
<p>borderType：边界类型，常见取值为BORDER_CONSTANT；</p>
</li>
<li>
<p>value：边界类型为BORDER_CONSTANT时表示边界值。</p>
</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">dft</span><span class="params">(InputArray src, OutputArray dst, <span class="type">int</span> flags = <span class="number">0</span>, <span class="type">int</span> nonzeroRows = <span class="number">0</span>)</span></span></span><br></pre></td></tr></table></figure></div>
<p>该函数为OpenCV提供的傅里叶变换函数，参数如下：</p>
<ul>
<li>
<p>src：输入图像；</p>
</li>
<li>
<p>dst：输出图像；</p>
</li>
<li>
<p>flags：转换标识符，默认为0。也有以下取值，DFT_INVERSE（用一维或二维逆变换取代默认的正向变换）、DFT_SCALE（缩放比例标识符，根据数据元素个数平均求出缩放结果）、DFT_ROWS（对输入矩阵的每行进行正向或反向傅里叶变换）、DFT_COMPLEX_OUTPUT（对一维或二维实数数组进行正向变换，结果是复数阵列，是默认）、DFT_REAL_OUTPUT（对一维或二维复数数组进行逆向变换）；</p>
</li>
<li>
<p>nonzeroRows：当其不为0时函数会假设输入数组（没有设置DFT_INVERSE）的第一行或第一个输出数组（设置了DFT_INVERSE）包含非零值。</p>
</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">magnitude</span><span class="params">(InputArray x, InputArray y, OutputArray magnitude)</span></span></span><br></pre></td></tr></table></figure></div>
<p>该函数用于计算二维矢量的幅值，参数如下：</p>
<ul>
<li>
<p>x：浮点型数组的x坐标矢量，即实部；</p>
</li>
<li>
<p>y：浮点型数组的y坐标矢量，必须和x尺寸相同；</p>
</li>
<li>
<p>magnitude：与x类型和尺寸相同的输出数组；</p>
</li>
</ul>
<p>其计算公式为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">)</mo><mo>=</mo><msqrt><mrow><mi>x</mi><mo stretchy="false">(</mo><mi>I</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mi>y</mi><mo stretchy="false">(</mo><mi>I</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding="application/x-tex">dst(I)=\sqrt{x(I)^2+y(I)^2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.25612499999999994em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.983875em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-2.9438750000000002em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width="400em" height="1.28em" viewbox="0 0 400000 1296" preserveaspectratio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119
c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120
c340,-704.7,510.7,-1060.3,512,-1067
l0 -0
c4.7,-7.3,11,-11,19,-11
H40000v40H1012.3
s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232
c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1
s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26
c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z
M1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25612499999999994em;"><span></span></span></span></span></span></span></span></span></span></p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">DFT</span><span class="params">(cv::Mat input, cv::Mat&amp; output, cv::Mat&amp; trf_img)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 拓展图像矩阵，为2，3，5的倍数时运算速度快</span></span><br><span class="line">    <span class="type">int</span> m = cv::<span class="built_in">getOptimalDFTSize</span>(input.rows);</span><br><span class="line">    <span class="type">int</span> n = cv::<span class="built_in">getOptimalDFTSize</span>(input.cols);</span><br><span class="line">    cv::<span class="built_in">copyMakeBorder</span>(input, input, <span class="number">0</span>, m - input.rows, <span class="number">0</span>, n - input.cols, cv::BORDER_CONSTANT, cv::Scalar::<span class="built_in">all</span>(<span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建planes存储复数的实部和虚部</span></span><br><span class="line">    cv::Mat planes[] = &#123; cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(input), cv::Mat::<span class="built_in">zeros</span>(input.<span class="built_in">size</span>(),CV_32F) &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 从多个单通道数组中创建一个多通道数组trf_img。</span></span><br><span class="line">    <span class="comment">// 函数Merge将几个数组合并为一个多通道阵列，即输出数组的每个元素将是输入数组元素的级联</span></span><br><span class="line">    cv::<span class="built_in">merge</span>(planes, <span class="number">2</span>, trf_img);  </span><br><span class="line"></span><br><span class="line">    <span class="comment">// 进行傅里叶变换</span></span><br><span class="line">    cv::<span class="built_in">dft</span>(trf_img, trf_img);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将trf_img拆分到planes数组</span></span><br><span class="line">    cv::<span class="built_in">split</span>(trf_img, planes);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 计算复数的幅值，即频谱图，保存在output</span></span><br><span class="line">    cv::<span class="built_in">magnitude</span>(planes[<span class="number">0</span>], planes[<span class="number">1</span>], output);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 赋值计算过大，进行处理</span></span><br><span class="line">    output += cv::<span class="built_in">Scalar</span>(<span class="number">1</span>);    <span class="comment">//像素加一防止log(0)</span></span><br><span class="line">    <span class="built_in">log</span>(output, output);    <span class="comment">// 进行对数运算</span></span><br><span class="line">    cv::<span class="built_in">normalize</span>(output, output, <span class="number">0</span>, <span class="number">1</span>, cv::NORM_MINMAX);   <span class="comment">// 归一化</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 剪切和重分布幅度图像限</span></span><br><span class="line">    output = <span class="built_in">output</span>(cv::<span class="built_in">Rect</span>(<span class="number">0</span>, <span class="number">0</span>, output.cols &amp; <span class="number">-2</span>, output.rows &amp; <span class="number">-2</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重新排列傅里叶图像中的象限，使原点位于图像中心</span></span><br><span class="line">    <span class="type">int</span> cx = output.cols / <span class="number">2</span>;</span><br><span class="line">    <span class="type">int</span> cy = output.rows / <span class="number">2</span>;</span><br><span class="line">    <span class="function">cv::Mat <span class="title">q0</span><span class="params">(output, cv::Rect(<span class="number">0</span>, <span class="number">0</span>, cx, cy))</span></span>;</span><br><span class="line">    <span class="function">cv::Mat <span class="title">q1</span><span class="params">(output, cv::Rect(cx, <span class="number">0</span>, cx, cy))</span></span>;</span><br><span class="line">    <span class="function">cv::Mat <span class="title">q2</span><span class="params">(output, cv::Rect(<span class="number">0</span>, cy, cx, cy))</span></span>;</span><br><span class="line">    <span class="function">cv::Mat <span class="title">q3</span><span class="params">(output, cv::Rect(cx, cy, cx, cy))</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 交换象限中心化</span></span><br><span class="line">    cv::Mat tmp;</span><br><span class="line">    q0.<span class="built_in">copyTo</span>(tmp); q3.<span class="built_in">copyTo</span>(q0); tmp.<span class="built_in">copyTo</span>(q3);</span><br><span class="line">    q1.<span class="built_in">copyTo</span>(tmp); q2.<span class="built_in">copyTo</span>(q1); tmp.<span class="built_in">copyTo</span>(q2);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cv::Mat image = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>, <span class="number">0</span>);</span><br><span class="line">    cv::Mat image_output, image_trf;</span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;灰度图&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;灰度图&quot;</span>, image);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">DFT</span>(image, image_output, image_trf);</span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;频谱图&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;频谱图&quot;</span>, image_output);</span><br><span class="line"></span><br><span class="line">    cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b5_run.jpg" alt></p>
<h2 id="频谱图">频谱图</h2>
<p>频谱图有以下规律：</p>
<ol>
<li>
<p>频谱图从中心点到四周，频率越来越大；</p>
</li>
<li>
<p>频谱图中心点一般最亮，与原图像平均亮度相关；</p>
</li>
<li>
<p>频率域滤波就是改变频谱图中高频率或者低频率的值.</p>
</li>
<li>
<p>频谱图中的点关于中心点对称，对称的两点表示某个频率的波。</p>
</li>
<li>
<p>两个对称点离中心点的距离代表频率的高低，离中心点越远代表的频率越高。</p>
</li>
<li>
<p>两个对称点的亮度表示波的幅值，越亮幅值越大。</p>
</li>
<li>
<p>图像中，低频率代表灰度变化缓慢的信息；高频率代表变化剧烈的信息，如边缘及噪声等。在6中，低频区越亮代表变化缓慢的区域较多，高频区越亮代表图像细节很多。</p>
</li>
<li>
<p>对称点所在直线的方向为波的方向，与原图中对应的线性信息垂直。如下图，图中有一组平行的线，在频谱图垂直方向也有一条较亮的线（可用于方向滤波，增强或者滤除某个方向的线性特征）。</p>
</li>
</ol>
<h2 id="低通滤波">低通滤波</h2>
<h3 id="理想低通滤波">理想低通滤波</h3>
<p><strong>通过设置频率半径，半径内的频率大小不变，半径外的频率置为0，保留了低频区，滤除了高频区。</strong></p>
<p>传递函数为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo separator="true">,</mo><mspace width="1em"><mi>D</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>≤</mo><msub><mi>D</mi><mn>0</mn></msub></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo><mspace width="1em"><mi>D</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>&gt;</mo><msub><mi>D</mi><mn>0</mn></msub></mspace></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">H(u,v)=
\begin{cases}
1,\quad D(u,v)\leq D_0\\
0, \quad D(u,v)&gt;D_0
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>其中， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">D_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是一个正常数， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D(u,v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span> 是频率域中点(u,v)到P×Q频率矩形中心的距离， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">[</mo><mo stretchy="false">(</mo><mi>u</mi><mo>−</mo><mi>P</mi><mi mathvariant="normal">/</mi><mn>2</mn><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mi>v</mi><mo>−</mo><mi>Q</mi><mi mathvariant="normal">/</mi><mn>2</mn><msup><mo stretchy="false">)</mo><mn>2</mn></msup><msup><mo stretchy="false">]</mo><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup></mrow><annotation encoding="application/x-tex">D(u,v)=[(u-P/2)^2+(v-Q/2)^2]^{1/2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord">/</span><span class="mord">2</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord mathdefault">Q</span><span class="mord">/</span><span class="mord">2</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span> 。</p>
<p>理想低通滤波器由于进行傅里叶变换和傅里叶逆变换时的差异，会导致振铃效应，一般很少使用。</p>
<p><em>振铃效应：指输出图像的灰度剧烈变化处产生的震荡，就好像钟被敲击后产生的空气震荡</em></p>
<p>代码：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// main.cpp</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;DFT.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Salt.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat image, output, trf;</span><br><span class="line">	image = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>, <span class="number">0</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">Salt</span>(image, <span class="number">100000</span>);	<span class="comment">// 添加100k个噪点</span></span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, image);	<span class="comment">// 显示原图</span></span><br><span class="line">	</span><br><span class="line">	<span class="built_in">DFT</span>(image, output, trf);	<span class="comment">// 对图像进行傅里叶变换</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 理想低通滤波</span></span><br><span class="line">	cv::Mat planes[] = &#123; cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(output), cv::Mat::<span class="built_in">zeros</span>(output.<span class="built_in">size</span>(), CV_32F) &#125;;</span><br><span class="line">	cv::<span class="built_in">split</span>(trf, planes);	<span class="comment">//分离通道，获取实部虚部</span></span><br><span class="line"></span><br><span class="line">	cv::Mat trf_real = planes[<span class="number">0</span>];</span><br><span class="line">	cv::Mat trf_imag = planes[<span class="number">1</span>];</span><br><span class="line">	</span><br><span class="line">	<span class="type">int</span> cx = trf_real.rows / <span class="number">2</span>;	<span class="comment">// 求中心坐标x</span></span><br><span class="line">	<span class="type">int</span> cy = trf_real.cols / <span class="number">2</span>;	<span class="comment">// 求中心坐标y</span></span><br><span class="line">	<span class="type">int</span> r = <span class="number">120</span>;	<span class="comment">// 滤波半径</span></span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; trf_real.rows; i ++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; trf_real.cols; j ++)</span><br><span class="line">			<span class="keyword">if</span> ((i - cx) * (i - cx) + (j - cy) * (j - cy) &gt; r * r)</span><br><span class="line">			&#123;</span><br><span class="line">				trf_real.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(i, j) = <span class="number">0</span>;</span><br><span class="line">				trf_imag.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(i, j) = <span class="number">0</span>;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">	planes[<span class="number">0</span>] = trf_real;</span><br><span class="line">	planes[<span class="number">1</span>] = trf_imag;</span><br><span class="line">	cv::Mat trf_ilpf;</span><br><span class="line">	cv::<span class="built_in">merge</span>(planes, <span class="number">2</span>, trf_ilpf);</span><br><span class="line"></span><br><span class="line">	cv::Mat iDft[] = &#123; cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(output), cv::Mat::<span class="built_in">zeros</span>(output.<span class="built_in">size</span>(), CV_32F) &#125;;</span><br><span class="line">	cv::<span class="built_in">idft</span>(trf_ilpf, trf_ilpf);	<span class="comment">// 傅里叶逆变换</span></span><br><span class="line">	cv::<span class="built_in">split</span>(trf_ilpf, iDft);		<span class="comment">// 分离通道</span></span><br><span class="line">	cv::<span class="built_in">magnitude</span>(iDft[<span class="number">0</span>], iDft[<span class="number">1</span>], iDft[<span class="number">0</span>]);	<span class="comment">//计算复数的幅值，保存在iDft[0]</span></span><br><span class="line">	cv::<span class="built_in">normalize</span>(iDft[<span class="number">0</span>], iDft[<span class="number">0</span>], <span class="number">0</span>, <span class="number">1</span>, cv::NORM_MINMAX);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;after&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;after&quot;</span>, iDft[<span class="number">0</span>]);</span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>为了更好的效果，手动添加噪声：</p>
<div class="highlight-container" data-rel="H"><figure class="iseeu highlight h"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Salt.h</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;random&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Salt</span><span class="params">(cv::Mat input, <span class="type">int</span> n)</span>;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 噪声文件Salt.cpp</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Salt.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Salt</span><span class="params">(cv::Mat input, <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	std::default_random_engine generator;</span><br><span class="line">	std::uniform_int_distribution&lt;<span class="type">int</span>&gt;<span class="built_in">row</span>(<span class="number">0</span>, input.rows - <span class="number">1</span>);</span><br><span class="line">	std::uniform_int_distribution&lt;<span class="type">int</span>&gt;<span class="built_in">col</span>(<span class="number">0</span>, input.cols - <span class="number">1</span>);</span><br><span class="line">	<span class="type">int</span> i, j;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; n; k ++)</span><br><span class="line">	&#123;</span><br><span class="line">		i = <span class="built_in">row</span>(generator);</span><br><span class="line">		j = <span class="built_in">col</span>(generator);</span><br><span class="line">		<span class="keyword">if</span> (input.<span class="built_in">channels</span>() == <span class="number">1</span>)</span><br><span class="line">			input.<span class="built_in">at</span>&lt;uchar&gt;(i, j) = <span class="number">255</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (input.<span class="built_in">channels</span>() == <span class="number">3</span>)</span><br><span class="line">			input.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i, j) = cv::<span class="built_in">Vec3b</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>对图像傅里叶变换：</p>
<div class="highlight-container" data-rel="H"><figure class="iseeu highlight h"><table><tr><td class="code"><pre><span class="line"><span class="comment">// DFT.h</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DFT</span><span class="params">(cv::Mat input, cv::Mat&amp; output, cv::Mat&amp; trf_arr)</span>;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// DFT.cpp</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;DFT.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">DFT</span><span class="params">(cv::Mat input, cv::Mat&amp; output, cv::Mat&amp; trf_arr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">// 扩展图像，优化速度</span></span><br><span class="line">	<span class="type">int</span> n = cv::<span class="built_in">getOptimalDFTSize</span>(input.rows);</span><br><span class="line">	<span class="type">int</span> m = cv::<span class="built_in">getOptimalDFTSize</span>(input.cols);</span><br><span class="line">	cv::<span class="built_in">copyMakeBorder</span>(input, input, <span class="number">0</span>, n - input.rows, <span class="number">0</span>, m - input.cols, cv::BORDER_CONSTANT, cv::Scalar::<span class="built_in">all</span>(<span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 用于存储傅里叶变换的实部和虚部</span></span><br><span class="line">	cv::Mat planes[] = &#123; cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(input), cv::Mat::<span class="built_in">zeros</span>(input.<span class="built_in">size</span>(), CV_32F) &#125;;</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">merge</span>(planes, <span class="number">2</span>, trf_arr);</span><br><span class="line">	</span><br><span class="line">	cv::<span class="built_in">dft</span>(trf_arr, trf_arr);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">split</span>(trf_arr, planes);</span><br><span class="line">	cv::Mat trf_img_real = planes[<span class="number">0</span>];</span><br><span class="line">	cv::Mat trf_img_imag = planes[<span class="number">1</span>];</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// 计算复数的幅值，保存在output中</span></span><br><span class="line">	cv::<span class="built_in">magnitude</span>(planes[<span class="number">0</span>], planes[<span class="number">1</span>], output);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 优化幅值大小</span></span><br><span class="line">	output += cv::<span class="built_in">Scalar</span>(<span class="number">1</span>);</span><br><span class="line">	<span class="built_in">log</span>(output, output);</span><br><span class="line">	cv::<span class="built_in">normalize</span>(output, output, <span class="number">0</span>, <span class="number">1</span>, cv::NORM_MINMAX);</span><br><span class="line"></span><br><span class="line">	output = <span class="built_in">output</span>(cv::<span class="built_in">Rect</span>(<span class="number">0</span>, <span class="number">0</span>, output.cols &amp; <span class="number">-2</span>, output.rows &amp; <span class="number">-2</span>));</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> cx = output.cols / <span class="number">2</span>, cy = output.rows / <span class="number">2</span>;</span><br><span class="line">	<span class="function">cv::Mat <span class="title">q0</span><span class="params">(output, cv::Rect(<span class="number">0</span>, <span class="number">0</span>, cx, cy))</span>, <span class="title">q1</span><span class="params">(output, cv::Rect(cx, <span class="number">0</span>, cx, cy))</span></span>;</span><br><span class="line">	<span class="function">cv::Mat <span class="title">q2</span><span class="params">(output, cv::Rect(<span class="number">0</span>, cy, cx, cy))</span>, <span class="title">q3</span><span class="params">(output, cv::Rect(cx, cy, cx, cy))</span></span>;</span><br><span class="line">	cv::Mat tmp;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 交换区域使得原点位于中心</span></span><br><span class="line">	q0.<span class="built_in">copyTo</span>(tmp); q3.<span class="built_in">copyTo</span>(q0); tmp.<span class="built_in">copyTo</span>(q3);</span><br><span class="line">	q1.<span class="built_in">copyTo</span>(tmp); q2.<span class="built_in">copyTo</span>(q1); tmp.<span class="built_in">copyTo</span>(q2);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 复数的实数部分交换</span></span><br><span class="line">	<span class="function">cv::Mat <span class="title">q00</span><span class="params">(trf_img_real, cv::Rect(<span class="number">0</span>, <span class="number">0</span>, cx, cy))</span></span>;		<span class="comment">// 左上区域</span></span><br><span class="line">	<span class="function">cv::Mat <span class="title">q01</span><span class="params">(trf_img_real, cv::Rect(cx, <span class="number">0</span>, cx, cy))</span></span>;		<span class="comment">// 右上区域</span></span><br><span class="line">	<span class="function">cv::Mat <span class="title">q02</span><span class="params">(trf_img_real, cv::Rect(<span class="number">0</span>, cy, cx, cy))</span></span>;		<span class="comment">// 左下区域</span></span><br><span class="line">	<span class="function">cv::Mat <span class="title">q03</span><span class="params">(trf_img_real, cv::Rect(cx, cy, cx, cy))</span></span>;	<span class="comment">// 右下区域</span></span><br><span class="line">	q00.<span class="built_in">copyTo</span>(tmp); q03.<span class="built_in">copyTo</span>(q00); tmp.<span class="built_in">copyTo</span>(q03);		<span class="comment">//左上与右下进行交换</span></span><br><span class="line">	q01.<span class="built_in">copyTo</span>(tmp); q02.<span class="built_in">copyTo</span>(q01); tmp.<span class="built_in">copyTo</span>(q02);		<span class="comment">//右上与左下进行交换</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 复数的虚数部分交换</span></span><br><span class="line">	<span class="function">cv::Mat <span class="title">q10</span><span class="params">(trf_img_imag, cv::Rect(<span class="number">0</span>, <span class="number">0</span>, cx, cy))</span></span>;		<span class="comment">// 左上区域</span></span><br><span class="line">	<span class="function">cv::Mat <span class="title">q11</span><span class="params">(trf_img_imag, cv::Rect(cx, <span class="number">0</span>, cx, cy))</span></span>;		<span class="comment">// 右上区域</span></span><br><span class="line">	<span class="function">cv::Mat <span class="title">q12</span><span class="params">(trf_img_imag, cv::Rect(<span class="number">0</span>, cy, cx, cy))</span></span>;		<span class="comment">// 左下区域</span></span><br><span class="line">	<span class="function">cv::Mat <span class="title">q13</span><span class="params">(trf_img_imag, cv::Rect(cx, cy, cx, cy))</span></span>;	<span class="comment">// 右下区域</span></span><br><span class="line">	q10.<span class="built_in">copyTo</span>(tmp); q13.<span class="built_in">copyTo</span>(q10); tmp.<span class="built_in">copyTo</span>(q13);		<span class="comment">//左上与右下进行交换</span></span><br><span class="line">	q11.<span class="built_in">copyTo</span>(tmp); q12.<span class="built_in">copyTo</span>(q11); tmp.<span class="built_in">copyTo</span>(q12);		<span class="comment">//右上与左下进行交换</span></span><br><span class="line"></span><br><span class="line">	planes[<span class="number">0</span>] = trf_img_real;</span><br><span class="line">	planes[<span class="number">1</span>] = trf_img_imag;</span><br><span class="line">	cv::<span class="built_in">merge</span>(planes, <span class="number">2</span>, trf_arr);	<span class="comment">// 将傅里叶变换的复数结果保存在trf_arr</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b6_run.jpg" alt="r=120"><figcaption>r=120</figcaption></figure></p>
<h3 id="高斯低通滤波">高斯低通滤波</h3>
<p>高斯低通滤波器的传递函数为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><msup><mi>D</mi><mn>2</mn></msup><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></msup></mrow><annotation encoding="application/x-tex">H(u,v)=e^{-D^2(u,v)/2\sigma^2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0369199999999998em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0369199999999998em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">u</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span><span class="mord mtight">/</span><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>其中， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D(u,v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span> 是P×Q频率矩形中心到矩形中包含的任意一点(u,v)的距离，令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi><mo>=</mo><msub><mi>D</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">\sigma=D_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><msup><mi>D</mi><mn>2</mn></msup><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn><msubsup><mi>D</mi><mn>0</mn><mn>2</mn></msubsup></mrow></msup></mrow><annotation encoding="application/x-tex">H(u,v)=e^{-D^2(u,v)/2D_0^2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0369199999999998em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0369199999999998em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">u</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span><span class="mord mtight">/</span><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.214em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>那么 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">D_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是截止频率（设置半径）。当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>D</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">D(u,v)=D_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 时，高斯低通滤波器传递函数下降到其最大值1.0的0.607。</p>
<p>由于高斯函数的傅里叶变换还是高斯函数，所以高斯低通滤波器没有振铃效应。</p>
<p>代码：</p>
<p><code>DFT.h</code>、<code>DFT.cpp</code>、<code>Salt.h</code>、<code>Salt.cpp</code>同上。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// main.cpp</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;DFT.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Salt.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat image, output, trf;</span><br><span class="line">	image = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>, <span class="number">0</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">Salt</span>(image, <span class="number">100000</span>);	<span class="comment">// 添加100k个噪点</span></span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, image);	<span class="comment">// 显示原图</span></span><br><span class="line">	</span><br><span class="line">	<span class="built_in">DFT</span>(image, output, trf);	<span class="comment">// 对图像进行傅里叶变换</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 高斯低通滤波</span></span><br><span class="line">	cv::Mat planes[] = &#123; cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(output), cv::Mat::<span class="built_in">zeros</span>(output.<span class="built_in">size</span>(), CV_32F) &#125;;</span><br><span class="line">	cv::<span class="built_in">split</span>(trf, planes);	<span class="comment">//分离通道，获取实部虚部</span></span><br><span class="line"></span><br><span class="line">	cv::Mat trf_real = planes[<span class="number">0</span>];</span><br><span class="line">	cv::Mat trf_imag = planes[<span class="number">1</span>];</span><br><span class="line">	</span><br><span class="line">	<span class="type">int</span> cx = trf_real.rows / <span class="number">2</span>;	<span class="comment">// 求中心坐标x</span></span><br><span class="line">	<span class="type">int</span> cy = trf_real.cols / <span class="number">2</span>;	<span class="comment">// 求中心坐标y</span></span><br><span class="line">	<span class="type">int</span> r = <span class="number">80</span>;	<span class="comment">// 滤波半径</span></span><br><span class="line">	<span class="type">float</span> h;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; trf_real.rows; i ++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; trf_real.cols; j ++)</span><br><span class="line">		&#123;</span><br><span class="line">			h = <span class="built_in">exp</span>(-((i - cx) * (i - cx) + (j - cy) * (j - cy)) / (<span class="number">2.0</span> * r * r));</span><br><span class="line">			trf_real.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(i, j) *= h;</span><br><span class="line">			trf_imag.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(i, j) *= h;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	planes[<span class="number">0</span>] = trf_real;</span><br><span class="line">	planes[<span class="number">1</span>] = trf_imag;</span><br><span class="line">	cv::Mat trf_ilpf;</span><br><span class="line">	cv::<span class="built_in">merge</span>(planes, <span class="number">2</span>, trf_ilpf);</span><br><span class="line"></span><br><span class="line">	cv::Mat iDft[] = &#123; cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(output), cv::Mat::<span class="built_in">zeros</span>(output.<span class="built_in">size</span>(), CV_32F) &#125;;</span><br><span class="line">	cv::<span class="built_in">idft</span>(trf_ilpf, trf_ilpf);	<span class="comment">// 傅里叶逆变换</span></span><br><span class="line">	cv::<span class="built_in">split</span>(trf_ilpf, iDft);		<span class="comment">// 分离通道</span></span><br><span class="line">	cv::<span class="built_in">magnitude</span>(iDft[<span class="number">0</span>], iDft[<span class="number">1</span>], iDft[<span class="number">0</span>]);	<span class="comment">//计算复数的幅值，保存在iDft[0]</span></span><br><span class="line">	cv::<span class="built_in">normalize</span>(iDft[<span class="number">0</span>], iDft[<span class="number">0</span>], <span class="number">0</span>, <span class="number">1</span>, cv::NORM_MINMAX);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;after&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;after&quot;</span>, iDft[<span class="number">0</span>]);</span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b6_run2.jpg" alt="r=80"><figcaption>r=80</figcaption></figure></p>
<h3 id="巴特沃斯低通滤波">巴特沃斯低通滤波</h3>
<p>巴特沃斯低通滤波器的传递函数为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><mo stretchy="false">[</mo><mi>D</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><msub><mi>D</mi><mn>0</mn></msub><msup><mo stretchy="false">]</mo><mrow><mn>2</mn><mi>n</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">H(u,v)=\frac {1} {1+[D(u,v)/D_0]^{2n} }
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.25744em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>其中， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D(u,v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span> 是P×Q频率矩形中心到矩形中包含的任意一点(u,v)的距离， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">D_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是截止频率（设置半径）， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 是巴特沃斯滤波器的阶数。</p>
<p>1阶巴特沃斯滤波器既没有振铃效应也没有负值；2阶巴特沃斯滤波器有轻微振铃效应和较小的负值，但比理想低通滤波器好；高阶巴特沃斯滤波器具有非常明显的振铃效应。2阶和3阶的巴特沃斯滤波器较为合适。</p>
<p>代码：</p>
<p><code>DFT.h</code>、<code>DFT.cpp</code>、<code>Salt.h</code>、<code>Salt.cpp</code>同上。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// main.cpp</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;DFT.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Salt.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat image, output, trf;</span><br><span class="line">	image = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">Salt</span>(image, <span class="number">100000</span>);	<span class="comment">// 添加100k个噪点</span></span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, image);	<span class="comment">// 显示原图</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">DFT</span>(image, output, trf);	<span class="comment">// 对图像进行傅里叶变换</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 巴特沃斯低通滤波</span></span><br><span class="line">	cv::Mat planes[] = &#123; cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(output), cv::Mat::<span class="built_in">zeros</span>(output.<span class="built_in">size</span>(), CV_32F) &#125;;</span><br><span class="line">	cv::<span class="built_in">split</span>(trf, planes);	<span class="comment">//分离通道，获取实部虚部</span></span><br><span class="line"></span><br><span class="line">	cv::Mat trf_real = planes[<span class="number">0</span>];</span><br><span class="line">	cv::Mat trf_imag = planes[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> cx = trf_real.rows / <span class="number">2</span>;	<span class="comment">// 求中心坐标x</span></span><br><span class="line">	<span class="type">int</span> cy = trf_real.cols / <span class="number">2</span>;	<span class="comment">// 求中心坐标y</span></span><br><span class="line">	<span class="type">int</span> r = <span class="number">120</span>;	<span class="comment">// 滤波半径</span></span><br><span class="line">	<span class="type">float</span> h;</span><br><span class="line">	<span class="type">float</span> n = <span class="number">3</span>;	<span class="comment">// 巴特沃斯滤波器阶数</span></span><br><span class="line">	<span class="type">float</span> d;		<span class="comment">// 任意点到中心的距离</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; trf_real.rows; i ++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; trf_real.cols; j ++)</span><br><span class="line">		&#123;</span><br><span class="line">			d = (i - cx) * (i - cx) + (j - cy) * (j - cy);</span><br><span class="line">			h = <span class="number">1.0</span> / (<span class="number">1</span> + <span class="built_in">pow</span>((d / (r * r)), <span class="number">2</span> * n));</span><br><span class="line">			trf_real.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(i, j) *= h;</span><br><span class="line">			trf_imag.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(i, j) *= h;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	planes[<span class="number">0</span>] = trf_real;</span><br><span class="line">	planes[<span class="number">1</span>] = trf_imag;</span><br><span class="line">	cv::Mat trf_ilpf;</span><br><span class="line">	cv::<span class="built_in">merge</span>(planes, <span class="number">2</span>, trf_ilpf);</span><br><span class="line"></span><br><span class="line">	cv::Mat iDft[] = &#123; cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(output), cv::Mat::<span class="built_in">zeros</span>(output.<span class="built_in">size</span>(), CV_32F) &#125;;</span><br><span class="line">	cv::<span class="built_in">idft</span>(trf_ilpf, trf_ilpf);	<span class="comment">// 傅里叶逆变换</span></span><br><span class="line">	cv::<span class="built_in">split</span>(trf_ilpf, iDft);		<span class="comment">// 分离通道</span></span><br><span class="line">	cv::<span class="built_in">magnitude</span>(iDft[<span class="number">0</span>], iDft[<span class="number">1</span>], iDft[<span class="number">0</span>]);	<span class="comment">//计算复数的幅值，保存在iDft[0]</span></span><br><span class="line">	cv::<span class="built_in">normalize</span>(iDft[<span class="number">0</span>], iDft[<span class="number">0</span>], <span class="number">0</span>, <span class="number">1</span>, cv::NORM_MINMAX);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;after&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;after&quot;</span>, iDft[<span class="number">0</span>]);</span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b6_run3.jpg" alt="r=120,n=3"><figcaption>r=120,n=3</figcaption></figure></p>
<h2 id="高通滤波">高通滤波</h2>
<h3 id="理想高通滤波">理想高通滤波</h3>
<p><strong>通过设置频率半径，半径外的频率大小不变，半径内的频率置为0，保留了高频区，滤除了低频区。</strong></p>
<p>而边缘和其他灰度的急剧变化与高频分量有关，故高通滤波器可以实现边缘锐化。</p>
<p>传递函数为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo><mspace width="1em"><mi>D</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>≤</mo><msub><mi>D</mi><mn>0</mn></msub></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo separator="true">,</mo><mspace width="1em"><mi>D</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>&gt;</mo><msub><mi>D</mi><mn>0</mn></msub></mspace></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">H(u,v)=
\begin{cases}
0,\quad D(u,v)\leq D_0\\
1, \quad D(u,v)&gt;D_0
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>其中， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">D_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是一个正常数， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D(u,v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span> 是频率域中点(u,v)到P×Q频率矩形中心的距离， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">[</mo><mo stretchy="false">(</mo><mi>u</mi><mo>−</mo><mi>P</mi><mi mathvariant="normal">/</mi><mn>2</mn><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mi>v</mi><mo>−</mo><mi>Q</mi><mi mathvariant="normal">/</mi><mn>2</mn><msup><mo stretchy="false">)</mo><mn>2</mn></msup><msup><mo stretchy="false">]</mo><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup></mrow><annotation encoding="application/x-tex">D(u,v)=[(u-P/2)^2+(v-Q/2)^2]^{1/2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord">/</span><span class="mord">2</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord mathdefault">Q</span><span class="mord">/</span><span class="mord">2</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span> 。</p>
<p>代码（DFT代码文件见最后）：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// main.cpp</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;DFT.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat image, output, trf;</span><br><span class="line">	image = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, image);	<span class="comment">// 显示原图</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">DFT</span>(image, output, trf);	<span class="comment">// 对图像进行傅里叶变换</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 理想高通滤波</span></span><br><span class="line">	cv::Mat planes[] = &#123; cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(output), cv::Mat::<span class="built_in">zeros</span>(output.<span class="built_in">size</span>(), CV_32F) &#125;;</span><br><span class="line">	cv::<span class="built_in">split</span>(trf, planes);	<span class="comment">//分离通道，获取实部虚部</span></span><br><span class="line"></span><br><span class="line">	cv::Mat trf_real = planes[<span class="number">0</span>];</span><br><span class="line">	cv::Mat trf_imag = planes[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> cx = trf_real.rows / <span class="number">2</span>;	<span class="comment">// 求中心坐标x</span></span><br><span class="line">	<span class="type">int</span> cy = trf_real.cols / <span class="number">2</span>;	<span class="comment">// 求中心坐标y</span></span><br><span class="line">	<span class="type">int</span> r = <span class="number">120</span>;	<span class="comment">// 滤波半径</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; trf_real.rows; i ++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; trf_real.cols; j ++)</span><br><span class="line">			<span class="keyword">if</span> ((i - cx) * (i - cx) + (j - cy) * (j - cy) &lt; r * r)</span><br><span class="line">			&#123;</span><br><span class="line">				trf_real.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(i, j) = <span class="number">0</span>;</span><br><span class="line">				trf_imag.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(i, j) = <span class="number">0</span>;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">	planes[<span class="number">0</span>] = trf_real;</span><br><span class="line">	planes[<span class="number">1</span>] = trf_imag;</span><br><span class="line">	cv::Mat trf_ilpf;</span><br><span class="line">	cv::<span class="built_in">merge</span>(planes, <span class="number">2</span>, trf_ilpf);</span><br><span class="line"></span><br><span class="line">	cv::Mat iDft[] = &#123; cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(output), cv::Mat::<span class="built_in">zeros</span>(output.<span class="built_in">size</span>(), CV_32F) &#125;;</span><br><span class="line">	cv::<span class="built_in">idft</span>(trf_ilpf, trf_ilpf);	<span class="comment">// 傅里叶逆变换</span></span><br><span class="line">	cv::<span class="built_in">split</span>(trf_ilpf, iDft);		<span class="comment">// 分离通道</span></span><br><span class="line">	cv::<span class="built_in">magnitude</span>(iDft[<span class="number">0</span>], iDft[<span class="number">1</span>], iDft[<span class="number">0</span>]);	<span class="comment">//计算复数的幅值，保存在iDft[0]</span></span><br><span class="line">	cv::<span class="built_in">normalize</span>(iDft[<span class="number">0</span>], iDft[<span class="number">0</span>], <span class="number">0</span>, <span class="number">1</span>, cv::NORM_MINMAX);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;after&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;after&quot;</span>, iDft[<span class="number">0</span>]);</span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b7_run.jpg" alt="r=120"><figcaption>r=120</figcaption></figure></p>
<h3 id="高斯高通滤波">高斯高通滤波</h3>
<p>高斯低通滤波器的传递函数为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mrow><mi>L</mi><mi>P</mi></mrow></msub><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><msup><mi>D</mi><mn>2</mn></msup><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></msup></mrow><annotation encoding="application/x-tex">H_{LP}(u,v)=e^{-D^2(u,v)/2\sigma^2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0369199999999998em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0369199999999998em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">u</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span><span class="mord mtight">/</span><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>则高斯高通滤波器传递函数为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mrow><mi>H</mi><mi>P</mi></mrow></msub><mo>=</mo><mn>1</mn><mo>−</mo><msub><mi>H</mi><mrow><mi>L</mi><mi>P</mi></mrow></msub><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><msup><mi>e</mi><mrow><mo>−</mo><msup><mi>D</mi><mn>2</mn></msup><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn><msubsup><mi>D</mi><mn>0</mn><mn>2</mn></msubsup></mrow></msup></mrow><annotation encoding="application/x-tex">H_{HP}=1-H_{LP}(u,v)=1-e^{-D^2(u,v)/2D_0^2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0369199999999998em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0369199999999998em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">u</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span><span class="mord mtight">/</span><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.214em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>其中， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D(u,v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span> 为中心点到任一点的距离， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">D_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为设置半径。</p>
<p>代码（DFT代码文件见最后）：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// main.cpp</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;DFT.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat image, output, trf;</span><br><span class="line">	image = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, image);	<span class="comment">// 显示原图</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">DFT</span>(image, output, trf);	<span class="comment">// 对图像进行傅里叶变换</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 高斯高通滤波</span></span><br><span class="line">	cv::Mat planes[] = &#123; cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(output), cv::Mat::<span class="built_in">zeros</span>(output.<span class="built_in">size</span>(), CV_32F) &#125;;</span><br><span class="line">	cv::<span class="built_in">split</span>(trf, planes);	<span class="comment">//分离通道，获取实部虚部</span></span><br><span class="line"></span><br><span class="line">	cv::Mat trf_real = planes[<span class="number">0</span>];</span><br><span class="line">	cv::Mat trf_imag = planes[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> cx = trf_real.rows / <span class="number">2</span>;	<span class="comment">// 求中心坐标x</span></span><br><span class="line">	<span class="type">int</span> cy = trf_real.cols / <span class="number">2</span>;	<span class="comment">// 求中心坐标y</span></span><br><span class="line">	<span class="type">int</span> r = <span class="number">120</span>;	<span class="comment">// 滤波半径</span></span><br><span class="line">	<span class="type">float</span> h, d;		<span class="comment">// h 为计算量，d 为到中心点的距离</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; trf_real.rows; i ++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; trf_real.cols; j ++)</span><br><span class="line">		&#123;</span><br><span class="line">			d = (i - cx) * (i - cx) + (j - cy) * (j - cy);</span><br><span class="line">			h = <span class="number">1</span> - <span class="built_in">exp</span>(-d / (<span class="number">2.0</span> * r * r));</span><br><span class="line">			trf_real.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(i, j) *= h;</span><br><span class="line">			trf_imag.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(i, j) *= h;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	planes[<span class="number">0</span>] = trf_real;</span><br><span class="line">	planes[<span class="number">1</span>] = trf_imag;</span><br><span class="line">	cv::Mat trf_ilpf;</span><br><span class="line">	cv::<span class="built_in">merge</span>(planes, <span class="number">2</span>, trf_ilpf);</span><br><span class="line"></span><br><span class="line">	cv::Mat iDft[] = &#123; cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(output), cv::Mat::<span class="built_in">zeros</span>(output.<span class="built_in">size</span>(), CV_32F) &#125;;</span><br><span class="line">	cv::<span class="built_in">idft</span>(trf_ilpf, trf_ilpf);	<span class="comment">// 傅里叶逆变换</span></span><br><span class="line">	cv::<span class="built_in">split</span>(trf_ilpf, iDft);		<span class="comment">// 分离通道</span></span><br><span class="line">	cv::<span class="built_in">magnitude</span>(iDft[<span class="number">0</span>], iDft[<span class="number">1</span>], iDft[<span class="number">0</span>]);	<span class="comment">//计算复数的幅值，保存在iDft[0]</span></span><br><span class="line">	cv::<span class="built_in">normalize</span>(iDft[<span class="number">0</span>], iDft[<span class="number">0</span>], <span class="number">0</span>, <span class="number">1</span>, cv::NORM_MINMAX);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;after&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;after&quot;</span>, iDft[<span class="number">0</span>]);</span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b7_run1.jpg" alt="r=120"><figcaption>r=120</figcaption></figure></p>
<h3 id="巴特沃斯高通滤波">巴特沃斯高通滤波</h3>
<p>巴特沃斯高铁滤波器的传递函数为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><mo stretchy="false">[</mo><msub><mi>D</mi><mn>0</mn></msub><mi mathvariant="normal">/</mi><mi>D</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">]</mo><mrow><mn>2</mn><mi>n</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">H(u,v)=\frac {1} {1+[D_0/D(u,v)]^{2n} }
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.25744em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>其中， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D(u,v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span> 是P×Q频率矩形中心到矩形中包含的任意一点(u,v)的距离， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">D_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是截止频率（设置半径）， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 是巴特沃斯滤波器的阶数。</p>
<p>代码（DFT代码文件见最后）：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// main.cpp</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;DFT.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat image, output, trf;</span><br><span class="line">	image = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, image);	<span class="comment">// 显示原图</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">DFT</span>(image, output, trf);	<span class="comment">// 对图像进行傅里叶变换</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 巴特沃斯高通滤波</span></span><br><span class="line">	cv::Mat planes[] = &#123; cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(output), cv::Mat::<span class="built_in">zeros</span>(output.<span class="built_in">size</span>(), CV_32F) &#125;;</span><br><span class="line">	cv::<span class="built_in">split</span>(trf, planes);	<span class="comment">//分离通道，获取实部虚部</span></span><br><span class="line"></span><br><span class="line">	cv::Mat trf_real = planes[<span class="number">0</span>];</span><br><span class="line">	cv::Mat trf_imag = planes[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> cx = trf_real.rows / <span class="number">2</span>;	<span class="comment">// 求中心坐标x</span></span><br><span class="line">	<span class="type">int</span> cy = trf_real.cols / <span class="number">2</span>;	<span class="comment">// 求中心坐标y</span></span><br><span class="line">	<span class="type">int</span> r = <span class="number">120</span>;	<span class="comment">// 滤波半径</span></span><br><span class="line">	<span class="type">float</span> h, d;		<span class="comment">// h 为计算量，d为到中心点的距离</span></span><br><span class="line">	<span class="type">float</span> n = <span class="number">3</span>;	<span class="comment">// 巴特沃斯滤波器阶数</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; trf_real.rows; i ++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; trf_real.cols; j ++)</span><br><span class="line">		&#123;</span><br><span class="line">			d = (i - cx) * (i - cx) + (j - cy) * (j - cy);</span><br><span class="line">			h = <span class="number">1.0</span> / (<span class="number">1</span> + <span class="built_in">pow</span>(((r * r) / d), <span class="number">2</span> * n));</span><br><span class="line">			trf_real.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(i, j) *= h;</span><br><span class="line">			trf_imag.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(i, j) *= h;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	planes[<span class="number">0</span>] = trf_real;</span><br><span class="line">	planes[<span class="number">1</span>] = trf_imag;</span><br><span class="line">	cv::Mat trf_ilpf;</span><br><span class="line">	cv::<span class="built_in">merge</span>(planes, <span class="number">2</span>, trf_ilpf);</span><br><span class="line"></span><br><span class="line">	cv::Mat iDft[] = &#123; cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(output), cv::Mat::<span class="built_in">zeros</span>(output.<span class="built_in">size</span>(), CV_32F) &#125;;</span><br><span class="line">	cv::<span class="built_in">idft</span>(trf_ilpf, trf_ilpf);	<span class="comment">// 傅里叶逆变换</span></span><br><span class="line">	cv::<span class="built_in">split</span>(trf_ilpf, iDft);		<span class="comment">// 分离通道</span></span><br><span class="line">	cv::<span class="built_in">magnitude</span>(iDft[<span class="number">0</span>], iDft[<span class="number">1</span>], iDft[<span class="number">0</span>]);	<span class="comment">//计算复数的幅值，保存在iDft[0]</span></span><br><span class="line">	cv::<span class="built_in">normalize</span>(iDft[<span class="number">0</span>], iDft[<span class="number">0</span>], <span class="number">0</span>, <span class="number">1</span>, cv::NORM_MINMAX);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;after&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;after&quot;</span>, iDft[<span class="number">0</span>]);</span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b7_run2.jpg" alt="r=120,n=3"><figcaption>r=120,n=3</figcaption></figure></p>
<h3 id="拉普拉斯滤波">拉普拉斯滤波</h3>
<p>频率域中拉普拉斯滤波传递函数为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mn>4</mn><msup><mi>π</mi><mn>2</mn></msup><mo stretchy="false">(</mo><msup><mi>u</mi><mn>2</mn></msup><mo>+</mo><msup><mi>v</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mn>4</mn><msup><mi>π</mi><mn>2</mn></msup><mo stretchy="false">[</mo><mo stretchy="false">(</mo><mi>u</mi><mo>−</mo><mi>P</mi><mi mathvariant="normal">/</mi><mn>2</mn><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mi>v</mi><mo>−</mo><mi>Q</mi><mi mathvariant="normal">/</mi><mn>2</mn><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo stretchy="false">]</mo><mo>=</mo><mo>−</mo><mn>4</mn><msup><mi>π</mi><mn>2</mn></msup><msup><mi>D</mi><mn>2</mn></msup><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(u,v)=-4\pi^2(u^2+v^2)=-4\pi^2[(u-P/2)^2+(v-Q/2)^2]=-4\pi^2D^2(u,v)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mord">4</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mord">4</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord">/</span><span class="mord">2</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault">Q</span><span class="mord">/</span><span class="mord">2</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mord">4</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span></span></p>
<p>其中， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D(u,v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span> 为中心点到任一点的距离。</p>
<p>具体增强实现：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>+</mo><mi>c</mi><msup><mi mathvariant="normal">∇</mi><mn>2</mn></msup><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><msup><mi mathvariant="normal">∇</mi><mn>2</mn></msup><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi mathvariant="normal">ℑ</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">[</mo><mi>H</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mi>F</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">g(x,y)=f(x,y)+c\nabla^2f(x,y),\nabla^2f(x,y)=\Im^{-1}[H(u,v)F(u,v)]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">ℑ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mclose">]</span></span></span></span></span></p>
<p>其中， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(u,v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span> 是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 的傅里叶变换。</p>
<p>代码：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// main.cpp</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;DFT.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat image, output, trf;</span><br><span class="line">	image = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, image);	<span class="comment">// 显示原图</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">DFT</span>(image, output, trf);	<span class="comment">// 对图像进行傅里叶变换</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">/*————————————————————————————拉普拉斯滤波————————————————————————————*/</span></span><br><span class="line">	cv::Mat planes[] = &#123; cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(output), cv::Mat::<span class="built_in">zeros</span>(output.<span class="built_in">size</span>(), CV_32F) &#125;;</span><br><span class="line">	cv::<span class="built_in">split</span>(trf, planes);	<span class="comment">//分离通道，获取实部虚部</span></span><br><span class="line"></span><br><span class="line">	cv::Mat trf_real = planes[<span class="number">0</span>];</span><br><span class="line">	cv::Mat trf_imag = planes[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> cx = trf_real.rows / <span class="number">2</span>;	<span class="comment">// 求中心坐标x</span></span><br><span class="line">	<span class="type">int</span> cy = trf_real.cols / <span class="number">2</span>;	<span class="comment">// 求中心坐标y</span></span><br><span class="line">	<span class="type">float</span> h, d;		<span class="comment">// h 为计算量，d为到中心点的距离</span></span><br><span class="line">	<span class="type">float</span> pi = <span class="number">3.1415926</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; trf_real.rows; i ++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; trf_real.cols; j ++)</span><br><span class="line">		&#123;</span><br><span class="line">			d = (i - cx) * (i - cx) + (j - cy) * (j - cy);</span><br><span class="line">			h = <span class="number">-4</span> * pi * pi * d;</span><br><span class="line">			trf_real.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(i, j) *= h;</span><br><span class="line">			trf_imag.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(i, j) *= h;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	planes[<span class="number">0</span>] = trf_real;</span><br><span class="line">	planes[<span class="number">1</span>] = trf_imag;</span><br><span class="line">	cv::Mat trf_ilpf;</span><br><span class="line">	cv::<span class="built_in">merge</span>(planes, <span class="number">2</span>, trf_ilpf);</span><br><span class="line"></span><br><span class="line">	cv::Mat iDft[] = &#123; cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(output), cv::Mat::<span class="built_in">zeros</span>(output.<span class="built_in">size</span>(), CV_32F) &#125;;</span><br><span class="line">	cv::<span class="built_in">idft</span>(trf_ilpf, trf_ilpf);	<span class="comment">// 傅里叶逆变换</span></span><br><span class="line">	cv::<span class="built_in">split</span>(trf_ilpf, iDft);		<span class="comment">// 分离通道</span></span><br><span class="line">	cv::<span class="built_in">magnitude</span>(iDft[<span class="number">0</span>], iDft[<span class="number">1</span>], iDft[<span class="number">0</span>]);	<span class="comment">//计算复数的幅值，保存在iDft[0]</span></span><br><span class="line">	cv::<span class="built_in">normalize</span>(iDft[<span class="number">0</span>], iDft[<span class="number">0</span>], <span class="number">0</span>, <span class="number">1</span>, cv::NORM_MINMAX);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;after&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;after&quot;</span>, iDft[<span class="number">0</span>]);</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/*————————————————————————————标记，实现g(x,y)————————————————————————————*/</span></span><br><span class="line">	iDft[<span class="number">0</span>].<span class="built_in">convertTo</span>(iDft[<span class="number">0</span>], CV_8U, <span class="number">255</span> / <span class="number">1.0</span>, <span class="number">0</span>);</span><br><span class="line">	<span class="function">cv::Mat <span class="title">result</span><span class="params">(iDft[<span class="number">0</span>].size(), CV_8U)</span></span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; iDft[<span class="number">0</span>].rows; i ++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; iDft[<span class="number">0</span>].cols; j ++)</span><br><span class="line">			result.<span class="built_in">at</span>&lt;uchar&gt;(i, j) = cv::<span class="built_in">saturate_cast</span>&lt;uchar&gt;(image.<span class="built_in">at</span>&lt;uchar&gt;(i, j) + iDft[<span class="number">0</span>].<span class="built_in">at</span>&lt;uchar&gt;(i, j));</span><br><span class="line">	</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;result&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;result&quot;</span>, result);</span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b7_run3.jpg" alt></p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b7_run3_1.jpg" alt="标定到原图，即g(x,y)"><figcaption>标定到原图，即g(x,y)</figcaption></figure></p>
<h3 id="高频强调滤波器">高频强调滤波器</h3>
<p>还可以设置可调参数，进行调整影响。高频强调滤波的通用公式是：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi mathvariant="normal">ℑ</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo fence="false">{</mo><mo fence="false">[</mo><msub><mi>k</mi><mn>1</mn></msub><mo>+</mo><msub><mi>k</mi><mn>2</mn></msub><msub><mi>H</mi><mrow><mi>H</mi><mi>P</mi></mrow></msub><mo fence="false">]</mo><mi>F</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo fence="false">}</mo></mrow><annotation encoding="application/x-tex">g(x,y)=\Im^{-1}\bigg\{\big[k_1+k_2H_{HP}\big]F(u,v)\bigg\}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord"><span class="mord">ℑ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="delimsizing size3">{</span></span><span class="mord"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing size1">]</span></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mord"><span class="delimsizing size3">}</span></span></span></span></span></span></p>
<p>其中， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mn>1</mn></msub><mo>≥</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">k_1\geq0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 偏移传递函数的值，以便使直流项不为零， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mn>2</mn></msub><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">k_2&gt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 控制高频的贡献， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mrow><mi>H</mi><mi>P</mi></mrow></msub></mrow><annotation encoding="application/x-tex">H_{HP}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为高通滤波器传递函数， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(u,v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span> 为图像 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(u,v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span> 的傅里叶变换。</p>
<p>部分代码示例：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; trf_real.rows; i ++)</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; trf_real.cols; j ++)</span><br><span class="line">	&#123;</span><br><span class="line">		d = (i - cx) * (i - cx) + (j - cy) * (j - cy);</span><br><span class="line">		<span class="comment">// 高斯高频强调滤波器</span></span><br><span class="line">		h = <span class="number">0.5</span> + <span class="number">0.75</span> * (<span class="number">1</span> - <span class="built_in">exp</span>(-d / (<span class="number">2.0</span> * r * r)));</span><br><span class="line">		trf_real.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(i, j) *= h;</span><br><span class="line">		trf_imag.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(i, j) *= h;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></div>
<hr>
<p><strong>附DFT代码</strong></p>
<div class="highlight-container" data-rel="H"><figure class="iseeu highlight h"><table><tr><td class="code"><pre><span class="line"><span class="comment">// DFT.h</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DFT</span><span class="params">(cv::Mat input, cv::Mat&amp; output, cv::Mat&amp; trf_arr)</span>;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// DFT.cpp</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;DFT.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">DFT</span><span class="params">(cv::Mat input, cv::Mat&amp; output, cv::Mat&amp; trf_arr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">// 扩展图像，优化速度</span></span><br><span class="line">	<span class="type">int</span> n = cv::<span class="built_in">getOptimalDFTSize</span>(input.rows);</span><br><span class="line">	<span class="type">int</span> m = cv::<span class="built_in">getOptimalDFTSize</span>(input.cols);</span><br><span class="line">	cv::<span class="built_in">copyMakeBorder</span>(input, input, <span class="number">0</span>, n - input.rows, <span class="number">0</span>, m - input.cols, cv::BORDER_CONSTANT, cv::Scalar::<span class="built_in">all</span>(<span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 用于存储傅里叶变换的实部和虚部</span></span><br><span class="line">	cv::Mat planes[] = &#123; cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(input), cv::Mat::<span class="built_in">zeros</span>(input.<span class="built_in">size</span>(), CV_32F) &#125;;</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">merge</span>(planes, <span class="number">2</span>, trf_arr);</span><br><span class="line">	</span><br><span class="line">	cv::<span class="built_in">dft</span>(trf_arr, trf_arr);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">split</span>(trf_arr, planes);</span><br><span class="line">	cv::Mat trf_img_real = planes[<span class="number">0</span>];</span><br><span class="line">	cv::Mat trf_img_imag = planes[<span class="number">1</span>];</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// 计算复数的幅值，保存在output中</span></span><br><span class="line">	cv::<span class="built_in">magnitude</span>(planes[<span class="number">0</span>], planes[<span class="number">1</span>], output);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 优化幅值大小</span></span><br><span class="line">	output += cv::<span class="built_in">Scalar</span>(<span class="number">1</span>);</span><br><span class="line">	<span class="built_in">log</span>(output, output);</span><br><span class="line">	cv::<span class="built_in">normalize</span>(output, output, <span class="number">0</span>, <span class="number">1</span>, cv::NORM_MINMAX);</span><br><span class="line"></span><br><span class="line">	output = <span class="built_in">output</span>(cv::<span class="built_in">Rect</span>(<span class="number">0</span>, <span class="number">0</span>, output.cols &amp; <span class="number">-2</span>, output.rows &amp; <span class="number">-2</span>));</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> cx = output.cols / <span class="number">2</span>, cy = output.rows / <span class="number">2</span>;</span><br><span class="line">	<span class="function">cv::Mat <span class="title">q0</span><span class="params">(output, cv::Rect(<span class="number">0</span>, <span class="number">0</span>, cx, cy))</span>, <span class="title">q1</span><span class="params">(output, cv::Rect(cx, <span class="number">0</span>, cx, cy))</span></span>;</span><br><span class="line">	<span class="function">cv::Mat <span class="title">q2</span><span class="params">(output, cv::Rect(<span class="number">0</span>, cy, cx, cy))</span>, <span class="title">q3</span><span class="params">(output, cv::Rect(cx, cy, cx, cy))</span></span>;</span><br><span class="line">	cv::Mat tmp;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 交换区域使得原点位于中心</span></span><br><span class="line">	q0.<span class="built_in">copyTo</span>(tmp); q3.<span class="built_in">copyTo</span>(q0); tmp.<span class="built_in">copyTo</span>(q3);</span><br><span class="line">	q1.<span class="built_in">copyTo</span>(tmp); q2.<span class="built_in">copyTo</span>(q1); tmp.<span class="built_in">copyTo</span>(q2);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 复数的实数部分交换</span></span><br><span class="line">	<span class="function">cv::Mat <span class="title">q00</span><span class="params">(trf_img_real, cv::Rect(<span class="number">0</span>, <span class="number">0</span>, cx, cy))</span></span>;		<span class="comment">// 左上区域</span></span><br><span class="line">	<span class="function">cv::Mat <span class="title">q01</span><span class="params">(trf_img_real, cv::Rect(cx, <span class="number">0</span>, cx, cy))</span></span>;		<span class="comment">// 右上区域</span></span><br><span class="line">	<span class="function">cv::Mat <span class="title">q02</span><span class="params">(trf_img_real, cv::Rect(<span class="number">0</span>, cy, cx, cy))</span></span>;		<span class="comment">// 左下区域</span></span><br><span class="line">	<span class="function">cv::Mat <span class="title">q03</span><span class="params">(trf_img_real, cv::Rect(cx, cy, cx, cy))</span></span>;	<span class="comment">// 右下区域</span></span><br><span class="line">	q00.<span class="built_in">copyTo</span>(tmp); q03.<span class="built_in">copyTo</span>(q00); tmp.<span class="built_in">copyTo</span>(q03);		<span class="comment">//左上与右下进行交换</span></span><br><span class="line">	q01.<span class="built_in">copyTo</span>(tmp); q02.<span class="built_in">copyTo</span>(q01); tmp.<span class="built_in">copyTo</span>(q02);		<span class="comment">//右上与左下进行交换</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 复数的虚数部分交换</span></span><br><span class="line">	<span class="function">cv::Mat <span class="title">q10</span><span class="params">(trf_img_imag, cv::Rect(<span class="number">0</span>, <span class="number">0</span>, cx, cy))</span></span>;		<span class="comment">// 左上区域</span></span><br><span class="line">	<span class="function">cv::Mat <span class="title">q11</span><span class="params">(trf_img_imag, cv::Rect(cx, <span class="number">0</span>, cx, cy))</span></span>;		<span class="comment">// 右上区域</span></span><br><span class="line">	<span class="function">cv::Mat <span class="title">q12</span><span class="params">(trf_img_imag, cv::Rect(<span class="number">0</span>, cy, cx, cy))</span></span>;		<span class="comment">// 左下区域</span></span><br><span class="line">	<span class="function">cv::Mat <span class="title">q13</span><span class="params">(trf_img_imag, cv::Rect(cx, cy, cx, cy))</span></span>;	<span class="comment">// 右下区域</span></span><br><span class="line">	q10.<span class="built_in">copyTo</span>(tmp); q13.<span class="built_in">copyTo</span>(q10); tmp.<span class="built_in">copyTo</span>(q13);		<span class="comment">//左上与右下进行交换</span></span><br><span class="line">	q11.<span class="built_in">copyTo</span>(tmp); q12.<span class="built_in">copyTo</span>(q11); tmp.<span class="built_in">copyTo</span>(q12);		<span class="comment">//右上与左下进行交换</span></span><br><span class="line"></span><br><span class="line">	planes[<span class="number">0</span>] = trf_img_real;</span><br><span class="line">	planes[<span class="number">1</span>] = trf_img_imag;</span><br><span class="line">	cv::<span class="built_in">merge</span>(planes, <span class="number">2</span>, trf_arr);	<span class="comment">// 将傅里叶变换的复数结果保存在trf_arr</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h2 id="同态滤波">同态滤波</h2>
<p><strong>通过一个滤波器传递函数H(u,v)，使用不同可控方法影响低频分量和高频分量。</strong></p>
<h3 id="基本原理">基本原理</h3>
<p><strong>图像f(x,y)可以表示为其照射分量i(x,y)和反射分量r(x,y)的乘积。</strong></p>
<p><strong>图像中，认为低频分量与照射分量相联系，高频分量与反射分量相联系。</strong></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>i</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mi>r</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x,y)=i(x,y)r(x,y)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">i</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></span></p>
<p><strong>乘积的傅里叶变换不是傅里叶变换的乘积。</strong></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ℑ</mi><mo stretchy="false">[</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo mathvariant="normal">≠</mo><mi mathvariant="normal">ℑ</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mi mathvariant="normal">ℑ</mi><mo stretchy="false">[</mo><mi>r</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\Im [f(x,y)] \neq \Im[i(x,y)]\Im[r(x,y)]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℑ</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℑ</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">]</span><span class="mord">ℑ</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">]</span></span></span></span></span></p>
<p>故令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>ln</mi><mo>⁡</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>ln</mi><mo>⁡</mo><mi>i</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>+</mo><mi>ln</mi><mo>⁡</mo><mi>r</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">z(x,y)=\ln f(x,y)=\ln i(x,y)+\ln r(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> ，有</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ℑ</mi><mo stretchy="false">[</mo><mi>z</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>=</mo><mi mathvariant="normal">ℑ</mi><mo stretchy="false">[</mo><mi>ln</mi><mo>⁡</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>=</mo><mi mathvariant="normal">ℑ</mi><mo stretchy="false">[</mo><mi>ln</mi><mo>⁡</mo><mi>i</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>+</mo><mi mathvariant="normal">ℑ</mi><mo stretchy="false">[</mo><mi>ln</mi><mo>⁡</mo><mi>r</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\Im[z(x,y)]=\Im[\ln f(x,y)]=\Im[\ln i(x,y)]+\Im[\ln r(x,y)]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℑ</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℑ</span><span class="mopen">[</span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℑ</span><span class="mopen">[</span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℑ</span><span class="mopen">[</span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">]</span></span></span></span></span></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>F</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>F</mi><mi>r</mi></msub><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Z(u,v)=F_i(u,v)+F_r(u,v)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span></span></p>
<p>其中， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F_i(u,v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mi>r</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F_r(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 分别是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ln</mi><mo>⁡</mo><mi>i</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\ln i(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ln</mi><mo>⁡</mo><mi>r</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\ln r(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 的傅里叶变换。</p>
<p>使用滤波器传递函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(u,v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span> 对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Z(u,v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span> 滤波，有</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><mi>H</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mi>Z</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><mi>H</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><msub><mi>F</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>+</mo><mi>H</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><msub><mi>F</mi><mi>r</mi></msub><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S(u,v)=H(u,v)Z(u,v)=H(u,v)F_i(u,v)+H(u,v)F_r(u,v)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span></span></p>
<p>空间域中滤波后的图像是</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi mathvariant="normal">ℑ</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">[</mo><mi>S</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>=</mo><msup><mi mathvariant="normal">ℑ</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">[</mo><mi>H</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><msub><mi>F</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>+</mo><msup><mi mathvariant="normal">ℑ</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">[</mo><mi>H</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><msub><mi>F</mi><mi>r</mi></msub><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">s(x,y)=\Im^{-1}[S(u,v)]=\Im^{-1}[H(u,v)F_i(u,v)]+\Im^{-1}[H(u,v)F_r(u,v)]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">ℑ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">ℑ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">ℑ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mclose">]</span></span></span></span></span></p>
<p>最后通过取滤波后的结果的指数形成输出图像</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>e</mi><mrow><mi>s</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msup><mi>e</mi><mrow><msup><mi mathvariant="normal">ℑ</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">[</mo><mi>H</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><msub><mi>F</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow></msup><msup><mi>e</mi><mrow><msup><mi mathvariant="normal">ℑ</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">[</mo><mi>H</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><msub><mi>F</mi><mi>r</mi></msub><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow></msup></mrow><annotation encoding="application/x-tex">g(x,y)=e^{s(x,y)}=e^{\Im^{-1}[H(u,v)F_i(u,v)]}e^{\Im^{-1}[H(u,v)F_r(u,v)]}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.938em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0369199999999998em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0369199999999998em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">ℑ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen mtight">[</span><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">u</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">u</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0369199999999998em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">ℑ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen mtight">[</span><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">u</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">u</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>记</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>i</mi><mn>0</mn></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>e</mi><mrow><msup><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msup><mi>e</mi><mrow><msup><mi mathvariant="normal">ℑ</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">[</mo><mi>H</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><msub><mi>F</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow></msup></mrow><annotation encoding="application/x-tex">i_0(x,y)=e^{i&#x27;(x,y)}=e^{\Im^{-1}[H(u,v)F_i(u,v)]}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.99248em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.99248em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0369199999999998em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0369199999999998em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">ℑ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen mtight">[</span><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">u</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">u</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>为输出图像的照射分量，</p>
<p>记</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mn>0</mn></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>e</mi><mrow><msup><mi>r</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msup><mi>e</mi><mrow><msup><mi mathvariant="normal">ℑ</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">[</mo><mi>H</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><msub><mi>F</mi><mi>r</mi></msub><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow></msup></mrow><annotation encoding="application/x-tex">r_0(x,y)=e^{r&#x27;(x,y)}=e^{\Im^{-1}[H(u,v)F_r(u,v)]}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.99248em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.99248em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0369199999999998em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0369199999999998em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">ℑ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen mtight">[</span><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">u</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">u</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>为输出图像的反射分量。</p>
<p>上述滤波方法过程如下图：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b8_1.png" alt="同态滤波步骤"><figcaption>同态滤波步骤</figcaption></figure></p>
<h3 id="以高斯高通滤波器举例">以高斯高通滤波器举例</h3>
<p>一般高斯高通滤波器函数：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><msup><mi>e</mi><mrow><mo>−</mo><msup><mi>D</mi><mn>2</mn></msup><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn><msubsup><mi>D</mi><mn>0</mn><mn>2</mn></msubsup></mrow></msup></mrow><annotation encoding="application/x-tex">H(u,v)=1-e^{-D^2(u,v)/2D^2_0}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0369199999999998em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0369199999999998em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">u</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span><span class="mord mtight">/</span><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.214em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b8_2.png" alt="函数图像"><figcaption>函数图像</figcaption></figure></p>
<p>使用稍微变化的GHPF（Gaussian high-pass filter）：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><msub><mi>γ</mi><mi>H</mi></msub><mo>−</mo><msub><mi>γ</mi><mi>L</mi></msub><mo stretchy="false">)</mo><mo fence="false">[</mo><mn>1</mn><mo>−</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>c</mi><msup><mi>D</mi><mn>2</mn></msup><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><msubsup><mi>D</mi><mn>0</mn><mn>2</mn></msubsup></mrow></msup><mo fence="false">]</mo><mo>+</mo><msub><mi>γ</mi><mi>L</mi></msub></mrow><annotation encoding="application/x-tex">H(u,v)=(\gamma_H-\gamma_L)\big[1-e^{-cD^2(u,v)/D_0^2}\big]+\gamma_L
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="delimsizing size1">[</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.3869299999999998em;vertical-align:-0.35001em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0369199999999998em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">c</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">u</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span><span class="mord mtight">/</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.214em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord"><span class="delimsizing size1">]</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D(u,v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span> 为中心点到任一点的距离， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">D_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为设置半径， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>γ</mi><mi>L</mi></msub></mrow><annotation encoding="application/x-tex">\gamma_L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>γ</mi><mi>H</mi></msub></mrow><annotation encoding="application/x-tex">\gamma_H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为规定频率范围，常数c控制函数的偏斜度，类似于高频强调函数。</p>
<p>变化后的GHPF图像如下：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b8_3.png" alt="函数图像"><figcaption>函数图像</figcaption></figure></p>
<p>明显地，减少了低频分量的影响，增加了高频分量的影响。</p>
<p>代码：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// main.cpp</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;DFT.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat image, output, trf;</span><br><span class="line">	image = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, image);	<span class="comment">// 显示原图</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">/* ——————————对数变换—————————— */</span></span><br><span class="line">	<span class="function">cv::Mat <span class="title">image_</span><span class="params">(image.size(), CV_32F)</span></span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; image.rows; i ++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; image.cols; j ++)</span><br><span class="line">			image_.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(i, j) = <span class="built_in">log</span>(image.<span class="built_in">at</span>&lt;uchar&gt;(i, j) + <span class="number">0.1</span>);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">DFT</span>(image_, output, trf);	<span class="comment">// 对图像进行傅里叶变换</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">/* ——————————滤波—————————— */</span></span><br><span class="line">	cv::Mat planes[] = &#123; cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(output), cv::Mat::<span class="built_in">zeros</span>(output.<span class="built_in">size</span>(), CV_32F) &#125;;</span><br><span class="line">	cv::<span class="built_in">split</span>(trf, planes);	<span class="comment">//分离通道，获取实部虚部</span></span><br><span class="line"></span><br><span class="line">	cv::Mat trf_real = planes[<span class="number">0</span>];</span><br><span class="line">	cv::Mat trf_imag = planes[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> cx = trf_real.rows / <span class="number">2</span>;	<span class="comment">// 求中心坐标x</span></span><br><span class="line">	<span class="type">int</span> cy = trf_real.cols / <span class="number">2</span>;	<span class="comment">// 求中心坐标y</span></span><br><span class="line">	<span class="type">int</span> r = <span class="number">10</span>;	<span class="comment">// 滤波半径</span></span><br><span class="line">	<span class="type">float</span> h, d;		<span class="comment">// h 为计算量，d 为到中心点的距离</span></span><br><span class="line">	<span class="type">float</span> rh = <span class="number">3</span>, rl = <span class="number">0.5</span>, c = <span class="number">5</span>;	<span class="comment">// 高频点、低频点、c值</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; trf_real.rows; i ++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; trf_real.cols; j ++)</span><br><span class="line">		&#123;</span><br><span class="line">			d = (i - cx) * (i - cx) + (j - cy) * (j - cy);</span><br><span class="line">			h = (rh - rl) * (<span class="number">1</span> - <span class="built_in">exp</span>(-c * d / (r * r))) + rl;</span><br><span class="line">			trf_real.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(i, j) *= h;</span><br><span class="line">			trf_imag.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(i, j) *= h;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	planes[<span class="number">0</span>] = trf_real;</span><br><span class="line">	planes[<span class="number">1</span>] = trf_imag;</span><br><span class="line">	cv::Mat trf_ilpf;</span><br><span class="line">	cv::<span class="built_in">merge</span>(planes, <span class="number">2</span>, trf_ilpf);</span><br><span class="line"></span><br><span class="line">	cv::Mat iDft[] = &#123; cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(output), cv::Mat::<span class="built_in">zeros</span>(output.<span class="built_in">size</span>(), CV_32F) &#125;;</span><br><span class="line">	cv::<span class="built_in">idft</span>(trf_ilpf, trf_ilpf);	<span class="comment">// 傅里叶逆变换</span></span><br><span class="line">	cv::<span class="built_in">split</span>(trf_ilpf, iDft);		<span class="comment">// 分离通道</span></span><br><span class="line">	cv::<span class="built_in">magnitude</span>(iDft[<span class="number">0</span>], iDft[<span class="number">1</span>], iDft[<span class="number">0</span>]);	<span class="comment">//计算复数的幅值，保存在iDft[0]</span></span><br><span class="line">	cv::<span class="built_in">normalize</span>(iDft[<span class="number">0</span>], iDft[<span class="number">0</span>], <span class="number">0</span>, <span class="number">1</span>, cv::NORM_MINMAX);</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/* ——————————指数恢复数值并归一化—————————— */</span></span><br><span class="line">	cv::<span class="built_in">exp</span>(iDft[<span class="number">0</span>], iDft[<span class="number">0</span>]);</span><br><span class="line">	cv::<span class="built_in">normalize</span>(iDft[<span class="number">0</span>], iDft[<span class="number">0</span>], <span class="number">0</span>, <span class="number">1</span>, cv::NORM_MINMAX);</span><br><span class="line"></span><br><span class="line">	iDft[<span class="number">0</span>].<span class="built_in">convertTo</span>(iDft[<span class="number">0</span>], CV_8U, <span class="number">255</span> / <span class="number">1.0</span>, <span class="number">0</span>);</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;after&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;after&quot;</span>, iDft[<span class="number">0</span>]);</span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b8_run.jpg" alt></p>
<hr>
<div class="highlight-container" data-rel="H"><figure class="iseeu highlight h"><table><tr><td class="code"><pre><span class="line"><span class="comment">// DFT.h</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DFT</span><span class="params">(cv::Mat input, cv::Mat&amp; output, cv::Mat&amp; trf_arr)</span>;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// DFT.cpp</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;DFT.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">DFT</span><span class="params">(cv::Mat input, cv::Mat&amp; output, cv::Mat&amp; trf_arr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">// 扩展图像，优化速度</span></span><br><span class="line">	<span class="type">int</span> n = cv::<span class="built_in">getOptimalDFTSize</span>(input.rows);</span><br><span class="line">	<span class="type">int</span> m = cv::<span class="built_in">getOptimalDFTSize</span>(input.cols);</span><br><span class="line">	cv::<span class="built_in">copyMakeBorder</span>(input, input, <span class="number">0</span>, n - input.rows, <span class="number">0</span>, m - input.cols, cv::BORDER_CONSTANT, cv::Scalar::<span class="built_in">all</span>(<span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 用于存储傅里叶变换的实部和虚部</span></span><br><span class="line">	cv::Mat planes[] = &#123; cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(input), cv::Mat::<span class="built_in">zeros</span>(input.<span class="built_in">size</span>(), CV_32F) &#125;;</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">merge</span>(planes, <span class="number">2</span>, trf_arr);</span><br><span class="line">	</span><br><span class="line">	cv::<span class="built_in">dft</span>(trf_arr, trf_arr);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">split</span>(trf_arr, planes);</span><br><span class="line">	cv::Mat trf_img_real = planes[<span class="number">0</span>];</span><br><span class="line">	cv::Mat trf_img_imag = planes[<span class="number">1</span>];</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// 计算复数的幅值，保存在output中</span></span><br><span class="line">	cv::<span class="built_in">magnitude</span>(planes[<span class="number">0</span>], planes[<span class="number">1</span>], output);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 优化幅值大小</span></span><br><span class="line">	output += cv::<span class="built_in">Scalar</span>(<span class="number">1</span>);</span><br><span class="line">	<span class="built_in">log</span>(output, output);</span><br><span class="line">	cv::<span class="built_in">normalize</span>(output, output, <span class="number">0</span>, <span class="number">1</span>, cv::NORM_MINMAX);</span><br><span class="line"></span><br><span class="line">	output = <span class="built_in">output</span>(cv::<span class="built_in">Rect</span>(<span class="number">0</span>, <span class="number">0</span>, output.cols &amp; <span class="number">-2</span>, output.rows &amp; <span class="number">-2</span>));</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> cx = output.cols / <span class="number">2</span>, cy = output.rows / <span class="number">2</span>;</span><br><span class="line">	<span class="function">cv::Mat <span class="title">q0</span><span class="params">(output, cv::Rect(<span class="number">0</span>, <span class="number">0</span>, cx, cy))</span>, <span class="title">q1</span><span class="params">(output, cv::Rect(cx, <span class="number">0</span>, cx, cy))</span></span>;</span><br><span class="line">	<span class="function">cv::Mat <span class="title">q2</span><span class="params">(output, cv::Rect(<span class="number">0</span>, cy, cx, cy))</span>, <span class="title">q3</span><span class="params">(output, cv::Rect(cx, cy, cx, cy))</span></span>;</span><br><span class="line">	cv::Mat tmp;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 交换区域使得原点位于中心</span></span><br><span class="line">	q0.<span class="built_in">copyTo</span>(tmp); q3.<span class="built_in">copyTo</span>(q0); tmp.<span class="built_in">copyTo</span>(q3);</span><br><span class="line">	q1.<span class="built_in">copyTo</span>(tmp); q2.<span class="built_in">copyTo</span>(q1); tmp.<span class="built_in">copyTo</span>(q2);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 复数的实数部分交换</span></span><br><span class="line">	<span class="function">cv::Mat <span class="title">q00</span><span class="params">(trf_img_real, cv::Rect(<span class="number">0</span>, <span class="number">0</span>, cx, cy))</span></span>;		<span class="comment">// 左上区域</span></span><br><span class="line">	<span class="function">cv::Mat <span class="title">q01</span><span class="params">(trf_img_real, cv::Rect(cx, <span class="number">0</span>, cx, cy))</span></span>;		<span class="comment">// 右上区域</span></span><br><span class="line">	<span class="function">cv::Mat <span class="title">q02</span><span class="params">(trf_img_real, cv::Rect(<span class="number">0</span>, cy, cx, cy))</span></span>;		<span class="comment">// 左下区域</span></span><br><span class="line">	<span class="function">cv::Mat <span class="title">q03</span><span class="params">(trf_img_real, cv::Rect(cx, cy, cx, cy))</span></span>;	<span class="comment">// 右下区域</span></span><br><span class="line">	q00.<span class="built_in">copyTo</span>(tmp); q03.<span class="built_in">copyTo</span>(q00); tmp.<span class="built_in">copyTo</span>(q03);		<span class="comment">//左上与右下进行交换</span></span><br><span class="line">	q01.<span class="built_in">copyTo</span>(tmp); q02.<span class="built_in">copyTo</span>(q01); tmp.<span class="built_in">copyTo</span>(q02);		<span class="comment">//右上与左下进行交换</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 复数的虚数部分交换</span></span><br><span class="line">	<span class="function">cv::Mat <span class="title">q10</span><span class="params">(trf_img_imag, cv::Rect(<span class="number">0</span>, <span class="number">0</span>, cx, cy))</span></span>;		<span class="comment">// 左上区域</span></span><br><span class="line">	<span class="function">cv::Mat <span class="title">q11</span><span class="params">(trf_img_imag, cv::Rect(cx, <span class="number">0</span>, cx, cy))</span></span>;		<span class="comment">// 右上区域</span></span><br><span class="line">	<span class="function">cv::Mat <span class="title">q12</span><span class="params">(trf_img_imag, cv::Rect(<span class="number">0</span>, cy, cx, cy))</span></span>;		<span class="comment">// 左下区域</span></span><br><span class="line">	<span class="function">cv::Mat <span class="title">q13</span><span class="params">(trf_img_imag, cv::Rect(cx, cy, cx, cy))</span></span>;	<span class="comment">// 右下区域</span></span><br><span class="line">	q10.<span class="built_in">copyTo</span>(tmp); q13.<span class="built_in">copyTo</span>(q10); tmp.<span class="built_in">copyTo</span>(q13);		<span class="comment">//左上与右下进行交换</span></span><br><span class="line">	q11.<span class="built_in">copyTo</span>(tmp); q12.<span class="built_in">copyTo</span>(q11); tmp.<span class="built_in">copyTo</span>(q12);		<span class="comment">//右上与左下进行交换</span></span><br><span class="line"></span><br><span class="line">	planes[<span class="number">0</span>] = trf_img_real;</span><br><span class="line">	planes[<span class="number">1</span>] = trf_img_imag;</span><br><span class="line">	cv::<span class="built_in">merge</span>(planes, <span class="number">2</span>, trf_arr);	<span class="comment">// 将傅里叶变换的复数结果保存在trf_arr</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h1>噪声模型及估计和滤波方法</h1>
<p><strong>噪声分量的灰度值可视为随机变量，故讨论概率密度函数。</strong></p>
<h2 id="噪声模型">噪声模型</h2>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b9_1.jpg" alt="噪声模型概率密度函数"><figcaption>噪声模型概率密度函数</figcaption></figure></p>
<h3 id="高斯噪声">高斯噪声</h3>
<p>概率密度函数（PDF，Probability Density Function）：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><msqrt><mrow><mn>2</mn><mi>π</mi></mrow></msqrt><mi>σ</mi></mrow></mfrac><msup><mi>e</mi><mrow><mo>−</mo><mo stretchy="false">(</mo><mi>z</mi><mo>−</mo><mover accent="true"><mi>z</mi><mo stretchy="true">‾</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mi mathvariant="normal">/</mi><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></msup><mo separator="true">,</mo><mo>−</mo><mi mathvariant="normal">∞</mi><mo>&lt;</mo><mi>z</mi><mo>&lt;</mo><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">p(z)=\frac {1} {\sqrt{2\pi}\sigma}e^{-(z-\overline{z})^2/2\sigma^2},-\infty&lt;z&lt;\infty
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.25144em;vertical-align:-0.93em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.2027799999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0369199999999998em;"><span style="top:-3.413em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mbin mtight">−</span><span class="mord overline mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6755600000000002em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.57756em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line mtight" style="border-bottom-width:0.049em;"></span></span></span></span></span></span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mtight">/</span><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord">∞</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">∞</span></span></span></span></span></p>
<p>其中， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span> 表示灰度， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>z</mi><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.63056em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.63056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.55056em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span> 表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span> 的均值， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span></span></span></span> 是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span> 的标准差。</p>
<h3 id="瑞利噪声">瑞利噪声</h3>
<p>PDF为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mn>2</mn><mi>b</mi></mfrac><mo stretchy="false">(</mo><mi>z</mi><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mo stretchy="false">(</mo><mi>z</mi><mo>−</mo><mi>a</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mi mathvariant="normal">/</mi><mi>b</mi></mrow></msup></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo separator="true">,</mo><mi>z</mi><mo>≥</mo><mi>a</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo separator="true">,</mo><mi>z</mi><mo>&lt;</mo><mi>a</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">p(z)=\begin{cases}
\frac{2} {b}(z-a)e^{-(z-a)^2/b}&amp;,z\geq a\\
0&amp;,z&lt;a
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999998em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">a</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mtight">/</span><span class="mord mathdefault mtight">b</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">a</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>当z由瑞利PDF表征时，均值为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>z</mi><mo stretchy="true">‾</mo></mover><mo>=</mo><mi>a</mi><mo>+</mo><msqrt><mrow><mi>π</mi><mi>b</mi><mi mathvariant="normal">/</mi><mn>4</mn></mrow></msqrt></mrow><annotation encoding="application/x-tex">\overline{z}=a+\sqrt{\pi b/4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.63056em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.63056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.55056em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.30499999999999994em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mord mathdefault">b</span><span class="mord">/</span><span class="mord">4</span></span></span><span style="top:-2.8950000000000005em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width="400em" height="1.28em" viewbox="0 0 400000 1296" preserveaspectratio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119
c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120
c340,-704.7,510.7,-1060.3,512,-1067
l0 -0
c4.7,-7.3,11,-11,19,-11
H40000v40H1012.3
s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232
c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1
s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26
c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z
M1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30499999999999994em;"><span></span></span></span></span></span></span></span></span> ，方差为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup><mo>=</mo><mfrac><mrow><mi>b</mi><mo stretchy="false">(</mo><mn>4</mn><mo>−</mo><mi>π</mi><mo stretchy="false">)</mo></mrow><mn>4</mn></mfrac></mrow><annotation encoding="application/x-tex">\sigma^2=\frac{b(4-\pi)} {4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span><span class="mopen mtight">(</span><span class="mord mtight">4</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 。</p>
<h3 id="爱尔兰-伽马-噪声">爱尔兰（伽马）噪声</h3>
<p>PDF为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mrow><msup><mi>a</mi><mi>b</mi></msup><msup><mi>z</mi><mrow><mi>b</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><mrow><mo stretchy="false">(</mo><mi>b</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">!</mo></mrow></mfrac><msup><mi>e</mi><mrow><mo>−</mo><mi>a</mi><mi>z</mi></mrow></msup></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo separator="true">,</mo><mi>z</mi><mo>≥</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo separator="true">,</mo><mi>z</mi><mo>&lt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">p(z)=\begin{cases}
\frac{a^bz^{b-1} } {(b-1)!}e^{-az}&amp;,z\geq 0\\
0&amp;,z&lt;0
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.00292em;vertical-align:-1.25146em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75146em;"><span style="top:-3.7514600000000002em;"><span class="pstrut" style="height:3.04292em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.04292em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">b</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="mclose mtight">!</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9270285714285713em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9270285714285714em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.22346em;"><span class="pstrut" style="height:3.04292em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25146em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75146em;"><span style="top:-3.7514600000000002em;"><span class="pstrut" style="height:3.04292em;"></span><span class="mord"><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-2.22346em;"><span class="pstrut" style="height:3.04292em;"></span><span class="mord"><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25146em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>其中，a&gt;b，z的均值为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>z</mi><mo stretchy="true">‾</mo></mover><mo>=</mo><mfrac><mi>a</mi><mi>b</mi></mfrac></mrow><annotation encoding="application/x-tex">\overline{z}=\frac{a} {b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.63056em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.63056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.55056em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.040392em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> ，方差为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup><mo>=</mo><mfrac><mi>b</mi><msup><mi>a</mi><mn>2</mn></msup></mfrac></mrow><annotation encoding="application/x-tex">\sigma^2=\frac{b} {a^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p>
<h3 id="指数噪声">指数噪声</h3>
<p>PDF为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><msup><mi>e</mi><mrow><mo>−</mo><mi>a</mi><mi>z</mi></mrow></msup></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo separator="true">,</mo><mi>z</mi><mo>≥</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo separator="true">,</mo><mi>z</mi><mo>&lt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">p(z)=\begin{cases}
ae^{-az}&amp;,z\geq 0\\
0&amp;,z&lt;0
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>其中，a&gt;0，z的均值为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>z</mi><mo stretchy="true">‾</mo></mover><mo>=</mo><mfrac><mn>1</mn><mi>a</mi></mfrac></mrow><annotation encoding="application/x-tex">\overline{z}=\frac{1} {a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.63056em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.63056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.55056em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> ，方差为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup><mo>=</mo><mfrac><mn>1</mn><msup><mi>a</mi><mn>2</mn></msup></mfrac></mrow><annotation encoding="application/x-tex">\sigma^2=\frac{1} {a^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 。其为爱尔兰PDF在b=1时的特殊情况。</p>
<h3 id="均匀噪声">均匀噪声</h3>
<p>PDF为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mn>1</mn><mrow><mi>b</mi><mo>−</mo><mi>a</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo separator="true">,</mo><mi>a</mi><mo>≤</mo><mi>z</mi><mo>≤</mo><mi>b</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo separator="true">,</mo><mtext>其他</mtext></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">p(z)=\begin{cases}
\frac{1} {b-a}&amp;,a\leq z\leq b\\
0&amp;,其他
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">a</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">b</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">其</span><span class="mord cjk_fallback">他</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>其中，z的均值为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>z</mi><mo stretchy="true">‾</mo></mover><mo>=</mo><mfrac><mrow><mi>a</mi><mo>+</mo><mi>b</mi></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\overline{z}=\frac{a+b} {2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.63056em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.63056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.55056em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> ，方差为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup><mo>=</mo><mfrac><mrow><mo stretchy="false">(</mo><mi>b</mi><mo>−</mo><mi>a</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mn>12</mn></mfrac></mrow><annotation encoding="application/x-tex">\sigma^2=\frac{(b-a)^2} {12}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4539199999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10892em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">b</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">a</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p>
<h3 id="椒盐噪声">椒盐噪声</h3>
<p>PDF为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>P</mi><mi>s</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo separator="true">,</mo><mi>z</mi><mo>=</mo><msup><mn>2</mn><mi>k</mi></msup><mo>−</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>P</mi><mi>p</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo separator="true">,</mo><mi>z</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo>−</mo><mo stretchy="false">(</mo><msub><mi>P</mi><mi>s</mi></msub><mo>+</mo><msub><mi>P</mi><mi>p</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo separator="true">,</mo><mi>z</mi><mo>=</mo><mi>V</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">p(z)=\begin{cases}
P_s&amp;,z=2^k-1\\
P_p&amp;,z=0\\
1-(P_s+P_p)&amp;,z=V
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.9099999999999997em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.20499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.2950099999999996em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.30501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9099999999999997em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9099999999999997em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>其中，V是区间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>&lt;</mo><mi>V</mi><mo>&lt;</mo><msup><mn>2</mn><mi>k</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">0&lt;V&lt;2^k-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.932438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 内的任意整数，k是数字图像中灰度值的比特数。像素被盐粒或胡椒噪声污染的概率P为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo>=</mo><msub><mi>P</mi><mi>s</mi></msub><mo>+</mo><msub><mi>P</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">P=P_s+P_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 。P为噪声密度。</p>
<p>椒盐噪声的均值为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>z</mi><mo stretchy="true">‾</mo></mover><mo>=</mo><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo><msub><mi>P</mi><mi>p</mi></msub><mo>+</mo><mi>K</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>P</mi><mi>s</mi></msub><mo>−</mo><msub><mi>P</mi><mi>p</mi></msub><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><msup><mn>2</mn><mi>k</mi></msup><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><msub><mi>P</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">\overline{z}=(0)P_p+K(1-P_s-P_p)+(2^k-1)P_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.63056em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.63056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.55056em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，</p>
<p>方差为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup><mo>=</mo><mo stretchy="false">(</mo><mn>0</mn><mo>−</mo><mover accent="true"><mi>z</mi><mo stretchy="true">‾</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup><msub><mi>P</mi><mi>p</mi></msub><mo>+</mo><mo stretchy="false">(</mo><mi>K</mi><mo>−</mo><mover accent="true"><mi>z</mi><mo stretchy="true">‾</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>P</mi><mi>s</mi></msub><mo>−</mo><msub><mi>P</mi><mi>p</mi></msub><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><msup><mn>2</mn><mi>k</mi></msup><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><msub><mi>P</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">\sigma^2=(0-\overline{z})^2P_p+(K-\overline{z})^2(1-P_s-P_p)+(2^k-1)P_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1002159999999999em;vertical-align:-0.286108em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.63056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.55056em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.63056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.55056em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 。</p>
<h2 id="判别噪声类别">判别噪声类别</h2>
<p><strong>椒盐噪声可以肉眼区分。</strong></p>
<p><strong>其他噪声需要取图像中灰度较为平滑的区域，使用灰度分布图判断。</strong></p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b9_run.jpg" alt="不同噪声区别"><figcaption>不同噪声区别</figcaption></figure></p>
<p>由上图可知，选取较为平滑的区域，高斯噪声后的直方图与高斯噪声PDF类似，而均匀噪声后的直方图与均匀噪声PDF类似。</p>
<p>上图代码实现</p>
<p>有关函数：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">fill</span><span class="params">(InputOutputArray mat, <span class="type">int</span> distType, InputArray a, InputArray b, <span class="type">bool</span> saturateRange = <span class="literal">false</span>)</span></span>;</span><br></pre></td></tr></table></figure></div>
<p>该函数属于OpenCV 4的RNG类，是一个非静态成员函数，因此在使用的时候不能像使用正常函数一样的直接使用，而需要首先创建一个RNG类的变量，之后通过访问这个变量中函数进行调用这个函数。</p>
<p>该函数参数如下：</p>
<ul>
<li>
<p>mat：用于存放随机数的矩阵，目前只支持低于5通道的矩阵。</p>
</li>
<li>
<p>distType：随机数分布形式选择标志，目前生成的随机数支持均匀分布（RNG::UNIFORM，0）和高斯分布（RNG::NORMAL，1）。</p>
</li>
<li>
<p>a：确定分布规律的参数。当选择均匀分布时，该参数表示均匀分布的最小下限；当选择高斯分布时，该参数表示高斯分布的均值。</p>
</li>
<li>
<p>b：确定分布规律的参数。当选择均匀分布时，该参数表示均匀分布的最大上限；当选择高斯分布时，该参数表示高斯分布的标准差。</p>
</li>
<li>
<p>saturateRange：预饱和标志，仅用于均匀分布。</p>
</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加高斯噪声</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">GaussianNoise</span><span class="params">(cv::Mat input, cv::Mat &amp;output)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::RNG rng;</span><br><span class="line">	cv::Mat noice = input.<span class="built_in">clone</span>();</span><br><span class="line">	output = input.<span class="built_in">clone</span>();</span><br><span class="line">	rng.<span class="built_in">fill</span>(noice, cv::RNG::NORMAL, <span class="number">10</span>, <span class="number">50</span>);	<span class="comment">// 使用NORMAL参数添加高斯噪声</span></span><br><span class="line">	output = input + noice;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加均匀噪声</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">UniformNoise</span><span class="params">(cv::Mat input, cv::Mat &amp;output)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::RNG rng;</span><br><span class="line">	cv::Mat noice = input.<span class="built_in">clone</span>();</span><br><span class="line">	output = input.<span class="built_in">clone</span>();</span><br><span class="line">	rng.<span class="built_in">fill</span>(noice, cv::RNG::UNIFORM, <span class="number">10</span>, <span class="number">50</span>);	<span class="comment">// 使用UNIFORM参数添加高斯噪声</span></span><br><span class="line">	output = input + noice;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">getHist</span><span class="params">(cv::Mat&amp; input, cv::Mat&amp; histImage)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">// 划出感兴趣区域</span></span><br><span class="line">	<span class="function">cv::Mat <span class="title">ioa</span><span class="params">(cv::Mat::zeros(input.size(), CV_8U))</span></span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i ++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">900</span>; j &lt; <span class="number">1000</span>; j ++)</span><br><span class="line">			ioa.<span class="built_in">at</span>&lt;uchar&gt;(i, j) = <span class="number">255</span>;</span><br><span class="line">	<span class="comment">// 框出感兴趣区域</span></span><br><span class="line">	cv::<span class="built_in">rectangle</span>(input, cv::<span class="built_in">Rect</span>(<span class="number">900</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">100</span>), cv::<span class="built_in">Scalar</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* ————————计算并绘制直方图———————— */</span></span><br><span class="line">	cv::Mat hist;</span><br><span class="line">	<span class="type">int</span> hsize = <span class="number">256</span>;    <span class="comment">// 直方图区间数</span></span><br><span class="line">	<span class="type">float</span> ranges[] = &#123; <span class="number">0</span>, <span class="number">256</span> &#125;;   <span class="comment">// 统计像素值的区间</span></span><br><span class="line">	<span class="type">const</span> <span class="type">float</span> *hRanges = &#123; ranges &#125;;</span><br><span class="line">	<span class="comment">// 计算直方图的输出值</span></span><br><span class="line">	cv::<span class="built_in">calcHist</span>(&amp;input, <span class="number">1</span>, <span class="number">0</span>, ioa, hist, <span class="number">1</span>, &amp;hsize, &amp;hRanges, <span class="literal">true</span>, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> hist_h = <span class="number">300</span>, hist_w = <span class="number">512</span>; <span class="comment">// 直方图图像高和宽</span></span><br><span class="line">	<span class="type">int</span> bin_w = hist_w / hsize; <span class="comment">// 区间</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 直方图图像</span></span><br><span class="line">	histImage = cv::<span class="built_in">Mat</span>(hist_h, hist_w, CV_8UC3, cv::<span class="built_in">Scalar</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>));</span><br><span class="line">	<span class="comment">// 直方图输出值归一化到0~255</span></span><br><span class="line">	cv::<span class="built_in">normalize</span>(hist, hist, <span class="number">0</span>, hist_h, cv::NORM_MINMAX, <span class="number">-1</span>, cv::<span class="built_in">Mat</span>());</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; hsize; i ++)</span><br><span class="line">		cv::<span class="built_in">line</span>(histImage, cv::<span class="built_in">Point</span>((i - <span class="number">1</span>) * bin_w, hist_h - <span class="built_in">cvRound</span>(hist.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(i - <span class="number">1</span>))), cv::<span class="built_in">Point</span>((i) *bin_w, hist_h - <span class="built_in">cvRound</span>(hist.<span class="built_in">at</span>&lt;<span class="type">float</span>&gt;(i))), cv::<span class="built_in">Scalar</span>(<span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>), <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat input = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>, <span class="number">0</span>);</span><br><span class="line">	cv::Mat output1, output2, hi1, hi2, hi;</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">GaussianNoise</span>(input, output1);</span><br><span class="line">	<span class="built_in">UniformNoise</span>(input, output2);</span><br><span class="line">	<span class="built_in">getHist</span>(input, hi);</span><br><span class="line">	<span class="built_in">getHist</span>(output1, hi1);</span><br><span class="line">	<span class="built_in">getHist</span>(output2, hi2);</span><br><span class="line">	</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;原图&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;原图&quot;</span>, input);</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;原图直方图&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;原图直方图&quot;</span>, hi);</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;高斯噪声后图&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;高斯噪声后图&quot;</span>, output1);</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;均匀噪声后图&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;均匀噪声后图&quot;</span>, output2);</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;高斯噪声后直方图&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;高斯噪声后直方图&quot;</span>, hi1);</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;均匀噪声后直方图&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;均匀噪声后直方图&quot;</span>, hi2);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h2 id="常见的空间滤波方法">常见的空间滤波方法</h2>
<h3 id="均值滤波器">均值滤波器</h3>
<ul>
<li>
<p>算术均值滤波器：也是盒式滤波器，平滑图像中的局部变化，会降低噪声，也会模糊图像。</p>
</li>
<li>
<p>几何均值滤波器：比算术均值滤波器相比丢失细节少。</p>
</li>
<li>
<p>谐波平均滤波器：适合处理高斯噪声及盐粒噪声，但不能处理胡椒噪声。</p>
</li>
<li>
<p>逆谐波均值滤波器：调节阶数有不同的效果。</p>
</li>
</ul>
<h3 id="统计排序滤波器">统计排序滤波器</h3>
<ul>
<li>
<p>中值滤波器：处理单极、双极冲激噪声更好，也能有效降低某些随机噪声，丢失细节更少。</p>
</li>
<li>
<p>最大最小值滤波器：分别减少暗点和亮点，如胡椒噪声和盐粒噪声。可通过最大值滤波器削减胡椒噪声，通过最小值滤波器削减盐粒噪声。</p>
</li>
<li>
<p>中点滤波器：适合处理随机分布的噪声，如高斯噪声和均匀噪声。</p>
</li>
<li>
<p>修正阿尔法均值滤波器：适合处理多种混合噪声，如高斯噪声和椒盐噪声。</p>
</li>
</ul>
<h3 id="自适应滤波器">自适应滤波器</h3>
<ul>
<li>
<p>自适应局部降噪滤波器：与均值滤波器比结果更清晰。</p>
</li>
<li>
<p>自适应中值滤波器：平滑时保留图像细节。</p>
</li>
</ul>
<h1>滤波器</h1>
<h2 id="均值滤波器">均值滤波器</h2>
<h3 id="算术平均滤波器">算术平均滤波器</h3>
<p>算术均值滤波器：也是盒式滤波器，平滑图像中的局部变化，会降低噪声，也会模糊图像。表达式如下，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1523199999999998em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span> 为复原的图像， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{xy}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 表示中心为(x,y)、大小为m×n的矩形子图像窗口的一组坐标， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 为被污染的图像：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mi>m</mi><mi>n</mi></mrow></mfrac><munder><mo>∑</mo><mrow><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow></munder><mi>g</mi><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat f(x,y)=\frac{1} {mn}\sum_{(r,c)\in S_{xy} }g(r,c)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.859765em;vertical-align:-1.538325em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="mord mathdefault">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.808995em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">c</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.538325em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span></span></p>
<p>代码（Salt的相关代码见最后）：</p>
<p>相关函数：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">copyMakeBorder</span><span class="params">(InputArray src, OutputArray dst, <span class="type">int</span> top, <span class="type">int</span> bottom, <span class="type">int</span> left, <span class="type">int</span> right, <span class="type">int</span> borderType, <span class="type">const</span> Scalar&amp; value = Scalar())</span></span></span><br></pre></td></tr></table></figure></div>
<p>该函数用于扩充图像边界，参数如下：</p>
<ul>
<li>
<p>src：输入图像；</p>
</li>
<li>
<p>dst：输出与输入图像相同类型图像；</p>
</li>
<li>
<p>top、bottom、left、right：在图像的四个方向上扩充像素值；</p>
</li>
<li>
<p>borderType：边界类型。取值BORDER_CONSTANT为复制指定常量扩展边界；取值为BORDER_REPLICATE为自我复制扩展边界；取值为BORDER_REFLECT为通过镜像复制扩展边界；取值为BORDER_WRAP为复制对边像素扩展边界；</p>
</li>
<li>
<p>value：边界类型为BORDER_CONSTANT时表示边界值。</p>
</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Salt.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ArithmeticMeanFilter</span><span class="params">(cv::Mat input, cv::Mat &amp;output, <span class="type">int</span> m, <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	output = input.<span class="built_in">clone</span>();</span><br><span class="line">	<span class="comment">// 以镜像复制扩充边界</span></span><br><span class="line">	cv::<span class="built_in">copyMakeBorder</span>(input, input, (m - <span class="number">1</span>) / <span class="number">2</span>, (m - <span class="number">1</span>) / <span class="number">2</span>, (n - <span class="number">1</span>) / <span class="number">2</span>, (n - <span class="number">1</span>) / <span class="number">2</span>, cv::BORDER_REFLECT);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = (m - <span class="number">1</span>) / <span class="number">2</span>; i &lt; input.rows - (m - <span class="number">1</span>) / <span class="number">2</span>; i ++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = (n - <span class="number">1</span>) / <span class="number">2</span>; j &lt; input.cols - (n - <span class="number">1</span>) / <span class="number">2</span>; j ++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> x = -(m - <span class="number">1</span>) / <span class="number">2</span>; x &lt;= (m - <span class="number">1</span>) / <span class="number">2</span>; x++)</span><br><span class="line">				<span class="keyword">for</span> (<span class="type">int</span> y = -(n - <span class="number">1</span>) / <span class="number">2</span>; y &lt;= (n - <span class="number">1</span>) / <span class="number">2</span>; y ++)</span><br><span class="line">					sum += input.<span class="built_in">at</span>&lt;uchar&gt;(i + x, j + y);</span><br><span class="line">			<span class="comment">// 计算算术均值</span></span><br><span class="line">			output.<span class="built_in">at</span>&lt;uchar&gt;(i - (m - <span class="number">1</span>) / <span class="number">2</span>, j - (n - <span class="number">1</span>) / <span class="number">2</span>) = <span class="built_in">round</span>(sum / (m * n));</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat input = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>, <span class="number">0</span>);</span><br><span class="line">	cv::Mat output1, output2;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">Salt</span>(input, <span class="number">100000</span>);	<span class="comment">// 给图片添加10w个白色噪点（盐粒噪声）</span></span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, input);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 自实现方法</span></span><br><span class="line">	<span class="built_in">ArithmeticMeanFilter</span>(input, output1, <span class="number">7</span>, <span class="number">7</span>);</span><br><span class="line">	<span class="comment">// OpenCV盒式滤波器</span></span><br><span class="line">	cv::<span class="built_in">blur</span>(input, output2, cv::<span class="built_in">Size</span>(<span class="number">7</span>, <span class="number">7</span>));</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;after1&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;after1&quot;</span>, output1);</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;after2&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;after2&quot;</span>, output2);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b10_run.jpg" alt="算术平均滤波器效果"><figcaption>算术平均滤波器效果</figcaption></figure></p>
<h3 id="几何均值滤波器">几何均值滤波器</h3>
<p>几何均值滤波器：比算术均值滤波器相比丢失细节少。表达式如下，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1523199999999998em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span> 为复原的图像， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{xy}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 表示中心为(x,y)、大小为m×n的矩形子图像窗口的一组坐标， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 为被污染的图像：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mo fence="false">[</mo><munder><mo>∏</mo><mrow><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow></munder><mi>g</mi><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><msup><mo fence="false">]</mo><mfrac><mn>1</mn><mrow><mi>m</mi><mi>n</mi></mrow></mfrac></msup></mrow><annotation encoding="application/x-tex">\hat f(x,y)=\bigg[\prod_{(r,c)\in S_{xy} }g(r,c)\bigg]^{\frac {1} {mn} }
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.3322450000000003em;vertical-align:-1.538325em;"></span><span class="mord"><span class="delimsizing size3">[</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.808995em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">c</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.538325em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mord"><span class="mord"><span class="delimsizing size3">]</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.7939200000000002em;"><span style="top:-4.2029000000000005em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>代码（Salt的相关代码见最后）：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Salt.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">GeometricMeanFilter</span><span class="params">(cv::Mat input, cv::Mat &amp;output, <span class="type">int</span> m, <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	output = input.<span class="built_in">clone</span>();</span><br><span class="line">	<span class="comment">// 以镜像复制扩充边界</span></span><br><span class="line">	cv::<span class="built_in">copyMakeBorder</span>(input, input, (m - <span class="number">1</span>) / <span class="number">2</span>, (m - <span class="number">1</span>) / <span class="number">2</span>, (n - <span class="number">1</span>) / <span class="number">2</span>, (n - <span class="number">1</span>) / <span class="number">2</span>, cv::BORDER_REFLECT);</span><br><span class="line"></span><br><span class="line">	<span class="type">double</span> k = m * n;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = (m - <span class="number">1</span>) / <span class="number">2</span>; i &lt; input.rows - (m - <span class="number">1</span>) / <span class="number">2</span>; i ++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = (n - <span class="number">1</span>) / <span class="number">2</span>; j &lt; input.cols - (n - <span class="number">1</span>) / <span class="number">2</span>; j ++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">double</span> sum = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> x = -(m - <span class="number">1</span>) / <span class="number">2</span>; x &lt;= (m - <span class="number">1</span>) / <span class="number">2</span>; x++)</span><br><span class="line">				<span class="keyword">for</span> (<span class="type">int</span> y = -(n - <span class="number">1</span>) / <span class="number">2</span>; y &lt;= (n - <span class="number">1</span>) / <span class="number">2</span>; y ++)</span><br><span class="line">					sum += <span class="built_in">log10</span>(input.<span class="built_in">at</span>&lt;uchar&gt;(i + x, j + y) + <span class="number">0.1</span>);</span><br><span class="line">			<span class="comment">// 使用对数进行运算指数，避免数值过大</span></span><br><span class="line">			sum /= k;</span><br><span class="line">			output.<span class="built_in">at</span>&lt;uchar&gt;(i - (m - <span class="number">1</span>) / <span class="number">2</span>, j - (n - <span class="number">1</span>) / <span class="number">2</span>) = <span class="built_in">round</span>(<span class="built_in">pow</span>(<span class="number">10</span>, sum));</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat input = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>, <span class="number">0</span>);</span><br><span class="line">	cv::Mat output1, output2;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">Salt</span>(input, <span class="number">100000</span>);	<span class="comment">// 给图片添加10w个白色噪点（盐粒噪声）</span></span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, input);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 自实现方法</span></span><br><span class="line">	<span class="built_in">GeometricMeanFilter</span>(input, output1, <span class="number">7</span>, <span class="number">7</span>);</span><br><span class="line">	<span class="comment">// OpenCV盒式滤波器</span></span><br><span class="line">	cv::<span class="built_in">blur</span>(input, output2, cv::<span class="built_in">Size</span>(<span class="number">7</span>, <span class="number">7</span>));</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;几何均值滤波器&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;几何均值滤波器&quot;</span>, output1);</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;算术均值滤波器&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;算术均值滤波器&quot;</span>, output2);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b10_run1.jpg" alt="算术均值滤波器和几何均值滤波器对比"><figcaption>算术均值滤波器和几何均值滤波器对比</figcaption></figure></p>
<h3 id="谐波均值滤波器">谐波均值滤波器</h3>
<p>谐波平均滤波器：适合处理高斯噪声及盐粒噪声，但不能处理胡椒噪声。表达式如下，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1523199999999998em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span> 为复原的图像， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{xy}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 表示中心为(x,y)、大小为m×n的矩形子图像窗口的一组坐标， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 为被污染的图像：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>m</mi><mi>n</mi></mrow><mrow><munder><mo>∑</mo><mrow><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow></munder><mfrac><mn>1</mn><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow></mfrac></mrow><annotation encoding="application/x-tex">\hat f(x,y)=\frac{mn} {\sum_{(r,c)\in S_{xy} }\frac{1} {g(r,c)} }
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.362668em;vertical-align:-1.255108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.264892em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.22528999999999982em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">c</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49703em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">c</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.255108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>代码（Salt的相关代码见最后）：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Salt.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">HarmonicMeanFilter</span><span class="params">(cv::Mat input, cv::Mat &amp;output, <span class="type">int</span> m, <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	output = input.<span class="built_in">clone</span>();</span><br><span class="line">	<span class="comment">// 以镜像复制扩充边界</span></span><br><span class="line">	cv::<span class="built_in">copyMakeBorder</span>(input, input, (m - <span class="number">1</span>) / <span class="number">2</span>, (m - <span class="number">1</span>) / <span class="number">2</span>, (n - <span class="number">1</span>) / <span class="number">2</span>, (n - <span class="number">1</span>) / <span class="number">2</span>, cv::BORDER_REFLECT);</span><br><span class="line"></span><br><span class="line">	<span class="type">double</span> k = m * n;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = (m - <span class="number">1</span>) / <span class="number">2</span>; i &lt; input.rows - (m - <span class="number">1</span>) / <span class="number">2</span>; i ++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = (n - <span class="number">1</span>) / <span class="number">2</span>; j &lt; input.cols - (n - <span class="number">1</span>) / <span class="number">2</span>; j ++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">double</span> sum = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> x = -(m - <span class="number">1</span>) / <span class="number">2</span>; x &lt;= (m - <span class="number">1</span>) / <span class="number">2</span>; x++)</span><br><span class="line">				<span class="keyword">for</span> (<span class="type">int</span> y = -(n - <span class="number">1</span>) / <span class="number">2</span>; y &lt;= (n - <span class="number">1</span>) / <span class="number">2</span>; y ++)</span><br><span class="line">					sum += <span class="number">1.0</span> / (input.<span class="built_in">at</span>&lt;uchar&gt;(i + x, j + y) + <span class="number">0.1</span>);</span><br><span class="line">			sum = k / sum;</span><br><span class="line">			output.<span class="built_in">at</span>&lt;uchar&gt;(i - (m - <span class="number">1</span>) / <span class="number">2</span>, j - (n - <span class="number">1</span>) / <span class="number">2</span>) = sum;</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat input = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>, <span class="number">0</span>);</span><br><span class="line">	cv::Mat output1, output2;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">Salt</span>(input, <span class="number">100000</span>);	<span class="comment">// 给图片添加10w个白色噪点（盐粒噪声）</span></span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, input);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 自实现方法</span></span><br><span class="line">	<span class="built_in">HarmonicMeanFilter</span>(input, output1, <span class="number">7</span>, <span class="number">7</span>);</span><br><span class="line">	<span class="comment">// OpenCV盒式滤波器</span></span><br><span class="line">	cv::<span class="built_in">blur</span>(input, output2, cv::<span class="built_in">Size</span>(<span class="number">7</span>, <span class="number">7</span>));</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;谐波均值滤波器&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;谐波均值滤波器&quot;</span>, output1);</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;算术均值滤波器&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;算术均值滤波器&quot;</span>, output2);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b10_run2.jpg" alt="谐波均值滤波器和算术均值滤波器比较"><figcaption>谐波均值滤波器和算术均值滤波器比较</figcaption></figure></p>
<h3 id="反谐波均值滤波器">反谐波均值滤波器</h3>
<p>反谐波均值滤波器：调节阶数有不同的效果，适用于降低或消除椒盐噪声，当阶数Q为正时，可消除胡椒噪声；当阶数Q为负时，可消除盐粒噪声；Q=0时简化为算术平均滤波器；Q=-1时简化为谐波平均滤波器。表达式如下，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1523199999999998em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span> 为复原的图像， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{xy}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 表示中心为(x,y)、大小为m×n的矩形子图像窗口的一组坐标， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 为被污染的图像：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><munder><mo>∑</mo><mrow><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow></munder><mi>g</mi><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><msup><mo stretchy="false">)</mo><mrow><mi>Q</mi><mo>+</mo><mn>1</mn></mrow></msup></mrow><mrow><munder><mo>∑</mo><mrow><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow></munder><mi>g</mi><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><msup><mo stretchy="false">)</mo><mi>Q</mi></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\hat f(x,y)=\frac{\sum_{(r,c)\in S_{xy} }g(r,c)^{Q+1} } {\sum_{(r,c)\in S_{xy} }g(r,c)^Q}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.911391em;vertical-align:-1.18303em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7283609999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.22528999999999982em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">c</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49703em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.767331em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">Q</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.8870299999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.22528999999999982em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">c</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49703em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">Q</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.18303em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>代码（Salt的相关代码见最后）：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Salt.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AntiharmonicAveragingFilter</span><span class="params">(cv::Mat input, cv::Mat &amp;output, <span class="type">int</span> m, <span class="type">int</span> n, <span class="type">int</span> q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	output = input.<span class="built_in">clone</span>();</span><br><span class="line">	<span class="comment">// 以镜像复制扩充边界</span></span><br><span class="line">	cv::<span class="built_in">copyMakeBorder</span>(input, input, (m - <span class="number">1</span>) / <span class="number">2</span>, (m - <span class="number">1</span>) / <span class="number">2</span>, (n - <span class="number">1</span>) / <span class="number">2</span>, (n - <span class="number">1</span>) / <span class="number">2</span>, cv::BORDER_REFLECT);</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = (m - <span class="number">1</span>) / <span class="number">2</span>; i &lt; input.rows - (m - <span class="number">1</span>) / <span class="number">2</span>; i ++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = (n - <span class="number">1</span>) / <span class="number">2</span>; j &lt; input.cols - (n - <span class="number">1</span>) / <span class="number">2</span>; j ++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">double</span> sum1 = <span class="number">0</span>, sum2 = <span class="number">0</span>, sum;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> x = -(m - <span class="number">1</span>) / <span class="number">2</span>; x &lt;= (m - <span class="number">1</span>) / <span class="number">2</span>; x++)</span><br><span class="line">				<span class="keyword">for</span> (<span class="type">int</span> y = -(n - <span class="number">1</span>) / <span class="number">2</span>; y &lt;= (n - <span class="number">1</span>) / <span class="number">2</span>; y ++)</span><br><span class="line">				&#123;</span><br><span class="line">					sum1 += <span class="built_in">pow</span>(input.<span class="built_in">at</span>&lt;uchar&gt;(i + x, j + y), q + <span class="number">1</span>);</span><br><span class="line">					sum2 += <span class="built_in">pow</span>(input.<span class="built_in">at</span>&lt;uchar&gt;(i + x, j + y), q);</span><br><span class="line">				&#125;</span><br><span class="line">			sum = sum1 / sum2;</span><br><span class="line">			output.<span class="built_in">at</span>&lt;uchar&gt;(i - (m - <span class="number">1</span>) / <span class="number">2</span>, j - (n - <span class="number">1</span>) / <span class="number">2</span>) = cv::<span class="built_in">saturate_cast</span>&lt;uchar&gt;(sum);</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat input = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>, <span class="number">0</span>);</span><br><span class="line">	cv::Mat output1, output2;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">Salt</span>(input, <span class="number">100000</span>);	<span class="comment">// 给图片添加10w个白色噪点（盐粒噪声）</span></span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, input);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 自实现方法</span></span><br><span class="line">	<span class="built_in">AntiharmonicAveragingFilter</span>(input, output1, <span class="number">7</span>, <span class="number">7</span>, <span class="number">2</span>);</span><br><span class="line">	<span class="built_in">AntiharmonicAveragingFilter</span>(input, output2, <span class="number">7</span>, <span class="number">7</span>, <span class="number">-2</span>);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;反谐波均值滤波器：Q=2&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;反谐波均值滤波器：Q=2&quot;</span>, output1);</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;反谐波均值滤波器：Q=-2&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;反谐波均值滤波器：Q=-2&quot;</span>, output2);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b10_run3.jpg" alt="反谐波均值滤波器"><figcaption>反谐波均值滤波器</figcaption></figure></p>
<hr>
<div class="highlight-container" data-rel="H"><figure class="iseeu highlight h"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;random&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Salt</span><span class="params">(cv::Mat input, <span class="type">int</span> n)</span>;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Salt.cpp</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Salt.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Salt</span><span class="params">(cv::Mat input, <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	std::default_random_engine generator;</span><br><span class="line">	std::uniform_int_distribution&lt;<span class="type">int</span>&gt;<span class="built_in">row</span>(<span class="number">0</span>, input.rows - <span class="number">1</span>);</span><br><span class="line">	std::uniform_int_distribution&lt;<span class="type">int</span>&gt;<span class="built_in">col</span>(<span class="number">0</span>, input.cols - <span class="number">1</span>);</span><br><span class="line">	<span class="type">int</span> i, j;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; n; k ++)</span><br><span class="line">	&#123;</span><br><span class="line">		i = <span class="built_in">row</span>(generator);</span><br><span class="line">		j = <span class="built_in">col</span>(generator);</span><br><span class="line">		<span class="keyword">if</span> (input.<span class="built_in">channels</span>() == <span class="number">1</span>)</span><br><span class="line">			input.<span class="built_in">at</span>&lt;uchar&gt;(i, j) = <span class="number">255</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (input.<span class="built_in">channels</span>() == <span class="number">3</span>)</span><br><span class="line">			input.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i, j) = cv::<span class="built_in">Vec3b</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h2 id="统计排序滤波器">统计排序滤波器</h2>
<h3 id="中值滤波器">中值滤波器</h3>
<p>处理单极、双极冲激噪声更好，也能有效降低某些随机噪声，丢失细节更少。表达式如下，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1523199999999998em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span> 为复原的图像， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{xy}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 是中心为(x,y)的子图像， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 为被污染的图像：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>m</mi><mi>e</mi><mi>d</mi><mi>i</mi><mi>a</mi><msub><mi>n</mi><mrow><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow></msub><mo stretchy="false">{</mo><mi>g</mi><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\hat f(x,y)=median_{(r,c)\in S_{xy} }\{g(r,c)\}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1275199999999999em;vertical-align:-0.3775199999999999em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">e</span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34479999999999994em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">c</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3775199999999999em;"><span></span></span></span></span></span></span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mclose">}</span></span></span></span></span></p>
<p>代码实现：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Salt.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MedianFilter</span><span class="params">(cv::Mat input, cv::Mat &amp;output, <span class="type">int</span> m, <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	output = input.<span class="built_in">clone</span>();</span><br><span class="line">	<span class="type">int</span> num = m * n;</span><br><span class="line">	<span class="function">std::vector&lt;uchar&gt; <span class="title">arry</span><span class="params">(num)</span></span>;</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">copyMakeBorder</span>(input, input, (m - <span class="number">1</span>) / <span class="number">2</span>, (m - <span class="number">1</span>) / <span class="number">2</span>, (n - <span class="number">1</span>) / <span class="number">2</span>, (n - <span class="number">1</span>) / <span class="number">2</span>, cv::BORDER_REFLECT);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = (m - <span class="number">1</span>) / <span class="number">2</span>; i &lt; input.rows - (m - <span class="number">1</span>) / <span class="number">2</span>; i ++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = (n - <span class="number">1</span>) / <span class="number">2</span>; j &lt; input.cols - (n - <span class="number">1</span>) / <span class="number">2</span>; j ++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> h = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> x = -(m - <span class="number">1</span>) / <span class="number">2</span>; x &lt;= (m - <span class="number">1</span>) / <span class="number">2</span>; x++)</span><br><span class="line">				<span class="keyword">for</span> (<span class="type">int</span> y = -(n - <span class="number">1</span>) / <span class="number">2</span>; y &lt;= (n - <span class="number">1</span>) / <span class="number">2</span>; y ++)</span><br><span class="line">				&#123;</span><br><span class="line">					arry[h] = input.<span class="built_in">at</span>&lt;uchar&gt;(i + x, j + y);</span><br><span class="line">					h += <span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			std::<span class="built_in">sort</span>(arry.<span class="built_in">begin</span>(), arry.<span class="built_in">end</span>());</span><br><span class="line">			output.<span class="built_in">at</span>&lt;uchar&gt;(i - (m - <span class="number">1</span>) / <span class="number">2</span>, j - (n - <span class="number">1</span>) / <span class="number">2</span>) = arry[(num - <span class="number">1</span>) / <span class="number">2</span>];</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat input = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>, <span class="number">0</span>);</span><br><span class="line">	cv::Mat output1, output2;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">Salt</span>(input, <span class="number">100000</span>);	<span class="comment">// 给图片添加10w个白色噪点（盐粒噪声）</span></span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, input);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 自实现中值滤波器</span></span><br><span class="line">	<span class="built_in">MedianFilter</span>(input, output1, <span class="number">7</span>, <span class="number">7</span>);</span><br><span class="line">	<span class="comment">// OpenCV自带中值滤波器</span></span><br><span class="line">	cv::<span class="built_in">medianBlur</span>(input, output2, <span class="number">7</span>);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;自实现中值滤波器&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;自实现中值滤波器&quot;</span>, output1);</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;OpenCV自带中值滤波器&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;OpenCV自带中值滤波器&quot;</span>, output2);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b11_run1.jpg" alt="中值滤波器"><figcaption>中值滤波器</figcaption></figure></p>
<h3 id="最大值滤波器">最大值滤波器</h3>
<p>滤波窗口的最大值作为滤波结果，可通过最大值滤波器削减胡椒噪声，也可削弱明色区域相邻的暗色区域。其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1523199999999998em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span> 为复原的图像， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{xy}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 是中心为(x,y)的子图像， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 为被污染的图像：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo><mi>max</mi><mo>⁡</mo></mo><mrow><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow></munder><mo stretchy="false">{</mo><mi>g</mi><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\hat f(x,y)=\max_{(r,c)\in S_{xy} }\{g(r,c)\}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.7383199999999999em;vertical-align:-0.9883199999999999em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43055999999999994em;"><span style="top:-2.309em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">c</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9883199999999999em;"><span></span></span></span></span></span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mclose">}</span></span></span></span></span></p>
<p>代码实现：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Salt.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MaxFilter</span><span class="params">(cv::Mat input, cv::Mat &amp;output, <span class="type">int</span> m, <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	output = input.<span class="built_in">clone</span>();</span><br><span class="line">	<span class="type">int</span> num = m * n;</span><br><span class="line">	<span class="function">std::vector&lt;uchar&gt; <span class="title">arry</span><span class="params">(num)</span></span>;</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">copyMakeBorder</span>(input, input, (m - <span class="number">1</span>) / <span class="number">2</span>, (m - <span class="number">1</span>) / <span class="number">2</span>, (n - <span class="number">1</span>) / <span class="number">2</span>, (n - <span class="number">1</span>) / <span class="number">2</span>, cv::BORDER_REFLECT);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = (m - <span class="number">1</span>) / <span class="number">2</span>; i &lt; input.rows - (m - <span class="number">1</span>) / <span class="number">2</span>; i ++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = (n - <span class="number">1</span>) / <span class="number">2</span>; j &lt; input.cols - (n - <span class="number">1</span>) / <span class="number">2</span>; j ++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> h = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> x = -(m - <span class="number">1</span>) / <span class="number">2</span>; x &lt;= (m - <span class="number">1</span>) / <span class="number">2</span>; x++)</span><br><span class="line">				<span class="keyword">for</span> (<span class="type">int</span> y = -(n - <span class="number">1</span>) / <span class="number">2</span>; y &lt;= (n - <span class="number">1</span>) / <span class="number">2</span>; y ++)</span><br><span class="line">				&#123;</span><br><span class="line">					arry[h] = input.<span class="built_in">at</span>&lt;uchar&gt;(i + x, j + y);</span><br><span class="line">					h += <span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			std::<span class="built_in">sort</span>(arry.<span class="built_in">begin</span>(), arry.<span class="built_in">end</span>());</span><br><span class="line">			output.<span class="built_in">at</span>&lt;uchar&gt;(i - (m - <span class="number">1</span>) / <span class="number">2</span>, j - (n - <span class="number">1</span>) / <span class="number">2</span>) = arry[num - <span class="number">1</span>];</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat input = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>, <span class="number">0</span>);</span><br><span class="line">	cv::Mat output;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">Salt</span>(input, <span class="number">100000</span>);	<span class="comment">// 给图片添加10w个黑色噪点（胡椒噪声）</span></span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, input);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">MaxFilter</span>(input, output, <span class="number">7</span>, <span class="number">7</span>);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;最大值滤波器&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;最大值滤波器&quot;</span>, output);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b11_run2.jpg" alt="最大值滤波器"><figcaption>最大值滤波器</figcaption></figure></p>
<h3 id="最小值滤波器">最小值滤波器</h3>
<p>滤波窗口的最小值作为滤波结果，可通过最小值滤波器削减盐粒噪声，也可削弱暗色区域相邻的明色区域。表达式如下，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1523199999999998em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span> 为复原的图像， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{xy}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 是中心为(x,y)的子图像， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 为被污染的图像：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo><mi>min</mi><mo>⁡</mo></mo><mrow><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow></munder><mo stretchy="false">{</mo><mi>g</mi><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\hat f(x,y)=\min_{(r,c)\in S_{xy} }\{g(r,c)\}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.7383199999999999em;vertical-align:-0.9883199999999999em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.309em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">c</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9883199999999999em;"><span></span></span></span></span></span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mclose">}</span></span></span></span></span></p>
<p>代码实现：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Salt.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MinFilter</span><span class="params">(cv::Mat input, cv::Mat &amp;output, <span class="type">int</span> m, <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	output = input.<span class="built_in">clone</span>();</span><br><span class="line">	<span class="type">int</span> num = m * n;</span><br><span class="line">	<span class="function">std::vector&lt;uchar&gt; <span class="title">arry</span><span class="params">(num)</span></span>;</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">copyMakeBorder</span>(input, input, (m - <span class="number">1</span>) / <span class="number">2</span>, (m - <span class="number">1</span>) / <span class="number">2</span>, (n - <span class="number">1</span>) / <span class="number">2</span>, (n - <span class="number">1</span>) / <span class="number">2</span>, cv::BORDER_REFLECT);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = (m - <span class="number">1</span>) / <span class="number">2</span>; i &lt; input.rows - (m - <span class="number">1</span>) / <span class="number">2</span>; i ++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = (n - <span class="number">1</span>) / <span class="number">2</span>; j &lt; input.cols - (n - <span class="number">1</span>) / <span class="number">2</span>; j ++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> h = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> x = -(m - <span class="number">1</span>) / <span class="number">2</span>; x &lt;= (m - <span class="number">1</span>) / <span class="number">2</span>; x++)</span><br><span class="line">				<span class="keyword">for</span> (<span class="type">int</span> y = -(n - <span class="number">1</span>) / <span class="number">2</span>; y &lt;= (n - <span class="number">1</span>) / <span class="number">2</span>; y ++)</span><br><span class="line">				&#123;</span><br><span class="line">					arry[h] = input.<span class="built_in">at</span>&lt;uchar&gt;(i + x, j + y);</span><br><span class="line">					h += <span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			std::<span class="built_in">sort</span>(arry.<span class="built_in">begin</span>(), arry.<span class="built_in">end</span>());</span><br><span class="line">			output.<span class="built_in">at</span>&lt;uchar&gt;(i - (m - <span class="number">1</span>) / <span class="number">2</span>, j - (n - <span class="number">1</span>) / <span class="number">2</span>) = arry[<span class="number">0</span>];</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat input = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>, <span class="number">0</span>);</span><br><span class="line">	cv::Mat output;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">Salt</span>(input, <span class="number">100000</span>);	<span class="comment">// 给图片添加10w个白色噪点（盐粒噪声）</span></span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, input);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">MinFilter</span>(input, output, <span class="number">7</span>, <span class="number">7</span>);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;最小值滤波器&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;最小值滤波器&quot;</span>, output);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b11_run3.jpg" alt="最小值滤波器"><figcaption>最小值滤波器</figcaption></figure></p>
<h3 id="中点滤波器">中点滤波器</h3>
<p>滤波窗口的最大值和最小值的均值作为滤波结果，适合处理随机分布的噪声，如高斯噪声和均匀噪声。表达式如下，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1523199999999998em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span> 为复原的图像， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{xy}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 是中心为(x,y)的子图像， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 为被污染的图像：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo fence="false">[</mo><munder><mo><mi>max</mi><mo>⁡</mo></mo><mrow><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow></munder><mo stretchy="false">{</mo><mi>g</mi><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mo>+</mo><munder><mo><mi>min</mi><mo>⁡</mo></mo><mrow><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow></munder><mo stretchy="false">{</mo><mi>g</mi><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mo fence="false">]</mo></mrow><annotation encoding="application/x-tex">\hat f(x,y)=\frac 12\bigg[\max_{(r,c)\in S_{xy} }\{g(r,c)\}+\min_{(r,c)\in S_{xy} }\{g(r,c)\}\bigg]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.43832em;vertical-align:-0.9883199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord">2</span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord">1</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="delimsizing size3">[</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43055999999999994em;"><span style="top:-2.309em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">c</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9883199999999999em;"><span></span></span></span></span></span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.43832em;vertical-align:-0.9883199999999999em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.309em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">c</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9883199999999999em;"><span></span></span></span></span></span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mclose">}</span><span class="mord"><span class="delimsizing size3">]</span></span></span></span></span></span></p>
<p>代码实现：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Salt.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MidPointFilter</span><span class="params">(cv::Mat input, cv::Mat &amp;output, <span class="type">int</span> m, <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	output = input.<span class="built_in">clone</span>();</span><br><span class="line">	<span class="type">int</span> num = m * n;</span><br><span class="line">	<span class="function">std::vector&lt;uchar&gt; <span class="title">arry</span><span class="params">(num)</span></span>;</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">copyMakeBorder</span>(input, input, (m - <span class="number">1</span>) / <span class="number">2</span>, (m - <span class="number">1</span>) / <span class="number">2</span>, (n - <span class="number">1</span>) / <span class="number">2</span>, (n - <span class="number">1</span>) / <span class="number">2</span>, cv::BORDER_REFLECT);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = (m - <span class="number">1</span>) / <span class="number">2</span>; i &lt; input.rows - (m - <span class="number">1</span>) / <span class="number">2</span>; i ++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = (n - <span class="number">1</span>) / <span class="number">2</span>; j &lt; input.cols - (n - <span class="number">1</span>) / <span class="number">2</span>; j ++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> h = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> x = -(m - <span class="number">1</span>) / <span class="number">2</span>; x &lt;= (m - <span class="number">1</span>) / <span class="number">2</span>; x++)</span><br><span class="line">				<span class="keyword">for</span> (<span class="type">int</span> y = -(n - <span class="number">1</span>) / <span class="number">2</span>; y &lt;= (n - <span class="number">1</span>) / <span class="number">2</span>; y ++)</span><br><span class="line">				&#123;</span><br><span class="line">					arry[h] = input.<span class="built_in">at</span>&lt;uchar&gt;(i + x, j + y);</span><br><span class="line">					h += <span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			std::<span class="built_in">sort</span>(arry.<span class="built_in">begin</span>(), arry.<span class="built_in">end</span>());</span><br><span class="line">			output.<span class="built_in">at</span>&lt;uchar&gt;(i - (m - <span class="number">1</span>) / <span class="number">2</span>, j - (n - <span class="number">1</span>) / <span class="number">2</span>) = <span class="built_in">round</span>((arry[<span class="number">0</span>] + arry[num - <span class="number">1</span>]) / <span class="number">2</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat input = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>, <span class="number">0</span>);</span><br><span class="line">	cv::Mat output;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">Salt</span>(input, <span class="number">100000</span>);	<span class="comment">// 给图片添加10w个白色噪点（盐粒噪声）</span></span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, input);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">MidPointFilter</span>(input, output, <span class="number">7</span>, <span class="number">7</span>);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;中点滤波器&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;中点滤波器&quot;</span>, output);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><em>不太适合盐粒噪声</em></p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b11_run4.jpg" alt="中值滤波器"><figcaption>中值滤波器</figcaption></figure></p>
<h3 id="修正阿尔法均值滤波器">修正阿尔法均值滤波器</h3>
<p>假设要在邻域 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{xy}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 内删除 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(r,c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span> 的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span> 个最低灰度值和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span> 个最高灰度值。令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(r,c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span> 表示S中剩下的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>n</mi><mo>−</mo><mn>2</mn><mi>d</mi></mrow><annotation encoding="application/x-tex">mn-2d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathdefault">d</span></span></span></span> 个像素，通过平均这些剩余像素所形成的滤波器，称为修正阿尔法均值滤波器。</p>
<p>当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">d=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 时简化为算术平均滤波器，当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo>=</mo><mo stretchy="false">(</mo><mi>m</mi><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">d=(mn-1)/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span></span></span></span> 时变成中值滤波器，当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span> 为其他值时适合处理多种混合噪声，如高斯噪声和椒盐噪声。</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mi>m</mi><mi>n</mi><mo>−</mo><mn>2</mn><mi>d</mi></mrow></mfrac><munder><mo>∑</mo><mrow><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow></munder><msub><mi>g</mi><mi>R</mi></msub><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat f(x,y)=\frac{1} {mn-2d}\sum_{(r,c)\in S_{xy} }g_R(r,c)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.859765em;vertical-align:-1.538325em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mord mathdefault">d</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.808995em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">c</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.538325em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span></span></p>
<p>代码实现：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Salt.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ModifiedAlphaMeanFilter</span><span class="params">(cv::Mat input, cv::Mat &amp;output, <span class="type">int</span> m, <span class="type">int</span> n, <span class="type">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	output = input.<span class="built_in">clone</span>();</span><br><span class="line">	<span class="type">int</span> num = m * n;</span><br><span class="line">	<span class="function">std::vector&lt;uchar&gt; <span class="title">arry</span><span class="params">(num)</span></span>;</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">copyMakeBorder</span>(input, input, (m - <span class="number">1</span>) / <span class="number">2</span>, (m - <span class="number">1</span>) / <span class="number">2</span>, (n - <span class="number">1</span>) / <span class="number">2</span>, (n - <span class="number">1</span>) / <span class="number">2</span>, cv::BORDER_REFLECT);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = (m - <span class="number">1</span>) / <span class="number">2</span>; i &lt; input.rows - (m - <span class="number">1</span>) / <span class="number">2</span>; i ++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = (n - <span class="number">1</span>) / <span class="number">2</span>; j &lt; input.cols - (n - <span class="number">1</span>) / <span class="number">2</span>; j ++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> h = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> x = -(m - <span class="number">1</span>) / <span class="number">2</span>; x &lt;= (m - <span class="number">1</span>) / <span class="number">2</span>; x ++)</span><br><span class="line">				<span class="keyword">for</span> (<span class="type">int</span> y = -(n - <span class="number">1</span>) / <span class="number">2</span>; y &lt;= (n - <span class="number">1</span>) / <span class="number">2</span>; y ++)</span><br><span class="line">				&#123;</span><br><span class="line">					arry[h] = input.<span class="built_in">at</span>&lt;uchar&gt;(i + x, j + y);</span><br><span class="line">					h += <span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			std::<span class="built_in">sort</span>(arry.<span class="built_in">begin</span>(), arry.<span class="built_in">end</span>());</span><br><span class="line">			<span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> k = d; k &lt; num - d - <span class="number">1</span>; k ++)</span><br><span class="line">				sum += arry[k];</span><br><span class="line">			output.<span class="built_in">at</span>&lt;uchar&gt;(i - (m - <span class="number">1</span>) / <span class="number">2</span>, j - (n - <span class="number">1</span>) / <span class="number">2</span>) = <span class="built_in">round</span>(sum / (num - <span class="number">2</span> * d));</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat input = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>, <span class="number">0</span>);</span><br><span class="line">	cv::Mat output1, output2;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">Salt</span>(input, <span class="number">100000</span>);	<span class="comment">// 给图片添加10w个白色噪点（盐粒噪声）</span></span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, input);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">ModifiedAlphaMeanFilter</span>(input, output1, <span class="number">7</span>, <span class="number">7</span>, <span class="number">3</span>);</span><br><span class="line">	<span class="built_in">ModifiedAlphaMeanFilter</span>(input, output2, <span class="number">7</span>, <span class="number">7</span>, <span class="number">9</span>);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;修正阿尔法均值滤波器：d=3&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;修正阿尔法均值滤波器：d=3&quot;</span>, output1);</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;修正阿尔法均值滤波器：d=9&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;修正阿尔法均值滤波器：d=9&quot;</span>, output2);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b11_run5.jpg" alt="修正阿尔法均值滤波器"><figcaption>修正阿尔法均值滤波器</figcaption></figure></p>
<hr>
<div class="highlight-container" data-rel="H"><figure class="iseeu highlight h"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Salt.h</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;random&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Salt</span><span class="params">(cv::Mat input, <span class="type">int</span> n)</span>;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Salt.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Salt</span><span class="params">(cv::Mat input, <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	std::default_random_engine generator;</span><br><span class="line">	std::uniform_int_distribution&lt;<span class="type">int</span>&gt;<span class="built_in">row</span>(<span class="number">0</span>, input.rows - <span class="number">1</span>);</span><br><span class="line">	std::uniform_int_distribution&lt;<span class="type">int</span>&gt;<span class="built_in">col</span>(<span class="number">0</span>, input.cols - <span class="number">1</span>);</span><br><span class="line">	<span class="type">int</span> i, j;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; n; k ++)</span><br><span class="line">	&#123;</span><br><span class="line">		i = <span class="built_in">row</span>(generator);</span><br><span class="line">		j = <span class="built_in">col</span>(generator);</span><br><span class="line">		<span class="keyword">if</span> (input.<span class="built_in">channels</span>() == <span class="number">1</span>)</span><br><span class="line">			input.<span class="built_in">at</span>&lt;uchar&gt;(i, j) = <span class="number">255</span>; <span class="comment">//试验最大值滤波器时取为0</span></span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (input.<span class="built_in">channels</span>() == <span class="number">3</span>)</span><br><span class="line">			input.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i, j) = cv::<span class="built_in">Vec3b</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>); <span class="comment">//试验最大值滤波器时取为(0,0,0)</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h2 id="自适应滤波器">自适应滤波器</h2>
<h3 id="自适应局部降噪滤波器">自适应局部降噪滤波器</h3>
<p>滤波器对中心(x,y)的一个邻域 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{xy}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 进行操作，</p>
<ul>
<li>
<p>噪声图像g(x,y)，噪声方差 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>σ</mi><mi>η</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\sigma_\eta^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.197216em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">η</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span> ；</p>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{xy}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 中像素的平均灰度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi>z</mi><mo stretchy="true">‾</mo></mover><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></msub></mrow><annotation encoding="application/x-tex">\overline{z}_{S_{xy} }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.97788em;vertical-align:-0.34731999999999996em;"></span><span class="mord"><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.63056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.55056em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833100000000004em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span></span></span></span> ， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{xy}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 中像素灰度的局部方差 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>σ</mi><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\sigma^2_{S_{xy} }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2867589999999998em;vertical-align:-0.472651em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999998em;"><span style="top:-2.424669em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.472651em;"><span></span></span></span></span></span></span></span></span></span> ；</p>
</li>
</ul>
<p>希望滤波器满足：</p>
<ol>
<li>
<p>噪声为0时，(x,y)处的值g等于f。若噪声图像方差 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>σ</mi><mi>η</mi><mn>2</mn></msubsup><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\sigma^2_\eta=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.197216em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">η</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> ，则滤波器仅返回(x,y)处的值g。</p>
</li>
<li>
<p>高局部方差通常与边缘相关，且应保留这些边缘。若局部方差 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>σ</mi><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\sigma^2_{S_{xy} }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2867589999999998em;vertical-align:-0.472651em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999998em;"><span style="top:-2.424669em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.472651em;"><span></span></span></span></span></span></span></span></span></span> 与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>σ</mi><mi>η</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\sigma_\eta^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.197216em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">η</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span> 高度相关，则滤波器返回(x,y)处一个接近于g的值。</p>
</li>
<li>
<p>当局部区域的性质与整个图像的性质相同时，则两个方差相等，滤波器返回 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{xy}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 中像素的算术平均值，平均运算降低局部噪声。</p>
</li>
</ol>
<p>处理步骤：</p>
<ol>
<li>
<p>计算噪声图像方差 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>σ</mi><mi>η</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\sigma^2_\eta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.197216em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">η</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span> ；</p>
</li>
<li>
<p>计算滤波器窗口内像素的均值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><msub><mi>S</mi><mrow><mi>s</mi><mi>y</mi></mrow></msub></msub></mrow><annotation encoding="application/x-tex">z_{S_{sy} }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778799999999999em;vertical-align:-0.34731999999999996em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833100000000004em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span></span></span></span> 和方差 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>σ</mi><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\sigma^2_{S_{xy} }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2867589999999998em;vertical-align:-0.472651em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999998em;"><span style="top:-2.424669em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.472651em;"><span></span></span></span></span></span></span></span></span></span> ；</p>
</li>
<li>
<p>利用下式计算：</p>
</li>
</ol>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>−</mo><mfrac><msubsup><mi>σ</mi><mi>η</mi><mn>2</mn></msubsup><msubsup><mi>σ</mi><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub><mn>2</mn></msubsup></mfrac><mo fence="false">[</mo><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>−</mo><mover accent="true"><msub><mi>z</mi><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></msub><mo stretchy="true">‾</mo></mover><mo fence="false">]</mo><mo separator="true">,</mo><mfrac><msubsup><mi>σ</mi><mi>η</mi><mn>2</mn></msubsup><msubsup><mi>σ</mi><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub><mn>2</mn></msubsup></mfrac><mo>≤</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\hat{f}(x,y)=g(x,y)-\frac{\sigma^2_{\eta} } {\sigma^2_{S_{xy} }}\big[g(x,y)-\overline{z_{S_{xy} }}\big],\frac{\sigma^2_{\eta} } {\sigma^2_{S_{xy} }}\leq1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.7640670000000003em;vertical-align:-1.176851em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5872160000000002em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.795908em;"><span style="top:-2.406469em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4908509999999999em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.773108em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">η</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.176851em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="delimsizing size1">[</span></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.7640670000000003em;vertical-align:-1.176851em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.63056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833100000000004em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.55056em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span><span class="mord"><span class="delimsizing size1">]</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5872160000000002em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.795908em;"><span style="top:-2.406469em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.05764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4908509999999999em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.773108em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">η</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.176851em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p>
<p>代码：</p>
<p>涉及OpenCV函数：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">meanStdDev</span><span class="params">(InputArray src, OutputArray mean, OutputArray stddev, InputArray mask=noArray())</span></span>;</span><br></pre></td></tr></table></figure></div>
<p>参数分别为：</p>
<ul>
<li>
<p>src：输入矩阵</p>
</li>
<li>
<p>mean：输出均值</p>
</li>
<li>
<p>stddev：输出标准差</p>
</li>
<li>
<p>mask：可选参数，掩码</p>
</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加高斯噪声</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">GaussianNoise</span><span class="params">(cv::Mat input, cv::Mat &amp;output)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::RNG rng;</span><br><span class="line">	cv::Mat noice = input.<span class="built_in">clone</span>();</span><br><span class="line">	output = input.<span class="built_in">clone</span>();</span><br><span class="line">	rng.<span class="built_in">fill</span>(noice, cv::RNG::NORMAL, <span class="number">10</span>, <span class="number">20</span>);	<span class="comment">// 使用NORMAL参数添加高斯噪声</span></span><br><span class="line">	output = input + noice;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AdaptiveLocalNoiseReductionFilter</span><span class="params">(cv::Mat input, cv::Mat &amp;output, <span class="type">int</span> m, <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	output = input.<span class="built_in">clone</span>();</span><br><span class="line">	<span class="function">cv::Mat <span class="title">arry</span><span class="params">(<span class="number">1</span>, m * n, CV_8U)</span></span>;	<span class="comment">// 局部矩阵</span></span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">copyMakeBorder</span>(input, input, (m - <span class="number">1</span>) / <span class="number">2</span>, (m - <span class="number">1</span>) / <span class="number">2</span>, (n - <span class="number">1</span>) / <span class="number">2</span>, (n - <span class="number">1</span>) / <span class="number">2</span>, cv::BORDER_REFLECT);</span><br><span class="line"></span><br><span class="line">	cv::Mat mean1, stddev1, mean2, stddev2;</span><br><span class="line">	cv::<span class="built_in">meanStdDev</span>(input, mean1, stddev1);	<span class="comment">// 获取矩阵平均值和标准差</span></span><br><span class="line">	<span class="type">double</span> _stddev1, _mean2, _stddev2;		<span class="comment">// 图像标准差、局部均值和局部标准差</span></span><br><span class="line">	_stddev1 = stddev1.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = (m - <span class="number">1</span>) / <span class="number">2</span>; i &lt; input.rows - (m - <span class="number">1</span>) / <span class="number">2</span>; i ++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = (n - <span class="number">1</span>) / <span class="number">2</span>; j &lt; input.cols - (n - <span class="number">1</span>) / <span class="number">2</span>; j ++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> h = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> x = -(m - <span class="number">1</span>) / <span class="number">2</span>; x &lt;= (m - <span class="number">1</span>) / <span class="number">2</span>; x ++)</span><br><span class="line">				<span class="keyword">for</span> (<span class="type">int</span> y = -(n - <span class="number">1</span>) / <span class="number">2</span>; y &lt;= (n - <span class="number">1</span>) / <span class="number">2</span>; y ++)</span><br><span class="line">				&#123;</span><br><span class="line">					arry.<span class="built_in">at</span>&lt;uchar&gt;(h) = input.<span class="built_in">at</span>&lt;uchar&gt;(i + x, j + y);</span><br><span class="line">					h ++;</span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line">			cv::<span class="built_in">meanStdDev</span>(arry, mean2, stddev2);</span><br><span class="line">			_stddev2 = stddev2.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">			_mean2 = mean2.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">			<span class="type">double</span> k = (_stddev1 * _stddev1) / (_stddev2 * _stddev2 + <span class="number">0.00001</span>);</span><br><span class="line">			<span class="keyword">if</span> (k &lt;= <span class="number">1</span>)</span><br><span class="line">				output.<span class="built_in">at</span>&lt;uchar&gt;(i - (m - <span class="number">1</span>) / <span class="number">2</span>, j - (n - <span class="number">1</span>) / <span class="number">2</span>) = input.<span class="built_in">at</span>&lt;uchar&gt;(i, j) - k * (input.<span class="built_in">at</span>&lt;uchar&gt;(i, j) - _mean2);</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				output.<span class="built_in">at</span>&lt;uchar&gt;(i - (m - <span class="number">1</span>) / <span class="number">2</span>, j - (n - <span class="number">1</span>) / <span class="number">2</span>) = _mean2;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat input = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>, <span class="number">0</span>);</span><br><span class="line">	cv::Mat output;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">GaussianNoise</span>(input, input);	<span class="comment">//添加高斯噪声</span></span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, input);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">AdaptiveLocalNoiseReductionFilter</span>(input, output, <span class="number">7</span>, <span class="number">7</span>);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;after&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;after&quot;</span>, output);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b12_run1.jpg" alt="自适应局部均值滤波器"><figcaption>自适应局部均值滤波器</figcaption></figure></p>
<h3 id="自适应中值滤波器">自适应中值滤波器</h3>
<p>通过判断，将中值或者原像素灰度值作为结果。记以下符号：</p>
<blockquote>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">z_{min}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{xy}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 中的最小灰度值；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub></mrow><annotation encoding="application/x-tex">z_{max}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{xy}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 中的最大灰度值；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mrow><mi>m</mi><mi>e</mi><mi>d</mi></mrow></msub></mrow><annotation encoding="application/x-tex">z_{med}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{xy}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 中灰度值的中值；</p>
</blockquote>
<blockquote>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow><annotation encoding="application/x-tex">z_{xy}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 是坐标 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 处的灰度值， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{max}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{xy}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 允许的最大尺寸。</p>
</blockquote>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b12_1.png" alt></p>
<p>代码：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Salt.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加高斯噪声</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">GaussianNoise</span><span class="params">(cv::Mat input, cv::Mat &amp;output)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::RNG rng;</span><br><span class="line">	cv::Mat noice = input.<span class="built_in">clone</span>();</span><br><span class="line">	output = input.<span class="built_in">clone</span>();</span><br><span class="line">	rng.<span class="built_in">fill</span>(noice, cv::RNG::NORMAL, <span class="number">10</span>, <span class="number">50</span>);	<span class="comment">// 使用NORMAL参数添加高斯噪声</span></span><br><span class="line">	output = input + noice;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 求输出值</span></span><br><span class="line"><span class="function">uchar <span class="title">AdaptiveMedian</span><span class="params">(cv::Mat input, <span class="type">int</span> i, <span class="type">int</span> j, <span class="type">int</span> filter_size, <span class="type">int</span> maxsize)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> num = filter_size * filter_size;</span><br><span class="line">	<span class="function">std::vector&lt;uchar&gt; <span class="title">arry</span><span class="params">(num)</span></span>;</span><br><span class="line">	<span class="type">int</span> h = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> x = -(filter_size - <span class="number">1</span>) / <span class="number">2</span>; x &lt;= (filter_size - <span class="number">1</span>) / <span class="number">2</span>; x ++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> y = -(filter_size - <span class="number">1</span>) / <span class="number">2</span>; y &lt;= (filter_size - <span class="number">1</span>) / <span class="number">2</span>; y ++)</span><br><span class="line">		&#123;</span><br><span class="line">			arry[h] = input.<span class="built_in">at</span>&lt;uchar&gt;(i + x, j + y);</span><br><span class="line">			h ++;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="built_in">sort</span>(arry.<span class="built_in">begin</span>(), arry.<span class="built_in">end</span>());</span><br><span class="line">	<span class="type">int</span> z_min = arry[<span class="number">0</span>];</span><br><span class="line">	<span class="type">int</span> z_med = arry[(num - <span class="number">1</span>) / <span class="number">2</span>];</span><br><span class="line">	<span class="type">int</span> z_max = arry[num - <span class="number">1</span>];</span><br><span class="line">	<span class="type">int</span> z_xy = input.<span class="built_in">at</span>&lt;uchar&gt;(i, j);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (z_med &gt; z_min <span class="keyword">and</span> z_med &lt; z_max)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (z_xy &gt; z_min <span class="keyword">and</span> z_xy &lt; z_max)</span><br><span class="line">			<span class="keyword">return</span> z_xy;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">return</span> z_med;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		filter_size += <span class="number">2</span>;</span><br><span class="line">		<span class="keyword">if</span> (filter_size &lt;= maxsize)</span><br><span class="line">			<span class="keyword">return</span> <span class="built_in">AdaptiveMedian</span>(input, i, j, filter_size, maxsize);</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">return</span> z_med;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 自适应中值滤波器</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">AdaptiveMedianFilter</span><span class="params">(cv::Mat input, cv::Mat &amp;output, <span class="type">int</span> maxsize)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	output = input.<span class="built_in">clone</span>();</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">copyMakeBorder</span>(input, input, (maxsize - <span class="number">1</span>) / <span class="number">2</span>, (maxsize - <span class="number">1</span>) / <span class="number">2</span>, (maxsize - <span class="number">1</span>) / <span class="number">2</span>, (maxsize - <span class="number">1</span>) / <span class="number">2</span>, cv::BORDER_REFLECT);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = (maxsize - <span class="number">1</span>) / <span class="number">2</span>; i &lt; input.rows - (maxsize - <span class="number">1</span>) / <span class="number">2</span>; i ++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = (maxsize - <span class="number">1</span>) / <span class="number">2</span>; j &lt; input.cols - (maxsize - <span class="number">1</span>) / <span class="number">2</span>; j ++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> filter_size = <span class="number">3</span>;	<span class="comment">// 开始时滤波器尺寸</span></span><br><span class="line">			output.<span class="built_in">at</span>&lt;uchar&gt;(i - (maxsize - <span class="number">1</span>) / <span class="number">2</span>, j - (maxsize - <span class="number">1</span>) / <span class="number">2</span>) = <span class="built_in">AdaptiveMedian</span>(input, i, j, filter_size, maxsize);</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat input = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>, <span class="number">0</span>);</span><br><span class="line">	cv::Mat output1, output2;</span><br><span class="line"></span><br><span class="line">	cv::Mat noise1 = input.<span class="built_in">clone</span>(), noise2 = input.<span class="built_in">clone</span>();</span><br><span class="line"></span><br><span class="line">	<span class="built_in">GaussianNoise</span>(input, noise1);	<span class="comment">// 添加高斯噪声</span></span><br><span class="line">	<span class="built_in">Salt</span>(input, noise2, <span class="number">100000</span>);			<span class="comment">// 添加盐粒噪声</span></span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;高斯噪声&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;高斯噪声&quot;</span>, noise1);</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;盐粒噪声&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;盐粒噪声&quot;</span>, noise2);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">AdaptiveMedianFilter</span>(noise1, output1, <span class="number">7</span>);</span><br><span class="line">	<span class="built_in">AdaptiveMedianFilter</span>(noise2, output2, <span class="number">7</span>);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;降低高斯噪声&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;降低高斯噪声&quot;</span>, output1);</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;降低盐粒噪声&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;降低盐粒噪声&quot;</span>, output2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="H"><figure class="iseeu highlight h"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Salt.h</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;random&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Salt</span><span class="params">(cv::Mat input, cv::Mat &amp;output, <span class="type">int</span> n)</span>;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Salt.cpp</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Salt.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Salt</span><span class="params">(cv::Mat input, cv::Mat &amp;output, <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	output = input.<span class="built_in">clone</span>();</span><br><span class="line">	std::default_random_engine generator;</span><br><span class="line">	std::uniform_int_distribution&lt;<span class="type">int</span>&gt;<span class="built_in">row</span>(<span class="number">0</span>, input.rows - <span class="number">1</span>);</span><br><span class="line">	std::uniform_int_distribution&lt;<span class="type">int</span>&gt;<span class="built_in">col</span>(<span class="number">0</span>, input.cols - <span class="number">1</span>);</span><br><span class="line">	<span class="type">int</span> i, j;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; n; k ++)</span><br><span class="line">	&#123;</span><br><span class="line">		i = <span class="built_in">row</span>(generator);</span><br><span class="line">		j = <span class="built_in">col</span>(generator);</span><br><span class="line">		<span class="keyword">if</span> (input.<span class="built_in">channels</span>() == <span class="number">1</span>)</span><br><span class="line">			output.<span class="built_in">at</span>&lt;uchar&gt;(i, j) = <span class="number">255</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (input.<span class="built_in">channels</span>() == <span class="number">3</span>)</span><br><span class="line">			output.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i, j) = cv::<span class="built_in">Vec3b</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示；</p>
<p><em>对于盐粒噪声有奇效</em></p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b12_run2.jpg" alt="自适应中值滤波器"><figcaption>自适应中值滤波器</figcaption></figure></p>
<h1>彩色图像处理基础</h1>
<h2 id="彩色图像基础">彩色图像基础</h2>
<p>颜色的特性可以表达成亮度、色调和饱和度。</p>
<ul>
<li>
<p>亮度：即强度，如灰度值</p>
</li>
<li>
<p>色调：混合在光波中的主导光波属性，即被观察者感知的主导色。</p>
</li>
<li>
<p>饱和度：相对的纯度，或与一种色调混合的白光量。比如浅红色（红色+白色）是不饱和的，白色越多，越不饱和。</p>
</li>
</ul>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>色度</mtext><mo>=</mo><mtext>色调</mtext><mo>+</mo><mtext>饱和度，颜色</mtext><mo>=</mo><mtext>亮度</mtext><mo>+</mo><mtext>色度</mtext></mrow><annotation encoding="application/x-tex">色度=色调+饱和度，颜色=亮度+色度
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">色</span><span class="mord cjk_fallback">度</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">色</span><span class="mord cjk_fallback">调</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">饱</span><span class="mord cjk_fallback">和</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">颜</span><span class="mord cjk_fallback">色</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">亮</span><span class="mord cjk_fallback">度</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">色</span><span class="mord cjk_fallback">度</span></span></span></span></span></p>
<h2 id="彩色图像模型">彩色图像模型</h2>
<p>常见的彩色图像模型有：</p>
<ol>
<li>
<p>RGB（红绿蓝）：一般用于彩色显示器和彩色摄影机。</p>
</li>
<li>
<p>CMY（青、深红、黄）和CMYK（青、深红、黄、黑）：一般用于彩色打印。</p>
</li>
<li>
<p>HSI（色调、饱和度、亮度）：描述和解释颜色</p>
</li>
</ol>
<h2 id="rgb模型与hsi模型之间的转换">RGB模型与HSI模型之间的转换</h2>
<h3 id="从rgb到hsi">从RGB到HSI</h3>
<p><em>此处HSI的计算假设RGB已被归一化到[0,1]，且θ是相对于HSI空间的红色轴测量，得到的HSI结果也在区间[0,1]中。</em></p>
<p>H色调分量计算：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>θ</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mi>f</mi><mtext> </mtext><mi>B</mi><mo>≤</mo><mi>G</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>360</mn><mo>−</mo><mi>θ</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mi>f</mi><mtext> </mtext><mi>B</mi><mo>&gt;</mo><mi>G</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">H=\begin{cases}
\theta &amp; if\ B\leq G\\
360-\theta &amp; if\ B &gt;G
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">3</span><span class="mord">6</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">G</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi><mo>=</mo><mi>c</mi><mi>o</mi><msup><mi>s</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mfrac><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">[</mo><mo stretchy="false">(</mo><mi>R</mi><mo>−</mo><mi>G</mi><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mi>R</mi><mo>+</mo><mi>B</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><mrow><mo stretchy="false">[</mo><mo stretchy="false">(</mo><mi>R</mi><mo>−</mo><mi>G</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mi>R</mi><mo>−</mo><mi>B</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>G</mi><mo>−</mo><mi>B</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">]</mo><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\theta=cos^{-1}\frac{\frac{1} {2}[(R-G)+(R+B)]} {[(R-G)^2+(R-B)(G-B)]^{1/2} }
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.534108em;vertical-align:-0.954em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.580108em;"><span style="top:-2.2960000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">[</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">G</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7350000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">[</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">G</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mclose">]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>S饱和度分量计算：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><mn>1</mn><mo>−</mo><mfrac><mn>3</mn><mrow><mi>R</mi><mo>+</mo><mi>G</mi><mo>+</mo><mi>B</mi></mrow></mfrac><mo stretchy="false">[</mo><mi>min</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>R</mi><mo separator="true">,</mo><mi>G</mi><mo separator="true">,</mo><mi>B</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">S=1-\frac{3} {R+G+B}[\min(R,G,B)]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.09077em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">[</span><span class="mop">min</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">G</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mclose">]</span></span></span></span></span></p>
<p>I亮度分量计算：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mo>=</mo><mfrac><mn>1</mn><mn>3</mn></mfrac><mo stretchy="false">(</mo><mi>R</mi><mo>+</mo><mi>G</mi><mo>+</mo><mi>B</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">I=\frac 13(R+G+B)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord">3</span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord">1</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span></span></span></p>
<h3 id="从hsi到rgb">从HSI到RGB</h3>
<p><em>值区间同上[0,1]</em></p>
<p>先计算H色调值，再根据H的范围使用不同的公式。</p>
<p>把H值从[0,1]转换到[0,360]：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>=</mo><mi>H</mi><mo>×</mo><mn>360</mn><mi mathvariant="normal">°</mi></mrow><annotation encoding="application/x-tex">H=H\times 360°
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">6</span><span class="mord">0</span><span class="mord">°</span></span></span></span></span></p>
<p>根据H的范围使用不同计算公式：</p>
<p>当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>∈</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>120</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H\in[0,120)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">0</span><span class="mclose">)</span></span></span></span> ，即RG扇区：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>B</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>I</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>S</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>R</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>I</mi><mo stretchy="false">[</mo><mn>1</mn><mo>+</mo><mfrac><mrow><mi>S</mi><mi>cos</mi><mo>⁡</mo><mi>H</mi></mrow><mrow><mi>cos</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>60</mn><mi mathvariant="normal">°</mi><mo>−</mo><mi>H</mi><mo stretchy="false">)</mo></mrow></mfrac><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>G</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>3</mn><mi>I</mi><mo>−</mo><mo stretchy="false">(</mo><mi>R</mi><mo>+</mo><mi>B</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\left\{
\begin{matrix}
B&amp;=&amp;I(1-S) \\
R&amp;=&amp;I[1+\frac{S\cos H} {\cos(60°-H)}]\\
G&amp;=&amp;3I-(R+B) 
\end{matrix}
\right.
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.792331000000001em;vertical-align:-1.6461655000000004em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.49999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.20499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.00501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.30002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.1461655000000004em;"><span style="top:-4.3061655000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span><span style="top:-3.0738345000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span><span style="top:-1.7138344999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.6461655000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.1461655000000004em;"><span style="top:-4.3061655000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span></span></span><span style="top:-3.0738345000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span></span></span><span style="top:-1.7138344999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.6461655000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.1461655000000004em;"><span style="top:-4.3061655000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mclose">)</span></span></span><span style="top:-3.0738345000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">[</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mtight">c</span><span class="mtight">o</span><span class="mtight">s</span></span><span class="mopen mtight">(</span><span class="mord mtight">6</span><span class="mord mtight">0</span><span class="mord mtight">°</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mop mtight"><span class="mtight">c</span><span class="mtight">o</span><span class="mtight">s</span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">]</span></span></span><span style="top:-1.7138344999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.6461655000000004em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>∈</mo><mo stretchy="false">[</mo><mn>120</mn><mo separator="true">,</mo><mn>240</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H\in[120,240)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mord">2</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">4</span><span class="mord">0</span><span class="mclose">)</span></span></span></span> ，即GB扇区：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>H</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>H</mi><mo>−</mo><mn>120</mn><mi mathvariant="normal">°</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>B</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>I</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>S</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>R</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>I</mi><mo stretchy="false">[</mo><mn>1</mn><mo>+</mo><mfrac><mrow><mi>S</mi><mi>cos</mi><mo>⁡</mo><mi>H</mi></mrow><mrow><mi>cos</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>60</mn><mi mathvariant="normal">°</mi><mo>−</mo><mi>H</mi><mo stretchy="false">)</mo></mrow></mfrac><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>G</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>3</mn><mi>I</mi><mo>−</mo><mo stretchy="false">(</mo><mi>R</mi><mo>+</mo><mi>B</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\left\{
\begin{matrix}
H&amp;=&amp;H-120°\\
B&amp;=&amp;I(1-S) \\
R&amp;=&amp;I[1+\frac{S\cos H} {\cos(60°-H)}]\\
G&amp;=&amp;3I-(R+B) 
\end{matrix}
\right.
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.992331em;vertical-align:-2.2461654999999996em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500200000000005em;"><span style="top:-1.8999899999999998em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.89499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.18999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.20499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.2950099999999996em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.59001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.90002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.7461655em;"><span style="top:-4.9061655em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span><span style="top:-3.7061654999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span><span style="top:-2.4738345em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span><span style="top:-1.1138345000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.2461654999999996em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.7461655em;"><span style="top:-4.9061655em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span></span></span><span style="top:-3.7061654999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span></span></span><span style="top:-2.4738345em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span></span></span><span style="top:-1.1138345000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.2461654999999996em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.7461655em;"><span style="top:-4.9061655em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">0</span><span class="mord">°</span></span></span><span style="top:-3.7061654999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mclose">)</span></span></span><span style="top:-2.4738345em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">[</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mtight">c</span><span class="mtight">o</span><span class="mtight">s</span></span><span class="mopen mtight">(</span><span class="mord mtight">6</span><span class="mord mtight">0</span><span class="mord mtight">°</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mop mtight"><span class="mtight">c</span><span class="mtight">o</span><span class="mtight">s</span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">]</span></span></span><span style="top:-1.1138345000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.2461654999999996em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>∈</mo><mo stretchy="false">[</mo><mn>240</mn><mo separator="true">,</mo><mn>360</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">H\in[240,360]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">2</span><span class="mord">4</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mord">6</span><span class="mord">0</span><span class="mclose">]</span></span></span></span> ，即GB扇区：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>H</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>H</mi><mo>−</mo><mn>240</mn><mi mathvariant="normal">°</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>B</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>I</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>S</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>R</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>I</mi><mo stretchy="false">[</mo><mn>1</mn><mo>+</mo><mfrac><mrow><mi>S</mi><mi>cos</mi><mo>⁡</mo><mi>H</mi></mrow><mrow><mi>cos</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>60</mn><mi mathvariant="normal">°</mi><mo>−</mo><mi>H</mi><mo stretchy="false">)</mo></mrow></mfrac><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>G</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>3</mn><mi>I</mi><mo>−</mo><mo stretchy="false">(</mo><mi>R</mi><mo>+</mo><mi>B</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\left\{
\begin{matrix}
H&amp;=&amp;H-240°\\
B&amp;=&amp;I(1-S) \\
R&amp;=&amp;I[1+\frac{S\cos H} {\cos(60°-H)}]\\
G&amp;=&amp;3I-(R+B) 
\end{matrix}
\right.
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.992331em;vertical-align:-2.2461654999999996em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500200000000005em;"><span style="top:-1.8999899999999998em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.89499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.18999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.20499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.2950099999999996em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.59001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.90002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.7461655em;"><span style="top:-4.9061655em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span><span style="top:-3.7061654999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span><span style="top:-2.4738345em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span><span style="top:-1.1138345000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.2461654999999996em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.7461655em;"><span style="top:-4.9061655em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span></span></span><span style="top:-3.7061654999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span></span></span><span style="top:-2.4738345em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span></span></span><span style="top:-1.1138345000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.2461654999999996em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.7461655em;"><span style="top:-4.9061655em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mord">4</span><span class="mord">0</span><span class="mord">°</span></span></span><span style="top:-3.7061654999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mclose">)</span></span></span><span style="top:-2.4738345em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">[</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mtight">c</span><span class="mtight">o</span><span class="mtight">s</span></span><span class="mopen mtight">(</span><span class="mord mtight">6</span><span class="mord mtight">0</span><span class="mord mtight">°</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mop mtight"><span class="mtight">c</span><span class="mtight">o</span><span class="mtight">s</span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">]</span></span></span><span style="top:-1.1138345000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.2461654999999996em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<h1>图像形态学处理</h1>
<h2 id="腐蚀">腐蚀</h2>
<p>定义B对A的腐蚀为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>⊖</mo><mi>B</mi><mo>=</mo><mo stretchy="false">{</mo><mi>z</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">(</mo><mi>B</mi><msub><mo stretchy="false">)</mo><mi>z</mi></msub><mo>⊆</mo><mi>A</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">A\ominus B = \{z|(B)_z\subseteq A\}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊖</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord">∣</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mclose">}</span></span></span></span></span></p>
<p>其中，A是前景像素的一个集合，B是一个结构元，z项是前景像素值。</p>
<p>腐蚀的目的是<strong>去除图像中的某些部分以及会缩小细化目标</strong>。</p>
<p>但是，对于<strong>白色背景，黑色目标变大；对于黑色背景，白色目标变小</strong>。</p>
<p>可以理解为结构元像素是白色的，腐蚀是腐蚀图像中的白色像素，白色像素被腐蚀，则黑色元素膨胀。</p>
<p>代码如下：</p>
<p>相关函数有：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">double</span> <span class="title">threshold</span><span class="params">(InputArray src, OutputArray dst, <span class="type">double</span> thresh, <span class="type">double</span> maxval, <span class="type">int</span> type)</span></span>;  <span class="comment">// 二值化</span></span><br></pre></td></tr></table></figure></div>
<p>参数列表有：</p>
<ul>
<li>src：输入数组(多通道，8位或32位浮点)。</li>
<li>dst：与src相同大小和类型、相同通道数的输出数组。</li>
<li>thresh：阈值.</li>
<li>maxval：dst图像中的最大值。</li>
<li>type：阈值。</li>
</ul>
<p>type可选有：</p>
<ul>
<li><code>cv::THRESH_BINARY</code>，效果：</li>
</ul>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mi>v</mi><mi>a</mi><mi>l</mi><mo separator="true">,</mo><mspace width="1em"><mi>i</mi><mi>f</mi><mtext> </mtext><mi>s</mi><mi>r</mi><mi>c</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mi>t</mi><mi>h</mi><mi>r</mi><mi>e</mi><mi>s</mi><mi>h</mi></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo><mspace width="1em"><mi>o</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>w</mi><mi>i</mi><mi>s</mi><mi>e</mi></mspace></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">dst(x,y)=
\begin{cases}
maxval,\quad if\ src(x,y)&gt; thresh\\
0, \quad otherwise
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace"> </span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">c</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">h</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">o</span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<ul>
<li><code>cv::THRESH_BINARY_INV</code>，效果：</li>
</ul>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo><mspace width="1em"><mi>i</mi><mi>f</mi><mtext> </mtext><mi>s</mi><mi>r</mi><mi>c</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mi>t</mi><mi>h</mi><mi>r</mi><mi>e</mi><mi>s</mi><mi>h</mi></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mi>v</mi><mi>a</mi><mi>l</mi><mo separator="true">,</mo><mspace width="1em"><mi>o</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>w</mi><mi>i</mi><mi>s</mi><mi>e</mi></mspace></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">dst(x,y)=
\begin{cases}
0,\quad if\ src(x,y)&gt; thresh\\
maxval, \quad otherwise
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace"> </span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">c</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">h</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">o</span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<ul>
<li><code>cv::THRESH_TRUNC</code>，效果：</li>
</ul>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>t</mi><mi>h</mi><mi>r</mi><mi>e</mi><mi>s</mi><mi>h</mi><mi>o</mi><mi>l</mi><mi>d</mi><mo separator="true">,</mo><mspace width="1em"><mi>i</mi><mi>f</mi><mtext> </mtext><mi>s</mi><mi>r</mi><mi>c</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mi>t</mi><mi>h</mi><mi>r</mi><mi>e</mi><mi>s</mi><mi>h</mi></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>s</mi><mi>r</mi><mi>c</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mspace width="1em"><mi>o</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>w</mi><mi>i</mi><mi>s</mi><mi>e</mi></mspace></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">dst(x,y)=
\begin{cases}
threshold,\quad if\ src(x,y)&gt; thresh\\
src(x,y), \quad otherwise
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">h</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">d</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace"> </span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">c</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">h</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">c</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">o</span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<ul>
<li><code>cv::THRESH_TOZERO</code>，效果：</li>
</ul>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>s</mi><mi>r</mi><mi>c</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mspace width="1em"><mi>i</mi><mi>f</mi><mtext> </mtext><mi>s</mi><mi>r</mi><mi>c</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mi>t</mi><mi>h</mi><mi>r</mi><mi>e</mi><mi>s</mi><mi>h</mi></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo><mspace width="1em"><mi>o</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>w</mi><mi>i</mi><mi>s</mi><mi>e</mi></mspace></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">dst(x,y)=
\begin{cases}
src(x,y),\quad if\ src(x,y)&gt; thresh\\
0, \quad otherwise
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">c</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace"> </span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">c</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">h</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">o</span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<ul>
<li><code>cv::THRESH_TOZERO_INV</code>，效果：</li>
</ul>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo><mspace width="1em"><mi>i</mi><mi>f</mi><mtext> </mtext><mi>s</mi><mi>r</mi><mi>c</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mi>t</mi><mi>h</mi><mi>r</mi><mi>e</mi><mi>s</mi><mi>h</mi></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>s</mi><mi>r</mi><mi>c</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mspace width="1em"><mi>o</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>w</mi><mi>i</mi><mi>s</mi><mi>e</mi></mspace></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">dst(x,y)=
\begin{cases}
0,\quad if\ src(x,y)&gt; thresh\\
src(x,y), \quad otherwise
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace"> </span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">c</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">h</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">c</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">o</span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<ul>
<li>
<p><code>cv::THRESH_OTSU</code>，效果：标志，使用Otsu算法选择最优阈值。</p>
</li>
<li>
<p><code>cv::THRESH_TRIANGLE</code>，效果：标志，使用三角算法选择最优阈值。</p>
</li>
<li>
<p><code>cv::THRESH_MASK</code>。</p>
</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">Mat <span class="title">getStructuringElement</span><span class="params">(<span class="type">int</span> shape, Size ksize, Point anchor = Point(<span class="number">-1</span>,<span class="number">-1</span>))</span></span>; <span class="comment">// 构造结构元函数 </span></span><br></pre></td></tr></table></figure></div>
<p>参数列表有：</p>
<ul>
<li>shape：结构元形状，0表示矩形，1表示十字架，2表示椭圆。</li>
<li>ksize：结构元大小。</li>
<li>anchor：结构元中心点所在位置。</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">erode</span><span class="params">(InputArray src, OutputArray dst, InputArray kernel, Point anchor = Point(<span class="number">-1</span>,<span class="number">-1</span>), <span class="type">int</span> iterations = <span class="number">1</span>, <span class="type">int</span> borderType = BORDER_CONSTANT, <span class="type">const</span> Scalar&amp; borderValue = morphologyDefaultBorderValue())</span></span>;</span><br></pre></td></tr></table></figure></div>
<p>参数列表有：</p>
<ul>
<li>src：输入图像，通道的数量可以是任意的，但深度应该是CV_8U, CV_16U, CV_16S, CV_32F或CV_64F。</li>
<li>dst：输出与src相同大小和类型的图像。</li>
<li>kernel：用于腐蚀的结构元。</li>
<li>anchor：中心点在元素中的位置。</li>
<li>iterations：应用侵蚀的次数。</li>
<li>borderType：推断图像外部像素的边界模式。</li>
<li>borderValue：当边界为常数时的边界值。</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat input = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>, <span class="number">0</span>);</span><br><span class="line">	cv::Mat image_bw, image_erosion;	<span class="comment">// 二值化图像和腐蚀后的图像</span></span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">threshold</span>(input, image_bw, <span class="number">100</span>, <span class="number">255</span>, cv::THRESH_BINARY);					<span class="comment">// 二值化</span></span><br><span class="line">	cv::Mat se = cv::<span class="built_in">getStructuringElement</span>(<span class="number">0</span>, cv::<span class="built_in">Size</span>(<span class="number">3</span>, <span class="number">3</span>));		<span class="comment">// 腐蚀核</span></span><br><span class="line">	cv::<span class="built_in">erode</span>(image_bw, image_erosion, se, cv::<span class="built_in">Point</span>(<span class="number">-1</span>, <span class="number">-1</span>), <span class="number">3</span>);	<span class="comment">// 腐蚀</span></span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, input);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;二值化后&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;二值化后&quot;</span>, image_bw);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;after&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;after&quot;</span>, image_erosion);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b14_run.jpg" alt></p>
<h2 id="膨胀">膨胀</h2>
<p>定义B对A的腐蚀为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>⊕</mo><mi>B</mi><mo>=</mo><mo stretchy="false">{</mo><mi>z</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">[</mo><mo stretchy="false">(</mo><mover accent="true"><mi>B</mi><mo>^</mo></mover><msub><mo stretchy="false">)</mo><mi>z</mi></msub><mo>∩</mo><mi>A</mi><mo stretchy="false">]</mo><mo>⊆</mo><mi>A</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">A\oplus B = \{z|[(\hat{B})_z\cap A]\subseteq A \}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.19677em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord">∣</span><span class="mopen">[</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mclose">}</span></span></span></span></span></p>
<p>其中，A是前景像素的一个集合，B是一个结构元，z项是前景像素值。</p>
<p>腐蚀的目的是<strong>增大图像中的目标，或者填充、连接某些目标</strong>。</p>
<p>但是，对于<strong>白色背景，黑色目标变小；对于黑色背景，白色目标变大</strong>。</p>
<p>可以理解为结构元像素是白色的，膨胀是膨胀图像中的白色像素，白色像素被膨胀，则黑色元素腐蚀。</p>
<p>代码如下：</p>
<p>相关函数有：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">erode</span><span class="params">(InputArray src, OutputArray dst, InputArray kernel, Point anchor = Point(<span class="number">-1</span>,<span class="number">-1</span>), <span class="type">int</span> iterations = <span class="number">1</span>, <span class="type">int</span> borderType = BORDER_CONSTANT, <span class="type">const</span> Scalar&amp; borderValue = morphologyDefaultBorderValue())</span></span>;</span><br></pre></td></tr></table></figure></div>
<p>参数列表有：</p>
<ul>
<li>src：输入图像，通道的数量可以是任意的，但深度应该是CV_8U, CV_16U, CV_16S, CV_32F或CV_64F。</li>
<li>dst：输出与src相同大小和类型的图像。</li>
<li>kernel：用于腐蚀的结构元。</li>
<li>anchor：中心点在元素中的位置。</li>
<li>iterations：应用侵蚀的次数。</li>
<li>borderType：推断图像外部像素的边界模式。</li>
<li>borderValue：当边界为常数时的边界值。</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat input = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/test.jpg&quot;</span>, <span class="number">0</span>);</span><br><span class="line">	cv::Mat image_bw, image_dilate;	<span class="comment">// 二值化图像和膨胀后的图像</span></span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">threshold</span>(input, image_bw, <span class="number">100</span>, <span class="number">255</span>, cv::THRESH_BINARY);	<span class="comment">// 二值化</span></span><br><span class="line">	cv::Mat se = cv::<span class="built_in">getStructuringElement</span>(<span class="number">0</span>, cv::<span class="built_in">Size</span>(<span class="number">3</span>, <span class="number">3</span>));		<span class="comment">// 膨胀核</span></span><br><span class="line">	cv::<span class="built_in">dilate</span>(image_bw, image_dilate, se, cv::<span class="built_in">Point</span>(<span class="number">-1</span>, <span class="number">-1</span>), <span class="number">3</span>);	<span class="comment">// 膨胀</span></span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, input);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;二值化后&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;二值化后&quot;</span>, image_bw);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;after&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;after&quot;</span>, image_dilate);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b14_run1.jpg" alt></p>
<h2 id="开运算与闭运算">开运算与闭运算</h2>
<p>结构元B对集合A的开运算定义为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>∘</mo><mi>B</mi><mo>=</mo><mo stretchy="false">(</mo><mi>A</mi><mo>⊖</mo><mi>B</mi><mo stretchy="false">)</mo><mo>⊕</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A\circ B=(A\ominus B)\oplus B
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∘</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊖</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span></span></p>
<p>即B对A先腐蚀，接着B对腐蚀结果膨胀。</p>
<ul>
<li>作用是：平滑物体轮廓、断开狭窄的狭颈、消除细长的突出和物体。</li>
</ul>
<p>结构元B对集合A的闭运算定义为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>∙</mo><mi>B</mi><mo>=</mo><mo stretchy="false">(</mo><mi>A</mi><mo>⊕</mo><mi>B</mi><mo stretchy="false">)</mo><mo>⊖</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A\bullet B=(A\oplus B)\ominus B
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊖</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span></span></p>
<p>即B对A先膨胀，接着B对膨胀结果腐蚀。</p>
<ul>
<li>作用是：弥合狭窄的狭颈或断裂处、消除小孔、填补轮廓缝隙。</li>
</ul>
<p>代码如下：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">imageOpenOperation</span><span class="params">(cv::Mat input, cv::Mat &amp;output)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	output = input.<span class="built_in">clone</span>();</span><br><span class="line">	cv::Mat se = cv::<span class="built_in">getStructuringElement</span>(cv::MORPH_RECT, cv::<span class="built_in">Size</span>(<span class="number">3</span>, <span class="number">3</span>));</span><br><span class="line">	cv::<span class="built_in">erode</span>(input, output, se);</span><br><span class="line">	cv::<span class="built_in">dilate</span>(output, output, se);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">imageCloseOperation</span><span class="params">(cv::Mat input, cv::Mat &amp;output)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	output = input.<span class="built_in">clone</span>();</span><br><span class="line">	cv::Mat se = cv::<span class="built_in">getStructuringElement</span>(cv::MORPH_RECT, cv::<span class="built_in">Size</span>(<span class="number">3</span>, <span class="number">3</span>));</span><br><span class="line">	cv::<span class="built_in">dilate</span>(input, output, se);</span><br><span class="line">	cv::<span class="built_in">erode</span>(output, output, se);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat input = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/pic2.png&quot;</span>, <span class="number">0</span>);</span><br><span class="line">	cv::Mat img_bw, result1, result2;	<span class="comment">// 二值化后的图像、开运算结果、比运算结果</span></span><br><span class="line">	cv::<span class="built_in">threshold</span>(input, img_bw, <span class="number">100</span>, <span class="number">255</span>, cv::THRESH_BINARY);	<span class="comment">// 二值化</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">imageOpenOperation</span>(img_bw, result1);</span><br><span class="line">	<span class="built_in">imageCloseOperation</span>(img_bw, result2);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;开运算后&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;闭运算后&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, img_bw);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;开运算后&quot;</span>, result1);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;闭运算后&quot;</span>, result2);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b15_run.jpg" alt></p>
<h2 id="morphologyex-函数的运用">morphologyEx()函数的运用</h2>
<p><em>膨胀腐蚀、开运算闭运算、击中-击不中变换、顶帽变换与底帽变换、形态学梯度</em></p>
<h3 id="相关函数原型">相关函数原型</h3>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">morphologyEx</span><span class="params">(  InputArray src,</span></span></span><br><span class="line"><span class="params"><span class="function">                    OutputArray dst,</span></span></span><br><span class="line"><span class="params"><span class="function">                    <span class="type">int</span> op, </span></span></span><br><span class="line"><span class="params"><span class="function">                    InputArray kernel,</span></span></span><br><span class="line"><span class="params"><span class="function">                    Point anchor = Point(<span class="number">-1</span>,<span class="number">-1</span>), </span></span></span><br><span class="line"><span class="params"><span class="function">                    <span class="type">int</span> iterations = <span class="number">1</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">                    <span class="type">int</span> borderType = BORDER_CONSTANT,</span></span></span><br><span class="line"><span class="params"><span class="function">                    <span class="type">const</span> Scalar&amp; borderValue = morphologyDefaultBorderValue() )</span></span>;</span><br></pre></td></tr></table></figure></div>
<p>参数如下：</p>
<ul>
<li>
<p>src：输入图像，图像数据类型必须为CV_8U, CV_16U, CV_16S, CV_32F or CV_64F中的一种。</p>
</li>
<li>
<p>dst：输出图像，数据类型与大小和输入图像一样。</p>
</li>
<li>
<p>op：形态学处理的类型。</p>
</li>
</ul>
<blockquote>
<p>MORPH_ERODE = 0：腐蚀处理</p>
<p>MORPH_DILATE = 1：膨胀处理</p>
<p>MORPH_OPEN = 2：开运算处理</p>
<p>MORPH_CLOSE = 3：闭运算处理</p>
<p>MORPH_GRADIENT = 4：形态学梯度</p>
<p>MORPH_TOPHAT = 5：顶帽变换</p>
<p>MORPH_BLACKHAT = 6：黑帽变换</p>
<p>MORPH_HITMISS = 7 ：击中-击不中变换</p>
</blockquote>
<ul>
<li>
<p>kernel：结构元矩阵。</p>
</li>
<li>
<p>iterations：腐蚀膨胀处理的次数，默认值为1；如果是开运算闭运算，次数表示先腐蚀或者膨胀几次，再膨胀腐蚀几次，而不是开运算闭运算几次。</p>
</li>
<li>
<p>borderType：图像边框插值类型，默认类型为固定值填充。</p>
</li>
<li>
<p>borderValue：边界值（如果是恒定边界）。默认值具有特殊含义。</p>
</li>
</ul>
<h3 id="进行腐蚀膨胀">进行腐蚀膨胀</h3>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat input = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/pic2.png&quot;</span>, <span class="number">0</span>);</span><br><span class="line">	cv::Mat img_bw, result1, result2;</span><br><span class="line">	cv::<span class="built_in">threshold</span>(input, img_bw, <span class="number">100</span>, <span class="number">255</span>, cv::THRESH_BINARY);	<span class="comment">// 二值化</span></span><br><span class="line"></span><br><span class="line">	cv::Mat kernel = cv::<span class="built_in">getStructuringElement</span>(cv::MORPH_RECT, cv::<span class="built_in">Size</span>(<span class="number">3</span>, <span class="number">3</span>));</span><br><span class="line">	cv::<span class="built_in">morphologyEx</span>(img_bw, result1, <span class="number">0</span>, kernel);	<span class="comment">// 腐蚀</span></span><br><span class="line">	cv::<span class="built_in">morphologyEx</span>(img_bw, result2, <span class="number">1</span>, kernel);	<span class="comment">// 膨胀</span></span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;腐蚀结果&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;膨胀结果&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, img_bw);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;腐蚀结果&quot;</span>, result1);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;膨胀结果&quot;</span>, result2);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b16_run.jpg" alt></p>
<h3 id="进行开运算和闭运算">进行开运算和闭运算</h3>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat input = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/pic2.png&quot;</span>, <span class="number">0</span>);</span><br><span class="line">	cv::Mat img_bw, result1, result2;</span><br><span class="line">	cv::<span class="built_in">threshold</span>(input, img_bw, <span class="number">100</span>, <span class="number">255</span>, cv::THRESH_BINARY);	<span class="comment">// 二值化</span></span><br><span class="line"></span><br><span class="line">	cv::Mat kernel = cv::<span class="built_in">getStructuringElement</span>(cv::MORPH_RECT, cv::<span class="built_in">Size</span>(<span class="number">3</span>, <span class="number">3</span>));</span><br><span class="line">	cv::<span class="built_in">morphologyEx</span>(img_bw, result1, <span class="number">2</span>, kernel);	<span class="comment">// 开运算</span></span><br><span class="line">	cv::<span class="built_in">morphologyEx</span>(img_bw, result2, <span class="number">3</span>, kernel);	<span class="comment">// 闭运算</span></span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;开运算结果&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;闭运算结果&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, img_bw);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;开运算结果&quot;</span>, result1);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;闭运算结果&quot;</span>, result2);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b16_2.jpg" alt></p>
<h3 id="击中-击不中变换">击中-击不中变换</h3>
<p>原理：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mo>⊛</mo><mi>B</mi><mo>=</mo><mo stretchy="false">{</mo><mi>z</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">(</mo><mi>B</mi><msub><mo stretchy="false">)</mo><mi>z</mi></msub><mo>⊆</mo><mi>I</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">I\circledast B=\{z|(B)_z\subseteq I\}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7653099999999999em;vertical-align:-0.08198em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin amsrm">⊛</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord">∣</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mclose">}</span></span></span></span></span></p>
<p>可以检测图像中满足结构元B的所有像素点，如：</p>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b16_1.png" alt></p>
<p>图中结构元B中深色像素为前景，白色表示为背景， <code>×</code> 表示不关心像素（即不影响结果）。</p>
<p>击中-击不中变换是形状检测的基本工具，寻找与结构元相符合的像素。</p>
<p>在击中击不中变换的结构元中，-1表示背景，1表示前景，0表示不关心。</p>
<p>代码如下：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat input = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/rice.jpg&quot;</span>, <span class="number">0</span>);</span><br><span class="line">	cv::Mat img_bw, result;</span><br><span class="line">	cv::<span class="built_in">threshold</span>(input, img_bw, <span class="number">100</span>, <span class="number">255</span>, cv::THRESH_BINARY);	<span class="comment">// 二值化</span></span><br><span class="line"></span><br><span class="line">	cv::Mat kernel = (cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(<span class="number">3</span>, <span class="number">3</span>) &lt;&lt; <span class="number">1</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">morphologyEx</span>(img_bw, result, <span class="number">7</span>, kernel);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;击中-击不中变换结果&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, img_bw);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;击中-击不中变换结果&quot;</span>, result);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b16_3.jpg" alt></p>
<h3 id="顶帽变换与底帽变换">顶帽变换与底帽变换</h3>
<p>顶帽变换（礼帽变换）</p>
<ul>
<li>
<p>是原图像与开运算结果图之差。</p>
</li>
<li>
<p>作用：提取出细线状的部分或者噪声。</p>
</li>
</ul>
<p>底帽变换（黑帽变换）</p>
<ul>
<li>
<p>是闭运算与原图像结果图之差。</p>
</li>
<li>
<p>作用：得到图像内部的小孔，或前景色的小黑点。</p>
</li>
</ul>
<p>代码如下：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat input = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/rice.jpg&quot;</span>, <span class="number">0</span>);</span><br><span class="line">	cv::Mat img_bw, result1, result2;</span><br><span class="line">	cv::<span class="built_in">threshold</span>(input, img_bw, <span class="number">100</span>, <span class="number">255</span>, cv::THRESH_BINARY);</span><br><span class="line">	cv::Mat kernel = cv::<span class="built_in">getStructuringElement</span>(<span class="number">0</span>, cv::<span class="built_in">Size</span>(<span class="number">5</span>, <span class="number">5</span>));</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">morphologyEx</span>(img_bw, result1, <span class="number">5</span>, kernel);</span><br><span class="line">	cv::<span class="built_in">morphologyEx</span>(img_bw, result2, <span class="number">6</span>, kernel);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;顶帽变换结果&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;底帽变换结果&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, img_bw);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;顶帽变换结果&quot;</span>, result1);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;底帽变换结果&quot;</span>, result2);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果截图：</p>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b16_4.jpg" alt></p>
<h3 id="形态学梯度">形态学梯度</h3>
<ul>
<li>
<p>膨胀图与腐蚀图之差；</p>
</li>
<li>
<p>对二值图进行这一操作可以得到图像中白色区域的边界，因此可以用形态学梯度来保留物体的边界轮廓。</p>
</li>
</ul>
<p>代码如下：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat input = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/pic2.png&quot;</span>, <span class="number">0</span>);</span><br><span class="line">	cv::Mat img_bw, result;</span><br><span class="line">	cv::<span class="built_in">threshold</span>(input, img_bw, <span class="number">100</span>, <span class="number">255</span>, cv::THRESH_BINARY_INV);</span><br><span class="line">	cv::Mat kernel = cv::<span class="built_in">getStructuringElement</span>(<span class="number">0</span>, cv::<span class="built_in">Size</span>(<span class="number">5</span>, <span class="number">5</span>));</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">morphologyEx</span>(img_bw, result, <span class="number">4</span>, kernel);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;before&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;形态学梯度结果&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;before&quot;</span>, img_bw);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;形态学梯度结果&quot;</span>, result);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果截图：</p>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b16_5.jpg" alt></p>
<h2 id="提取连通域">提取连通域</h2>
<p>连通域：指图像中具有相同像素值且位置相邻的像素组成的区域。</p>
<h3 id="connectedcomponents函数">connectedComponents函数</h3>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">connectedComponents</span><span class="params">(InputArray image, OutputArray labels, <span class="type">int</span> connectivity = <span class="number">8</span>, <span class="type">int</span> ltype = CV_32S)</span></span>;</span><br></pre></td></tr></table></figure></div>
<p>参数如下：</p>
<ul>
<li>
<p>image：输入图像，待标记8位单通道图像。</p>
</li>
<li>
<p>labels：输出图像，目标标记图像。</p>
</li>
<li>
<p>connectivity：连通域大小，四连通域还是八连通域。</p>
</li>
<li>
<p>输出类型：<code>CV32S</code> 和 <code>CV_16U</code> ，默认是 <code>CV_32S</code> 。</p>
</li>
<li>
<p>返回连通域个数。</p>
</li>
</ul>
<p>代码如下：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat input = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/rice.jpg&quot;</span>);</span><br><span class="line">	cv::Mat img_bw, connectimg;</span><br><span class="line">	cv::<span class="built_in">cvtColor</span>(input, img_bw, cv::COLOR_BGR2GRAY);</span><br><span class="line">	cv::<span class="built_in">threshold</span>(img_bw, img_bw, <span class="number">100</span>, <span class="number">255</span>, cv::THRESH_BINARY_INV);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 做一些膨胀和腐蚀使得图像连通域明显</span></span><br><span class="line">	cv::Mat element = cv::<span class="built_in">getStructuringElement</span>(cv::MORPH_RECT, cv::<span class="built_in">Size</span>(<span class="number">5</span>, <span class="number">5</span>));</span><br><span class="line">	cv::<span class="built_in">erode</span>(img_bw, img_bw, element, cv::<span class="built_in">Point</span>(<span class="number">-1</span>, <span class="number">-1</span>), <span class="number">2</span>);</span><br><span class="line">	cv::<span class="built_in">dilate</span>(img_bw, img_bw, element, cv::<span class="built_in">Point</span>(<span class="number">-1</span>, <span class="number">-1</span>), <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> num = cv::<span class="built_in">connectedComponents</span>(img_bw, connectimg, <span class="number">8</span>, CV_16U);</span><br><span class="line">	std::cout &lt;&lt; <span class="string">&quot;连通域个数：&quot;</span> &lt;&lt; num &lt;&lt; std::endl;</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;原图&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;原图&quot;</span>, img_bw);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//以不同颜色标记出不同的连通域</span></span><br><span class="line">	cv::Mat result = cv::Mat::<span class="built_in">zeros</span>(img_bw.<span class="built_in">size</span>(), CV_8UC3); <span class="comment">//定义标记结果图像</span></span><br><span class="line">	<span class="comment">//定义五种颜色</span></span><br><span class="line">	std::vector&lt;cv::Vec3b&gt; color;</span><br><span class="line">	color.<span class="built_in">push_back</span>(cv::<span class="built_in">Vec3b</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>));</span><br><span class="line">	color.<span class="built_in">push_back</span>(cv::<span class="built_in">Vec3b</span>(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>));</span><br><span class="line">	color.<span class="built_in">push_back</span>(cv::<span class="built_in">Vec3b</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">	color.<span class="built_in">push_back</span>(cv::<span class="built_in">Vec3b</span>(<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>));</span><br><span class="line">	color.<span class="built_in">push_back</span>(cv::<span class="built_in">Vec3b</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; result.cols; i ++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; result.rows; j ++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> label = connectimg.<span class="built_in">at</span>&lt;<span class="type">uint16_t</span>&gt;(i, j);</span><br><span class="line">			<span class="keyword">if</span> (label == <span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">continue</span>;	<span class="comment">//背景的黑色不改变</span></span><br><span class="line">			&#125;</span><br><span class="line">			result.<span class="built_in">at</span>&lt;cv::Vec3b&gt;(i, j) = color[label % <span class="number">5</span>];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;标记连通域后&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;标记连通域后&quot;</span>, result);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果截图：</p>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b17_run.jpg" alt></p>
<p><em>注：黑色也算一个连通域</em></p>
<h3 id="connectedcomponentswithstats函数">connectedComponentsWithStats函数</h3>
<p>函数：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">connectedComponentsWithStats</span><span class="params">(InputArray image, OutputArray labels,  OutputArray stats, OutputArray centroids,  <span class="type">int</span> connectivity = <span class="number">8</span>, <span class="type">int</span> ltype = CV_32S)</span></span>;</span><br></pre></td></tr></table></figure></div>
<p>参数如下：</p>
<ul>
<li>
<p>image：要标记的8位单通道图像</p>
</li>
<li>
<p>labels：目标标签图像</p>
</li>
<li>
<p>stats：每个标签的统计输出，是一个5列的矩阵，每一行对应每个连通区域的外接矩形的左上角坐标x、y，以及外接矩形的宽高width、height和面积area。</p>
</li>
<li>
<p>centroids：连通域中心点，数据类型CV_64F。</p>
</li>
<li>
<p>connectivity：8或4分别用于八连通域和四连通域。</p>
</li>
<li>
<p>ltype输出图像标签类型。目前支持CV_32S和CV_16U。</p>
</li>
<li>
<p>返回连通域个数。</p>
</li>
</ul>
<p>其中， stats包含了标签为i的连通域的一些信息，可以如下访问标签为i的连通域的面积：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">stats.<span class="built_in">at</span>&lt;<span class="type">int</span>&gt;(i, CC_STAT_AREA)</span><br></pre></td></tr></table></figure></div>
<p>连通域外接矩形的参数：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 矩形左上角x</span></span><br><span class="line">x = stats.<span class="built_in">at</span>&lt;<span class="type">int</span>&gt;(max_idx, cv::CC_STAT_LEFT);</span><br><span class="line"><span class="comment">// 矩形左上角y</span></span><br><span class="line">y = stats.<span class="built_in">at</span>&lt;<span class="type">int</span>&gt;(max_idx, cv::CC_STAT_TOP);</span><br><span class="line"><span class="comment">// 矩形高</span></span><br><span class="line">h = stats.<span class="built_in">at</span>&lt;<span class="type">int</span>&gt;(max_idx, cv::CC_STAT_HEIGHT);</span><br><span class="line"><span class="comment">// 矩形宽</span></span><br><span class="line">w = stats.<span class="built_in">at</span>&lt;<span class="type">int</span>&gt;(max_idx, cv::CC_STAT_WIDTH);</span><br></pre></td></tr></table></figure></div>
<h1>图像分割</h1>
<h2 id="图像边缘检测">图像边缘检测</h2>
<h3 id="边缘检测的步骤">边缘检测的步骤</h3>
<ol>
<li>
<p>为了降低噪声，对图像进行平滑处理。</p>
</li>
<li>
<p>检测边缘点。</p>
</li>
<li>
<p>边缘定位。</p>
</li>
</ol>
<h3 id="图像梯度">图像梯度</h3>
<p>计算图像f在任意位置(x, y)处的边缘强度和方向的工具是梯度。</p>
<p>定义梯度为向量：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∇</mi><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>≡</mo><mi>g</mi><mi>r</mi><mi>a</mi><mi>d</mi><mo stretchy="false">[</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>≡</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>g</mi><mi>x</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>g</mi><mi>y</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow></mfrac></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\nabla f(x,y)\equiv grad[f(x,y)]\equiv
\left[
\begin{matrix}
g_x(x,y)\\
g_y(x,y)\\
\end{matrix}
\right]=
\left[
\begin{matrix}
\frac{\partial f(x,y)} {\partial x}\\
\frac{\partial f(x,y)} {\partial y}\\
\end{matrix}
\right]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∇</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6805539999999999em;"><span style="top:-3.6805539999999994em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.3105539999999998em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1805539999999999em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">]</span></span></span></span></span></span></span></p>
<p>根据梯度向量求点(x,y)处方向变化率的值：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∇</mi><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>=</mo><msqrt><mrow><msubsup><mi>g</mi><mi>x</mi><mn>2</mn></msubsup><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>+</mo><msubsup><mi>g</mi><mi>y</mi><mn>2</mn></msubsup><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></msqrt></mrow><annotation encoding="application/x-tex">M(x,y) = \vert\vert\nabla f(x,y)\vert\vert=\sqrt{g_x^2(x,y)+g_y^2(x,y)}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord">∇</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.84em;vertical-align:-0.622679em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.217321em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7401079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span><span style="top:-3.177321em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.8800000000000001em;"><svg width="400em" height="1.8800000000000001em" viewbox="0 0 400000 1944" preserveaspectratio="xMinYMin slice"><path d="M983 90
l0 -0
c4,-6.7,10,-10,18,-10 H400000v40
H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7
s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744
c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30
c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722
c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5
c53.7,-170.3,84.5,-266.8,92.5,-289.5z
M1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.622679em;"><span></span></span></span></span></span></span></span></span></span></p>
<p>其中M(x,y)称为图像f的梯度图像。</p>
<p>上式变化率方向为：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mo><mi>tan</mi><mo>⁡</mo></mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo fence="false">[</mo><mfrac><mrow><msub><mi>g</mi><mi>y</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mrow><msub><mi>g</mi><mi>x</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mfrac><mo fence="false">]</mo></mrow><annotation encoding="application/x-tex">\alpha(x,y)=\tan^{-1}\Big[\frac{g_y(x,y)} {g_x(x,y)}\Big]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mop"><span class="mop">tan</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="delimsizing size2">[</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="delimsizing size2">]</span></span></span></span></span></span></p>
<p>常见梯度算子有：</p>
<ol>
<li>前向差分：有一维核也有二维核（Roberts核）</li>
</ol>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>g</mi><mi>x</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>−</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g_x(x,y)=\frac{\partial f(x,y)} {\partial x}=f(x+1,y)-f(x,y)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.113em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></span></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>g</mi><mi>y</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow></mfrac><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>−</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g_y(x,y)=\frac{\partial f(x,y)} {\partial y}=f(x,y+1)-f(x,y)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.30744em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></span></p>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b18_1.png" alt></p>
<ol start="2">
<li>中心有限差分：常见有Prewitt核核Sobel核</li>
</ol>
<h3 id="点检测">点检测</h3>
<p>使用拉普拉斯核进行孤立点检测。</p>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b18_2.png" alt></p>
<h3 id="线检测">线检测</h3>
<p>同样可以使用拉普拉斯核进行线检测，但也有规定方向的线检测。</p>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b18_3.png" alt></p>
<h3 id="roberts边缘检测">Roberts边缘检测</h3>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b18_4.png" alt></p>
<p>部分代码如下：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">cv::Mat kernel1 = (cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(<span class="number">2</span>, <span class="number">2</span>) &lt;&lt; <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span> );</span><br><span class="line">cv::Mat kernel2 = (cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(<span class="number">2</span>, <span class="number">2</span>) &lt;&lt; <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span> );</span><br><span class="line"></span><br><span class="line">cv::<span class="built_in">filter2D</span>(src, dst1, <span class="number">-1</span>, kernel1);    <span class="comment">// 方向1</span></span><br><span class="line">cv::<span class="built_in">filter2D</span>(src, dst2, <span class="number">-1</span>, kernel2);    <span class="comment">// 方向2</span></span><br><span class="line"></span><br><span class="line">cv::<span class="built_in">convertScaleAbs</span>(dst1, dst1);    <span class="comment">// 取绝对值</span></span><br><span class="line">cv::<span class="built_in">convertScaleAbs</span>(dst2, dst2);    <span class="comment">// 取绝对值</span></span><br><span class="line"></span><br><span class="line">dst = dst1 + dst2;  <span class="comment">// 合并</span></span><br></pre></td></tr></table></figure></div>
<h3 id="prewitt边缘检测">Prewitt边缘检测</h3>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b18_5.png" alt></p>
<p>部分代码如下：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">cv::Mat kernel1 = (cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(<span class="number">3</span>, <span class="number">3</span>) &lt;&lt; <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">cv::Mat kernel2 = (cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(<span class="number">3</span>, <span class="number">3</span>) &lt;&lt; <span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">cv::<span class="built_in">filter2D</span>(src, dst1, <span class="number">-1</span>, kernel1);    <span class="comment">// 方向1</span></span><br><span class="line">cv::<span class="built_in">filter2D</span>(src, dst2, <span class="number">-1</span>, kernel2);    <span class="comment">// 方向2</span></span><br><span class="line"></span><br><span class="line">cv::<span class="built_in">convertScaleAbs</span>(dst1, dst1);    <span class="comment">// 取绝对值</span></span><br><span class="line">cv::<span class="built_in">convertScaleAbs</span>(dst2, dst2);    <span class="comment">// 取绝对值</span></span><br><span class="line"></span><br><span class="line">dst = dst1 + dst2;  <span class="comment">// 合并</span></span><br></pre></td></tr></table></figure></div>
<h3 id="sobel边缘检测">Sobel边缘检测</h3>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b18_6.png" alt></p>
<p>部分代码如下：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">cv::Mat kernel1 = (cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(<span class="number">3</span>, <span class="number">3</span>) &lt;&lt; <span class="number">-1</span>, <span class="number">-2</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>);</span><br><span class="line">cv::Mat kernel2 = (cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(<span class="number">3</span>, <span class="number">3</span>) &lt;&lt; <span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-2</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">cv::<span class="built_in">filter2D</span>(src, dst1, <span class="number">-1</span>, kernel1);    <span class="comment">// 方向1</span></span><br><span class="line">cv::<span class="built_in">filter2D</span>(src, dst2, <span class="number">-1</span>, kernel2);    <span class="comment">// 方向2</span></span><br><span class="line"></span><br><span class="line">cv::<span class="built_in">convertScaleAbs</span>(dst1, dst1);    <span class="comment">// 取绝对值</span></span><br><span class="line">cv::<span class="built_in">convertScaleAbs</span>(dst2, dst2);    <span class="comment">// 取绝对值</span></span><br><span class="line"></span><br><span class="line">dst = dst1 + dst2;  <span class="comment">// 合并</span></span><br></pre></td></tr></table></figure></div>
<h3 id="kirsch边缘检测">Kirsch边缘检测</h3>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b18_7.png" alt></p>
<p>部分代码如下：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">cv::Mat kernel1 = (cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(<span class="number">3</span>, <span class="number">3</span>) &lt;&lt; <span class="number">-3</span>, <span class="number">-3</span>, <span class="number">5</span>, <span class="number">-3</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">-3</span>, <span class="number">-3</span>, <span class="number">5</span>);</span><br><span class="line">cv::Mat kernel2 = (cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(<span class="number">3</span>, <span class="number">3</span>) &lt;&lt; <span class="number">5</span>, <span class="number">-3</span>, <span class="number">-3</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">-3</span>, <span class="number">5</span>, <span class="number">-3</span>, <span class="number">-3</span>);</span><br><span class="line">cv::Mat kernel3 = (cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(<span class="number">3</span>, <span class="number">3</span>) &lt;&lt; <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">-3</span>, <span class="number">0</span>, <span class="number">-3</span>, <span class="number">-3</span>, <span class="number">-3</span>, <span class="number">-3</span>);</span><br><span class="line">cv::Mat kernel4 = (cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(<span class="number">3</span>, <span class="number">3</span>) &lt;&lt; <span class="number">-3</span>, <span class="number">-3</span>, <span class="number">-3</span>, <span class="number">-3</span>, <span class="number">0</span>, <span class="number">-3</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>);</span><br><span class="line">cv::Mat kernel5 = (cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(<span class="number">3</span>, <span class="number">3</span>) &lt;&lt; <span class="number">-3</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">-3</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">-3</span>, <span class="number">-3</span>, <span class="number">-3</span>);</span><br><span class="line">cv::Mat kernel6 = (cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(<span class="number">3</span>, <span class="number">3</span>) &lt;&lt; <span class="number">5</span>, <span class="number">5</span>, <span class="number">-3</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">-3</span>, <span class="number">-3</span>, <span class="number">-3</span>, <span class="number">-3</span>);</span><br><span class="line">cv::Mat kernel7 = (cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(<span class="number">3</span>, <span class="number">3</span>) &lt;&lt; <span class="number">-3</span>, <span class="number">-3</span>, <span class="number">-3</span>, <span class="number">-3</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">-3</span>, <span class="number">5</span>, <span class="number">5</span>);</span><br><span class="line">cv::Mat kernel8 = (cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(<span class="number">3</span>, <span class="number">3</span>) &lt;&lt; <span class="number">-3</span>, <span class="number">-3</span>, <span class="number">-3</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">-3</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">-3</span>);</span><br><span class="line"></span><br><span class="line">cv::<span class="built_in">filter2D</span>(src, dst1, <span class="number">-1</span>, kernel1);    <span class="comment">// 方向1</span></span><br><span class="line">cv::<span class="built_in">filter2D</span>(src, dst2, <span class="number">-1</span>, kernel2);    <span class="comment">// 方向2</span></span><br><span class="line">cv::<span class="built_in">filter2D</span>(src, dst3, <span class="number">-1</span>, kernel3);    <span class="comment">// 方向3</span></span><br><span class="line">cv::<span class="built_in">filter2D</span>(src, dst4, <span class="number">-1</span>, kernel4);    <span class="comment">// 方向4</span></span><br><span class="line">cv::<span class="built_in">filter2D</span>(src, dst5, <span class="number">-1</span>, kernel5);    <span class="comment">// 方向5</span></span><br><span class="line">cv::<span class="built_in">filter2D</span>(src, dst6, <span class="number">-1</span>, kernel6);    <span class="comment">// 方向6</span></span><br><span class="line">cv::<span class="built_in">filter2D</span>(src, dst7, <span class="number">-1</span>, kernel7);    <span class="comment">// 方向7</span></span><br><span class="line">cv::<span class="built_in">filter2D</span>(src, dst8, <span class="number">-1</span>, kernel8);    <span class="comment">// 方向8</span></span><br><span class="line"></span><br><span class="line">cv::<span class="built_in">convertScaleAbs</span>(dst1, dst1);</span><br><span class="line">cv::<span class="built_in">convertScaleAbs</span>(dst2, dst2);</span><br><span class="line">cv::<span class="built_in">convertScaleAbs</span>(dst3, dst3);</span><br><span class="line">cv::<span class="built_in">convertScaleAbs</span>(dst4, dst4);</span><br><span class="line">cv::<span class="built_in">convertScaleAbs</span>(dst5, dst5);</span><br><span class="line">cv::<span class="built_in">convertScaleAbs</span>(dst6, dst6);</span><br><span class="line">cv::<span class="built_in">convertScaleAbs</span>(dst7, dst7);</span><br><span class="line">cv::<span class="built_in">convertScaleAbs</span>(dst8, dst8);</span><br><span class="line"></span><br><span class="line">dst = src.<span class="built_in">clone</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; src.rows; i++)</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; src.cols; j++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> arr[] = &#123; dst1.<span class="built_in">at</span>&lt;uchar&gt;(i, j), dst2.<span class="built_in">at</span>&lt;uchar&gt;(i, j)</span><br><span class="line">			, dst3.<span class="built_in">at</span>&lt;uchar&gt;(i, j), dst4.<span class="built_in">at</span>&lt;uchar&gt;(i, j), dst5.<span class="built_in">at</span>&lt;uchar&gt;(i, j)</span><br><span class="line">			, dst6.<span class="built_in">at</span>&lt;uchar&gt;(i, j), dst7.<span class="built_in">at</span>&lt;uchar&gt;(i, j), dst8.<span class="built_in">at</span>&lt;uchar&gt;(i, j) &#125;;</span><br><span class="line">		std::<span class="built_in">sort</span>(arr, arr + <span class="number">8</span>);</span><br><span class="line">		<span class="type">int</span> max_num = arr[<span class="number">7</span>];</span><br><span class="line">		dst.<span class="built_in">at</span>&lt;uchar&gt;(i, j) = max_num;  <span class="comment">// 取8个方向的最大值作为结果</span></span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></div>
<h3 id="log边缘检测">LOG边缘检测</h3>
<p>高斯拉普拉斯LOG函数：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="normal">∇</mi><mn>2</mn></msup><mi>G</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mfrac><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup><mo>−</mo><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow><msup><mi>σ</mi><mn>4</mn></msup></mfrac><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mfrac><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup></mrow><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac></mrow></msup></mrow><annotation encoding="application/x-tex">\nabla^2G(x,y)=(\frac{x^2+y^2-2\sigma^2} {\sigma^4})e^{-\frac{x^2+y^2} {2\sigma^2} }
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.177108em;vertical-align:-0.686em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.3013099999999997em;"><span style="top:-3.4534200000000004em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2112714285714286em;"><span style="top:-2.5061857142857145em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9384399999999999em;"><span style="top:-2.93844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.4623857142857144em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04844em;"><span style="top:-3.04844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04844em;"><span style="top:-3.04844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49381428571428565em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>其由拉普拉斯算子核高斯函数组成：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>拉普拉斯算子：</mtext><msup><mi mathvariant="normal">∇</mi><mn>2</mn></msup><mi>f</mi><mo>=</mo><mfrac><mrow><msup><mi mathvariant="normal">∂</mi><mn>2</mn></msup><mi>f</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>x</mi><mn>2</mn></msup></mrow></mfrac><mo>+</mo><mfrac><mrow><msup><mi mathvariant="normal">∂</mi><mn>2</mn></msup><mi>f</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>y</mi><mn>2</mn></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">拉普拉斯算子：\nabla^2f=\frac{\partial^2f} {\partial x^2} + \frac{\partial^2f} {\partial y^2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0585479999999998em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">拉</span><span class="mord cjk_fallback">普</span><span class="mord cjk_fallback">拉</span><span class="mord cjk_fallback">斯</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">子</span><span class="mord cjk_fallback">：</span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.177108em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.371548em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>高斯函数：</mtext><mi>G</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mfrac><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup></mrow><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac></mrow></msup></mrow><annotation encoding="application/x-tex">高斯函数：G(x,y)=e^{-\frac{x^2+y^2} {2\sigma^2} }
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">高</span><span class="mord cjk_fallback">斯</span><span class="mord cjk_fallback">函</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">：</span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.3013099999999997em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.3013099999999997em;"><span style="top:-3.4534200000000004em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2112714285714286em;"><span style="top:-2.5061857142857145em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9384399999999999em;"><span style="top:-2.93844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.4623857142857144em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04844em;"><span style="top:-3.04844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04844em;"><span style="top:-3.04844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49381428571428565em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="normal">∇</mi><mn>2</mn></msup><mi>G</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><msup><mi mathvariant="normal">∂</mi><mn>2</mn></msup><mi>G</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>x</mi><mn>2</mn></msup></mrow></mfrac><mo>+</mo><mfrac><mrow><msup><mi mathvariant="normal">∂</mi><mn>2</mn></msup><mi>G</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>y</mi><mn>2</mn></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\nabla^2G(x,y)=\frac{\partial^2G(x,y)} {\partial x^2} + \frac{\partial^2G(x,y)} {\partial y^2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.177108em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.371548em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b18_8.png" alt></p>
<p>构建LOG核的方法有两种：</p>
<ol>
<li>
<p>由LOG函数进行计算（取样后要标定系数使系数和为0）；</p>
</li>
<li>
<p>构建高斯核，接着用拉普拉斯核进行卷积得到LOG核。</p>
</li>
</ol>
<p>由于拉普拉斯和高斯是线性运算，使用LOG对图像进行边缘检测也有两种方法：</p>
<ol>
<li>直接用LOG核对图像进行卷积。</li>
</ol>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">[</mo><msup><mi mathvariant="normal">∇</mi><mn>2</mn></msup><mi>G</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>⋆</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(x,y)=[\nabla^2G(x,y)]\star f(x,y)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋆</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></span></p>
<ol start="2">
<li>先对图像进行高斯滤波，再对滤波后图像进行拉普拉斯变换。</li>
</ol>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi mathvariant="normal">∇</mi><mn>2</mn></msup><mo stretchy="false">[</mo><mi>G</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>⋆</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">g(x,y)=\nabla^2[G(x,y)\star f(x,y)]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋆</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">]</span></span></span></span></span></p>
<p>代码如下：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LOG1</span><span class="params">(cv::Mat input, cv::Mat &amp;output)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	output = input.<span class="built_in">clone</span>();</span><br><span class="line">	cv::Mat kernel = (cv::<span class="built_in">Mat_</span>&lt;<span class="type">float</span>&gt;(<span class="number">5</span>, <span class="number">5</span>) &lt;&lt;</span><br><span class="line">		<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">		<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>,</span><br><span class="line">		<span class="number">1</span>, <span class="number">2</span>, <span class="number">-16</span>, <span class="number">2</span>, <span class="number">1</span>,</span><br><span class="line">		<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>,</span><br><span class="line">		<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>); <span class="comment">// LOG核</span></span><br><span class="line">	cv::<span class="built_in">filter2D</span>(input, output, <span class="number">-1</span>, kernel);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LOG2</span><span class="params">(cv::Mat input, cv::Mat &amp;output)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	output = input.<span class="built_in">clone</span>();</span><br><span class="line">	cv::<span class="built_in">GaussianBlur</span>(input, output, cv::<span class="built_in">Size</span>(<span class="number">5</span>, <span class="number">5</span>), <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">	cv::<span class="built_in">Laplacian</span>(output, output, input.<span class="built_in">depth</span>(), <span class="number">3</span>, <span class="number">1</span>, <span class="number">0</span>, cv::BORDER_DEFAULT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat src = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/lena.jpg&quot;</span>);</span><br><span class="line">	cv::Mat dst1, dst2;</span><br><span class="line">	cv::<span class="built_in">cvtColor</span>(src, src, cv::COLOR_BGR2GRAY);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">LOG1</span>(src, dst1);</span><br><span class="line">	<span class="built_in">LOG2</span>(src, dst2);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;原图&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;LOG1&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;LOG2&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;原图&quot;</span>, src);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;LOG1&quot;</span>, dst1);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;LOG2&quot;</span>, dst2);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果截图：</p>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b18_run1.jpg" alt></p>
<h3 id="canny边缘检测">Canny边缘检测</h3>
<p>Canny检测是传统边缘检测算子中最优秀的，基于：</p>
<ol>
<li>
<p>低错误率。所有边缘都应该找到，没有虚假边缘。</p>
</li>
<li>
<p>准确的定位边缘。检测到的边缘是接近真实的边缘。</p>
</li>
<li>
<p>单个边缘点响应。只返回单点厚度的结果。</p>
</li>
</ol>
<h4 id="canny边缘检测的步骤">Canny边缘检测的步骤</h4>
<h5 id="1-使用高斯滤波器平滑图像">1. 使用高斯滤波器平滑图像</h5>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Gaussfilter</span><span class="params">(cv::Mat input, cv::Mat &amp;output, <span class="type">int</span> size, <span class="type">double</span> sigma)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">// 处理核大小</span></span><br><span class="line">	<span class="keyword">if</span> (size &lt; <span class="number">3</span>) size = <span class="number">3</span>;</span><br><span class="line">	<span class="keyword">else</span> size = <span class="built_in">static_cast</span>&lt;<span class="type">int</span>&gt;((size / <span class="number">2</span>) * <span class="number">2</span> + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 创建高斯核</span></span><br><span class="line">	<span class="type">double</span> **Gausskernel = <span class="keyword">new</span> <span class="type">double</span> *[size];</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; size; i ++)</span><br><span class="line">		Gausskernel[i] = <span class="keyword">new</span> <span class="type">double</span>[size];</span><br><span class="line">	<span class="type">int</span> center = size / <span class="number">2</span>;</span><br><span class="line">	<span class="type">double</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; size; i ++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; size; j ++)</span><br><span class="line">		&#123;</span><br><span class="line">			Gausskernel[i][j] = <span class="built_in">exp</span>(-((i - center) * (i - center) + (j - center) * (j - center)) / (<span class="number">2</span> * sigma * sigma));</span><br><span class="line">			sum += Gausskernel[i][j];</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	sum = <span class="number">1.0</span> / sum;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; size; i ++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; size; j ++)</span><br><span class="line">			Gausskernel[i][j] *= sum;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 高斯滤波</span></span><br><span class="line">	output = input.<span class="built_in">clone</span>();</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = center; i &lt; input.rows - center; i ++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = center; j &lt; input.cols - center; j ++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">double</span> sum = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> x = -center; x &lt;= center; x ++)</span><br><span class="line">				<span class="keyword">for</span> (<span class="type">int</span> y = -center; y &lt;= center; y ++)</span><br><span class="line">					sum += Gausskernel[x + center][y + center] * input.<span class="built_in">at</span>&lt;uchar&gt;(i + x, j + y);</span><br><span class="line">			output.<span class="built_in">at</span>&lt;uchar&gt;(i, j) = sum;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 释放空间</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; size; i ++) <span class="keyword">delete</span>[] Gausskernel[i];</span><br><span class="line">	<span class="keyword">delete</span>[] Gausskernel;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h5 id="2-计算梯度幅值和边缘方向">2. 计算梯度幅值和边缘方向</h5>
<p>使用Prewitt算子计算梯度。</p>
<p>计算梯度也有两种方式：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo>=</mo><msqrt><mrow><msubsup><mi>G</mi><mi>x</mi><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>G</mi><mi>y</mi><mn>2</mn></msubsup></mrow></msqrt></mrow><annotation encoding="application/x-tex">G=\sqrt{G_x^2+G_y^2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.84em;vertical-align:-0.6276249999999999em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2123750000000002em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7401079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.1723749999999997em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.8800000000000001em;"><svg width="400em" height="1.8800000000000001em" viewbox="0 0 400000 1944" preserveaspectratio="xMinYMin slice"><path d="M983 90
l0 -0
c4,-6.7,10,-10,18,-10 H400000v40
H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7
s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744
c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30
c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722
c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5
c53.7,-170.3,84.5,-266.8,92.5,-289.5z
M1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6276249999999999em;"><span></span></span></span></span></span></span></span></span></span></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo>=</mo><msub><mi>G</mi><mi>x</mi></msub><mo>+</mo><msub><mi>G</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">G=G_x+G_y
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>根据边缘方向的法线方向确定边缘方向：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>arctan</mi><mo>⁡</mo><mo fence="false">[</mo><mfrac><mrow><msub><mi>G</mi><mi>y</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mrow><msub><mi>G</mi><mi>x</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mfrac><mo fence="false">]</mo></mrow><annotation encoding="application/x-tex">\alpha(x,y)=\arctan\Big[\frac{G_y(x,y)} {G_x(x,y)}\Big]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mop">arctan</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="delimsizing size2">[</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="delimsizing size2">]</span></span></span></span></span></span></p>
<p>然后根据法线方向将边缘分为四个方向：水平、垂直、45°、-45°。有：</p>
<ul>
<li>
<p>当法线方向为-22.5°~22.5°，或-157.5°~157.5°，则认为边缘为水平边缘；</p>
</li>
<li>
<p>当法线方向为22.5°~67.5°，或-112.5°~-157.5°，则认为边缘为-45°边缘；</p>
</li>
<li>
<p>当法线方向为67.5°~112.5°，或-67.5°~-112.5°，则认为边缘为垂直边缘；</p>
</li>
<li>
<p>当法线方向为112.5°~157.5°，或-22.5°~-67.5°，则认为边缘为45°边缘；</p>
</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">GradDire</span><span class="params">(cv::Mat input, cv::Mat &amp;Gradimg, cv::Mat &amp;Direimg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Gradimg = cv::<span class="built_in">Mat</span>(input.<span class="built_in">size</span>(), CV_16U, cv::<span class="built_in">Scalar</span>(<span class="number">0</span>));</span><br><span class="line">	Direimg = cv::<span class="built_in">Mat</span>(input.<span class="built_in">size</span>(), CV_8U, cv::<span class="built_in">Scalar</span>(<span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; input.rows - <span class="number">1</span>; i++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; input.cols - <span class="number">1</span>; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="comment">// 计算梯度及梯度幅值</span></span><br><span class="line">			<span class="type">int</span> gx = input.<span class="built_in">at</span>&lt;uchar&gt;(i + <span class="number">1</span>, j - <span class="number">1</span>) + input.<span class="built_in">at</span>&lt;uchar&gt;(i + <span class="number">1</span>, j) + input.<span class="built_in">at</span>&lt;uchar&gt;(i + <span class="number">1</span>, j + <span class="number">1</span>)</span><br><span class="line">				- input.<span class="built_in">at</span>&lt;uchar&gt;(i - <span class="number">1</span>, j - <span class="number">1</span>) - input.<span class="built_in">at</span>&lt;uchar&gt;(i - <span class="number">1</span>, j) - input.<span class="built_in">at</span>&lt;uchar&gt;(i - <span class="number">1</span>, j + <span class="number">1</span>);</span><br><span class="line">			<span class="type">int</span> gy = input.<span class="built_in">at</span>&lt;uchar&gt;(i - <span class="number">1</span>, j + <span class="number">1</span>) + input.<span class="built_in">at</span>&lt;uchar&gt;(i, j + <span class="number">1</span>) + input.<span class="built_in">at</span>&lt;uchar&gt;(i + <span class="number">1</span>, j + <span class="number">1</span>)</span><br><span class="line">				- input.<span class="built_in">at</span>&lt;uchar&gt;(i - <span class="number">1</span>, j - <span class="number">1</span>) - input.<span class="built_in">at</span>&lt;uchar&gt;(i, j - <span class="number">1</span>) - input.<span class="built_in">at</span>&lt;uchar&gt;(i + <span class="number">1</span>, j - <span class="number">1</span>);</span><br><span class="line">			<span class="type">int</span> sum = gx + gy;</span><br><span class="line">			Gradimg.<span class="built_in">at</span>&lt;ushort&gt;(i, j) = std::<span class="built_in">abs</span>(sum);</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 方向图像，图像中的坐标轴，1-水平，2-45°，3-垂直，4--45°</span></span><br><span class="line">			<span class="type">double</span> dire = <span class="built_in">atan2</span>(gy, gx) * <span class="number">180</span> / <span class="number">3.1415926</span>;</span><br><span class="line">			<span class="keyword">if</span> (dire &lt;= <span class="number">-67.5</span> <span class="keyword">or</span> dire &gt; <span class="number">67.5</span>)	Direimg.<span class="built_in">at</span>&lt;uchar&gt;(i, j) = <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span> (dire &gt; <span class="number">-67.5</span> <span class="keyword">and</span> dire &lt; <span class="number">-22.5</span>) Direimg.<span class="built_in">at</span>&lt;uchar&gt;(i, j) = <span class="number">2</span>;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span> (dire &gt; <span class="number">-22.5</span> <span class="keyword">and</span> dire &lt; <span class="number">22.5</span>)	Direimg.<span class="built_in">at</span>&lt;uchar&gt;(i, j) = <span class="number">3</span>;</span><br><span class="line">			<span class="keyword">else</span> Direimg.<span class="built_in">at</span>&lt;uchar&gt;(i, j) = <span class="number">4</span>;</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h5 id="3-非极大值抑制">3. 非极大值抑制</h5>
<p>非极大值抑制原理为：在一个3*3的邻域内，根据边缘法线方向，与法线方向上其他两个邻点的梯度幅值比较大小，若该点大于另外两个邻点，则认为该点是边缘点，否则抑制。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">NonMaxSuppression</span><span class="params">(cv::Mat Gradimg, cv::Mat Direimg, cv::Mat &amp;Suppimg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Suppimg = cv::<span class="built_in">Mat</span>(Gradimg.<span class="built_in">size</span>(), Gradimg.<span class="built_in">type</span>(), cv::<span class="built_in">Scalar</span>(<span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; Gradimg.rows - <span class="number">1</span>; i++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; Gradimg.cols - <span class="number">1</span>; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">switch</span> (Direimg.<span class="built_in">at</span>&lt;uchar&gt;(i, j))</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">					<span class="keyword">if</span> (Gradimg.<span class="built_in">at</span>&lt;ushort&gt;(i, j) &gt;= Gradimg.<span class="built_in">at</span>&lt;ushort&gt;(i, j - <span class="number">1</span>) &amp;&amp; Gradimg.<span class="built_in">at</span>&lt;ushort&gt;(i, j) &gt;= Gradimg.<span class="built_in">at</span>&lt;ushort&gt;(i, j + <span class="number">1</span>))</span><br><span class="line">						Suppimg.<span class="built_in">at</span>&lt;ushort&gt;(i, j) = Gradimg.<span class="built_in">at</span>&lt;ushort&gt;(i, j);</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">						Suppimg.<span class="built_in">at</span>&lt;ushort&gt;(i, j) = <span class="number">0</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">					<span class="keyword">if</span> (Gradimg.<span class="built_in">at</span>&lt;ushort&gt;(i, j) &gt;= Gradimg.<span class="built_in">at</span>&lt;ushort&gt;(i + <span class="number">1</span>, j - <span class="number">1</span>) &amp;&amp; Gradimg.<span class="built_in">at</span>&lt;ushort&gt;(i, j) &gt;= Gradimg.<span class="built_in">at</span>&lt;ushort&gt;(i - <span class="number">1</span>, j + <span class="number">1</span>))</span><br><span class="line">						Suppimg.<span class="built_in">at</span>&lt;ushort&gt;(i, j) = Gradimg.<span class="built_in">at</span>&lt;ushort&gt;(i, j);</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">						Suppimg.<span class="built_in">at</span>&lt;ushort&gt;(i, j) = <span class="number">0</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">					<span class="keyword">if</span> (Gradimg.<span class="built_in">at</span>&lt;ushort&gt;(i, j) &gt;= Gradimg.<span class="built_in">at</span>&lt;ushort&gt;(i - <span class="number">1</span>, j) &amp;&amp; Gradimg.<span class="built_in">at</span>&lt;ushort&gt;(i, j) &gt;= Gradimg.<span class="built_in">at</span>&lt;ushort&gt;(i + <span class="number">1</span>, j))</span><br><span class="line">						Suppimg.<span class="built_in">at</span>&lt;ushort&gt;(i, j) = Gradimg.<span class="built_in">at</span>&lt;ushort&gt;(i, j);</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">						Suppimg.<span class="built_in">at</span>&lt;ushort&gt;(i, j) = <span class="number">0</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">					<span class="keyword">if</span> (Gradimg.<span class="built_in">at</span>&lt;ushort&gt;(i, j) &gt;= Gradimg.<span class="built_in">at</span>&lt;ushort&gt;(i - <span class="number">1</span>, j - <span class="number">1</span>) &amp;&amp; Gradimg.<span class="built_in">at</span>&lt;ushort&gt;(i, j) &gt;= Gradimg.<span class="built_in">at</span>&lt;ushort&gt;(i + <span class="number">1</span>, j + <span class="number">1</span>))</span><br><span class="line">						Suppimg.<span class="built_in">at</span>&lt;ushort&gt;(i, j) = Gradimg.<span class="built_in">at</span>&lt;ushort&gt;(i, j);</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">						Suppimg.<span class="built_in">at</span>&lt;ushort&gt;(i, j) = <span class="number">0</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="keyword">default</span>:</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h5 id="4-使用双阈值处理和连通性分析检测和链接边缘">4. 使用双阈值处理和连通性分析检测和链接边缘</h5>
<p>只设置一个阈值时，若阈值设置太低，则会出现假边缘；若阈值设置太高，则一些弱边缘会被丢弃。</p>
<p>步骤：</p>
<ol>
<li>
<p>设置两个阈值：高阈值Th和低阈值Tl，一般高比低为2:1到3:1。</p>
</li>
<li>
<p>分别用这两个阈值对非极大值抑制图像进行阈值处理得到二值图像BWh和BWl，其中BWl的非零像素包含BWh。</p>
</li>
<li>
<p>分为强边缘图像和弱边缘图像，令BWl = BWh - BWl。此时认为BWh为强边缘图像，BWl为弱边缘图像。</p>
</li>
<li>
<p>标记弱边缘图像的真实边缘：在BWh中定位下一个没有被访问过的边缘像素P；在BWl中，认为P点坐标的8邻域内的弱边缘像素为真实边缘病标记；若BWh中所有像素均被访问，则结束，否则继续标记。</p>
</li>
</ol>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">doubleThread</span><span class="params">(cv::Mat Suppimg, cv::Mat &amp;Edgeimg, <span class="type">int</span> Tl, <span class="type">int</span> Th)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (Th &lt; Tl)</span><br><span class="line">		std::<span class="built_in">swap</span>(Th, Tl);</span><br><span class="line"></span><br><span class="line">	cv::Mat bw_h = cv::<span class="built_in">Mat</span>(Suppimg.<span class="built_in">size</span>(), CV_8UC1, cv::<span class="built_in">Scalar</span>(<span class="number">0</span>));</span><br><span class="line">	cv::Mat bw_l = cv::<span class="built_in">Mat</span>(Suppimg.<span class="built_in">size</span>(), CV_8UC1, cv::<span class="built_in">Scalar</span>(<span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; Suppimg.rows; i++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; Suppimg.cols; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (Suppimg.<span class="built_in">at</span>&lt;ushort&gt;(i, j) &gt;= Th)</span><br><span class="line">				bw_h.<span class="built_in">at</span>&lt;uchar&gt;(i, j) = <span class="number">255</span>;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				bw_h.<span class="built_in">at</span>&lt;uchar&gt;(i, j) = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> (Suppimg.<span class="built_in">at</span>&lt;ushort&gt;(i, j) &gt;= Tl <span class="keyword">and</span> Suppimg.<span class="built_in">at</span>&lt;ushort&gt;(i, j) &lt; Th)</span><br><span class="line">				bw_l.<span class="built_in">at</span>&lt;uchar&gt;(i, j) = <span class="number">255</span>;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				bw_l.<span class="built_in">at</span>&lt;uchar&gt;(i, j) = <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	Edgeimg = bw_h.<span class="built_in">clone</span>();</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; Suppimg.rows - <span class="number">1</span>; i++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; Suppimg.cols - <span class="number">1</span>; j++)</span><br><span class="line">			<span class="keyword">if</span> (bw_h.<span class="built_in">at</span>&lt;uchar&gt;(i, j) == <span class="number">255</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span> (bw_l.<span class="built_in">at</span>&lt;uchar&gt;(i - <span class="number">1</span>, j - <span class="number">1</span>) == <span class="number">255</span>)</span><br><span class="line">					Edgeimg.<span class="built_in">at</span>&lt;uchar&gt;(i - <span class="number">1</span>, j - <span class="number">1</span>) = <span class="number">255</span>;</span><br><span class="line">				<span class="keyword">if</span> (bw_l.<span class="built_in">at</span>&lt;uchar&gt;(i - <span class="number">1</span>, j) == <span class="number">255</span>)</span><br><span class="line">					Edgeimg.<span class="built_in">at</span>&lt;uchar&gt;(i - <span class="number">1</span>, j) = <span class="number">255</span>;</span><br><span class="line">				<span class="keyword">if</span> (bw_l.<span class="built_in">at</span>&lt;uchar&gt;(i - <span class="number">1</span>, j + <span class="number">1</span>) == <span class="number">255</span>)</span><br><span class="line">					Edgeimg.<span class="built_in">at</span>&lt;uchar&gt;(i - <span class="number">1</span>, j + <span class="number">1</span>) = <span class="number">255</span>;</span><br><span class="line">				<span class="keyword">if</span> (bw_l.<span class="built_in">at</span>&lt;uchar&gt;(i, j - <span class="number">1</span>) == <span class="number">255</span>)</span><br><span class="line">					Edgeimg.<span class="built_in">at</span>&lt;uchar&gt;(i, j - <span class="number">1</span>) = <span class="number">255</span>;</span><br><span class="line">				<span class="keyword">if</span> (bw_l.<span class="built_in">at</span>&lt;uchar&gt;(i, j + <span class="number">1</span>) == <span class="number">255</span>)</span><br><span class="line">					Edgeimg.<span class="built_in">at</span>&lt;uchar&gt;(i, j + <span class="number">1</span>) = <span class="number">255</span>;</span><br><span class="line">				<span class="keyword">if</span> (bw_l.<span class="built_in">at</span>&lt;uchar&gt;(i + <span class="number">1</span>, j - <span class="number">1</span>) == <span class="number">255</span>)</span><br><span class="line">					Edgeimg.<span class="built_in">at</span>&lt;uchar&gt;(i + <span class="number">1</span>, j - <span class="number">1</span>) = <span class="number">255</span>;</span><br><span class="line">				<span class="keyword">if</span> (bw_l.<span class="built_in">at</span>&lt;uchar&gt;(i + <span class="number">1</span>, j) == <span class="number">255</span>)</span><br><span class="line">					Edgeimg.<span class="built_in">at</span>&lt;uchar&gt;(i + <span class="number">1</span>, j) = <span class="number">255</span>;</span><br><span class="line">				<span class="keyword">if</span> (bw_l.<span class="built_in">at</span>&lt;uchar&gt;(i + <span class="number">1</span>, j + <span class="number">1</span>) == <span class="number">255</span>)</span><br><span class="line">					Edgeimg.<span class="built_in">at</span>&lt;uchar&gt;(i + <span class="number">1</span>, j + <span class="number">1</span>) = <span class="number">255</span>;</span><br><span class="line">			&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h4 id="canny函数">Canny函数</h4>
<p>手搓的Canny函数：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Canny_Edge</span><span class="params">(cv::Mat input, cv::Mat &amp;output, <span class="type">int</span> th, <span class="type">int</span> tl, <span class="type">int</span> size, <span class="type">double</span> sigma)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat Gaussimg, Gradimg, Direimg, Suppimg, Edgeimg;</span><br><span class="line">	<span class="built_in">Gaussfilter</span>(input, Gaussimg, size, sigma);</span><br><span class="line">	<span class="built_in">GradDire</span>(Gaussimg, Gradimg, Direimg);</span><br><span class="line">	<span class="built_in">NonMaxSuppression</span>(Gradimg, Direimg, Suppimg);</span><br><span class="line">	<span class="built_in">doubleThread</span>(Suppimg, Edgeimg, tl, th);</span><br><span class="line">	output = Edgeimg;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>OpenCV自带的Canny函数；</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Canny</span><span class="params">(InputArray image, OutputArray edges, <span class="type">double</span> threshold1, <span class="type">double</span> threshold2, <span class="type">int</span> apertureSize = <span class="number">3</span>, <span class="type">bool</span> L2gradient = <span class="literal">false</span>)</span></span>;</span><br></pre></td></tr></table></figure></div>
<p>参数；</p>
<ul>
<li>
<p>image：8比特输入图像。</p>
</li>
<li>
<p>edges：输出边缘图，单通道8位图像，与图像大小相同。</p>
</li>
<li>
<p>threshold1：滞后过程的第一个阈值。</p>
</li>
<li>
<p>threshold2：滞后过程的第二个阈值。</p>
</li>
<li>
<p>apertureSize：Sobel算子大小。</p>
</li>
<li>
<p>L2gradient：计算图像梯度复制的标识。</p>
</li>
</ul>
<h4 id="效果截图">效果截图</h4>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat src = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/lena.jpg&quot;</span>);</span><br><span class="line">	cv::Mat dst1, dst2;</span><br><span class="line">	cv::<span class="built_in">cvtColor</span>(src, src, cv::COLOR_BGR2GRAY);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">Canny_Edge</span>(src, dst1, <span class="number">50</span>, <span class="number">20</span>, <span class="number">3</span>, <span class="number">1</span>);</span><br><span class="line">	cv::<span class="built_in">Canny</span>(src, dst2, <span class="number">50</span>, <span class="number">20</span>, <span class="number">3</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;手搓Canny&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;Canny函数&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;手搓Canny&quot;</span>, dst1);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;Canny函数&quot;</span>, dst2);</span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b18_run2.jpg" alt></p>
<h2 id="图像阈值分割">图像阈值分割</h2>
<p>图像分割都是基于图像像素的灰度值，通过一个阈值T将图像中的像素分为两类或多类。</p>
<p>阈值分割的基本原理：</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo separator="true">,</mo><mspace width="1em"><mi>i</mi><mi>f</mi><mtext> </mtext><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mi>T</mi></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo><mspace width="1em"><mi>i</mi><mi>f</mi><mtext> </mtext><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>≤</mo><mi>T</mi></mspace></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">g(x,y)=\begin{cases}
1,\quad if\ f(x,y)&gt;T\\
0, \quad if\ f(x,y)\leq T
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>一般的图像阈值分割方法都主要在于去通过图像自身信息去计算寻找合适的阈值。</p>
<h3 id="全局阈值分割">全局阈值分割</h3>
<h4 id="迭代阈值分割">迭代阈值分割</h4>
<p>计算步骤：</p>
<ol>
<li>
<p>为全局阈值T选择一个初始的估计值，一般是图像平均灰度值。</p>
</li>
<li>
<p>使用初始值T进行阈值分割，此时图像分为大于阈值的像素组G1和小于阈值的像素组G2；</p>
</li>
<li>
<p>分别计算属于G1、G2图像像素的平均灰度值m1和m2；</p>
</li>
<li>
<p>针对m1和m2计算一个新的阈值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo>=</mo><mfrac><mrow><mi>m</mi><mn>1</mn><mo>+</mo><mi>m</mi><mn>2</mn></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">T=\frac{m1 + m2} {2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">m</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> ；</p>
</li>
<li>
<p>重复2到4，直到连续迭代中计算的连续两个T的差小于某个预定义的值为止。</p>
</li>
</ol>
<p>代码如下：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">imageIterativeThresholdSegmentation</span><span class="params">(cv::Mat input, cv::Mat &amp;output)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat src = input.<span class="built_in">clone</span>();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (src.<span class="built_in">channels</span>() == <span class="number">3</span>)	cv::<span class="built_in">cvtColor</span>(src, src, cv::COLOR_BGR2GRAY);</span><br><span class="line">	<span class="type">double</span> T = <span class="number">0</span>, preT = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; src.rows; i ++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; src.cols; j ++)</span><br><span class="line">			T += src.<span class="built_in">at</span>&lt;uchar&gt;(i, j);</span><br><span class="line"></span><br><span class="line">	T = <span class="number">1.0</span> * T / (src.rows * src.cols);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (std::<span class="built_in">abs</span>(preT - T) &gt; <span class="number">0.5</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		preT = T;</span><br><span class="line">		<span class="type">int</span> mean1 = <span class="number">0</span>, mean2 = <span class="number">0</span>, cnt1 = <span class="number">0</span>, cnt2 = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; src.rows; i ++)</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; src.cols; j ++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span> (src.<span class="built_in">at</span>&lt;uchar&gt;(i, j) &gt; T)</span><br><span class="line">					mean1 += src.<span class="built_in">at</span>&lt;uchar&gt;(i, j), cnt1 ++;</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">					mean2 += src.<span class="built_in">at</span>&lt;uchar&gt;(i, j), cnt2 ++;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">		mean1 = <span class="number">1.0</span> * mean1 / cnt1;</span><br><span class="line">		mean2 = <span class="number">1.0</span> * mean2 / cnt2;</span><br><span class="line">		T = (mean1 + mean2) / <span class="number">2</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">threshold</span>(src, output, T, <span class="number">255</span>, cv::THRESH_BINARY);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat src = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/lena.jpg&quot;</span>);</span><br><span class="line">	cv::Mat dst1;</span><br><span class="line">	cv::<span class="built_in">cvtColor</span>(src, src, cv::COLOR_BGR2GRAY);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">imageIterativeThresholdSegmentation</span>(src, dst1);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;src&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;dst1&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;src&quot;</span>, src);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;dst1&quot;</span>, dst1);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>效果截图：</p>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/opencv_b19_run.jpg" alt></p>
<h4 id="otsu大津法阈值分割">OTSU大津法阈值分割</h4>
<p>计算步骤：</p>
<ol>
<li>计算图像灰度直方图的零阶累积距（累加直方图）：</li>
</ol>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mi>e</mi><mi>r</mi><mi>o</mi><mi>C</mi><mi>u</mi><mi>m</mi><mi>u</mi><mi>M</mi><mi>o</mi><mi>m</mi><mi>e</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>k</mi></munderover><mi>h</mi><mi>i</mi><mi>s</mi><mi>t</mi><mi>o</mi><mi>g</mi><mi>r</mi><mi>a</mi><mi>m</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>k</mi><mo>∈</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>255</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">zeroCumuMoment(k)=\sum_{i=1}^khistogram(i),k\in[0,255]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">u</span><span class="mord mathdefault">m</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1137820000000005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361130000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">5</span><span class="mclose">]</span></span></span></span></span></p>
<ol start="2">
<li>计算灰度直方图的一阶累积距：</li>
</ol>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>o</mi><mi>n</mi><mi>e</mi><mi>C</mi><mi>u</mi><mi>m</mi><mi>u</mi><mi>M</mi><mi>o</mi><mi>m</mi><mi>e</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>k</mi></munderover><mo stretchy="false">(</mo><mi>i</mi><mo>∗</mo><mi>h</mi><mi>i</mi><mi>s</mi><mi>t</mi><mi>o</mi><mi>g</mi><mi>r</mi><mi>a</mi><mi>m</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>k</mi><mo>∈</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>255</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">oneCumuMoment(k)=\sum_{i=1}^k(i*histogram(i)),k\in[0,255]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">u</span><span class="mord mathdefault">m</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1137820000000005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361130000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">5</span><span class="mclose">]</span></span></span></span></span></p>
<ol start="3">
<li>计算输入图像的总体灰度平均值mean，也就是k=255时的一阶累积距：</li>
</ol>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>e</mi><mi>a</mi><mi>n</mi><mo>=</mo><mi>o</mi><mi>n</mi><mi>e</mi><mi>C</mi><mi>u</mi><mi>m</mi><mi>u</mi><mi>M</mi><mi>o</mi><mi>m</mi><mi>e</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><mn>255</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">mean=oneCumuMoment(255)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">u</span><span class="mord mathdefault">m</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord">2</span><span class="mord">5</span><span class="mord">5</span><span class="mclose">)</span></span></span></span></span></p>
<ol start="4">
<li>计算每一个灰度级作为阈值时，前景区域的平均灰度、背景区域的平均灰度与整体图像平均灰度的方差，方差计算：</li>
</ol>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mo stretchy="false">(</mo><mi>m</mi><mi>e</mi><mi>a</mi><mi>n</mi><mo>∗</mo><mi>z</mi><mi>e</mi><mi>r</mi><mi>o</mi><mi>C</mi><mi>u</mi><mi>m</mi><mi>u</mi><mi>M</mi><mi>o</mi><mi>m</mi><mi>e</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>−</mo><mi>o</mi><mi>n</mi><mi>e</mi><mi>C</mi><mi>u</mi><mi>m</mi><mi>u</mi><mi>M</mi><mi>o</mi><mi>m</mi><mi>e</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mi>z</mi><mi>e</mi><mi>r</mi><mi>o</mi><mi>C</mi><mi>u</mi><mi>m</mi><mi>u</mi><mi>M</mi><mi>o</mi><mi>m</mi><mi>e</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>z</mi><mi>e</mi><mi>r</mi><mi>o</mi><mi>C</mi><mi>u</mi><mi>m</mi><mi>u</mi><mi>M</mi><mi>o</mi><mi>m</mi><mi>e</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mfrac><mo separator="true">,</mo><mi>k</mi><mo>∈</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>255</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\sigma^2(k)=\frac{(mean*zeroCumuMoment(k)-oneCumuMoment(k))^2} {zeroCumuMoment(k)*(1-zeroCumuMoment(k))},k\in[0,255]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.427108em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">u</span><span class="mord mathdefault">m</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">u</span><span class="mord mathdefault">m</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">u</span><span class="mord mathdefault">m</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">u</span><span class="mord mathdefault">m</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">5</span><span class="mclose">]</span></span></span></span></span></p>
<ol start="5">
<li>找到最大的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma^2(k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span> ，即是所求的阈值：</li>
</ol>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mi>h</mi><mi>r</mi><mi>e</mi><mi>s</mi><mi>h</mi><mo>=</mo><mi>max</mi><mo>⁡</mo><mo stretchy="false">(</mo><msup><mi>σ</mi><mn>2</mn></msup><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>k</mi><mo>∈</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>255</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">thresh=\max(\sigma^2(k)),k\in[0,255]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mop">max</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">5</span><span class="mclose">]</span></span></span></span></span></p>
<p>代码如下：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">imageotsuThresholdSegmentation</span><span class="params">(cv::Mat input, cv::Mat &amp;output)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat src = input.<span class="built_in">clone</span>();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (src.<span class="built_in">channels</span>() == <span class="number">3</span>)	cv::<span class="built_in">cvtColor</span>(src, src, cv::COLOR_BGR2GRAY);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 计数灰度直方图各像素值</span></span><br><span class="line">	<span class="type">int</span> hist[<span class="number">256</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; src.rows; i ++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; src.cols; j ++)</span><br><span class="line">			hist[src.<span class="built_in">at</span>&lt;uchar&gt;(i, j)] ++;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 计算灰度直方图各像素概率</span></span><br><span class="line">	<span class="type">double</span> phist[<span class="number">256</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">256</span>; i ++)</span><br><span class="line">		phist[i] = <span class="number">1.0</span> * hist[i] / (src.rows * src.cols);</span><br><span class="line"></span><br><span class="line">	<span class="type">double</span> zeroCumuMoment[<span class="number">256</span>] = &#123; <span class="number">0</span> &#125;, oneCumuMoment[<span class="number">256</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 计算灰度直方图的零阶累积距和一阶累积距</span></span><br><span class="line">	zeroCumuMoment[<span class="number">0</span>] = phist[<span class="number">0</span>];</span><br><span class="line">	oneCumuMoment[<span class="number">0</span>] = <span class="number">0</span> * phist[<span class="number">0</span>];</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">256</span>; i ++)</span><br><span class="line">	&#123;</span><br><span class="line">		zeroCumuMoment[i] = zeroCumuMoment[i - <span class="number">1</span>] + phist[i];</span><br><span class="line">		oneCumuMoment[i] = oneCumuMoment[i - <span class="number">1</span>] + i * phist[i];</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="type">double</span> mean = oneCumuMoment[<span class="number">255</span>];</span><br><span class="line"></span><br><span class="line">	<span class="type">double</span> _max = <span class="number">-1</span>;</span><br><span class="line">	<span class="type">int</span> threshold = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">256</span>; i ++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">double</span> tmp = mean * zeroCumuMoment[i] - oneCumuMoment[i];</span><br><span class="line">		<span class="type">double</span> tmp1 = zeroCumuMoment[i] * (<span class="number">1</span> - zeroCumuMoment[i]);</span><br><span class="line">		<span class="type">double</span> ans = tmp * tmp / tmp1;</span><br><span class="line">		<span class="keyword">if</span> (_max &lt; ans)</span><br><span class="line">		&#123;</span><br><span class="line">			_max = ans;</span><br><span class="line">			threshold = i;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">threshold</span>(src, output, threshold, <span class="number">255</span>, cv::THRESH_BINARY);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat src = cv::<span class="built_in">imread</span>(<span class="string">&quot;src/lena.jpg&quot;</span>);</span><br><span class="line">	cv::Mat dst1;</span><br><span class="line">	cv::<span class="built_in">cvtColor</span>(src, src, cv::COLOR_BGR2GRAY);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">imageotsuThresholdSegmentation</span>(src, dst1);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;src&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">namedWindow</span>(<span class="string">&quot;dst1&quot;</span>, cv::WINDOW_NORMAL);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;src&quot;</span>, src);</span><br><span class="line">	cv::<span class="built_in">imshow</span>(<span class="string">&quot;dst1&quot;</span>, dst1);</span><br><span class="line"></span><br><span class="line">	cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h3 id="可变阈值处理">可变阈值处理</h3>
<p>将图像划分为多个局部，对于每个局部都采取阈值分割，使得效果更好。</p>
<h3 id="更多">更多</h3>
<ul>
<li>
<p>使用超像素分割图像</p>
</li>
<li>
<p>使用图割分割区域</p>
</li>
<li>
<p>使用形态学分水岭分割区域</p>
</li>
</ul>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>OpenCV</tag>
        <tag>图像处理</tag>
      </tags>
  </entry>
  <entry>
    <title>OI Wiki，一个整合了编程竞赛的知识整合站点</title>
    <url>/%E5%85%B6%E4%BB%96%E5%88%86%E4%BA%AB/oiwiki/</url>
    <content><![CDATA[<p>Github分享</p>
<p>关键词：算法、数据结构、竞赛</p>
<span id="more"></span>
<hr>
<!-- toc -->
<h1>是什么</h1>
<p>“OI Wiki 致力于成为一个免费开放且持续更新的知识整合站点，大家可以在这里获取关于 编程竞赛 (competitive programming) 有趣又实用的知识，我们为大家准备了竞赛中的基础知识、常见题型、解题思路以及常用工具等内容，帮助大家更快速深入地学习编程竞赛。”</p>
<h1>内容链接</h1>
<p><a class="link" href="https://oi-wiki.org/">OI Wiki——网页使用 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link" href="https://github.com/OI-wiki/OI-wiki">Github 仓库 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link" href="https://gitee.com/OI-wiki/OI-wiki">Gitee 仓库 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h1>如何使用</h1>
<p>在Github主页上有详细介绍。</p>
<p>可以直接点击上面的OI Wiki链接使用。</p>
<p>我在此用Windows 10做一个简单的 <strong>离线版</strong> 使用示例。</p>
<ol>
<li>直接或git方式下载仓库压缩包。</li>
</ol>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/oiwiki_download.jpg" alt="下载"><figcaption>下载</figcaption></figure></p>
<ol start="2">
<li>
<p>解压压缩包</p>
</li>
<li>
<p>在Python下（没有Python的可以<a class="link" href="https://fingsinz.space/%E6%97%A5%E5%B8%B8/8/#more">安装Python <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>），使用命令建立静态网页：在解压后的目录下地址栏输入cmd，接着输入下面的命令启动网页。</p>
</li>
</ol>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/oiwiki_run.jpg" alt="打开cmd"><figcaption>打开cmd</figcaption></figure></p>
<div class="highlight-container" data-rel="Cmd"><figure class="iseeu highlight cmd"><table><tr><td class="code"><pre><span class="line"># 如果是 python3</span><br><span class="line">python3 -m http.server</span><br><span class="line"># 如果是 python2</span><br><span class="line">python2 -m SimpleHTTPServer</span><br><span class="line"># 有些环境下找不到名叫 python3/python2 的可执行文件，不妨运行 python 试试</span><br></pre></td></tr></table></figure></div>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/oiwiki_run2.jpg" alt="启动网页服务"><figcaption>启动网页服务</figcaption></figure></p>
<ul>
<li>如上图则为启动网页服务成功。我在此输入的是<code>python</code>，可以试试<code>python3</code>或者<code>python2</code>能不能运行。</li>
<li>在浏览器地址栏中输入<code>http://localhost:8000/</code>或<code>127.0.0.1:8000</code>即可进入网页，其中<code>8000</code>为上图启动网页服务的端口，并不一定是<code>8000</code>。</li>
</ul>
<ol start="4">
<li>页面如下图即可进行阅读学习</li>
</ol>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/oiwiki_home.jpg" alt="OI Wiki"><figcaption>OI Wiki</figcaption></figure></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>其他分享</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>数据结构</tag>
        <tag>竞赛</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言入门学习教程</title>
    <url>/%E7%AC%94%E8%AE%B0/c-language-learning/</url>
    <content><![CDATA[<p>个人整理面向入门基础级别的C语言学习教程。</p>
<p>关键词：C语言</p>
<span id="more"></span>
<hr>
<!-- toc -->
<h1>Ⅰ —— 基础知识介绍</h1>
<p>此教程会用一些注记符号，表示某种格式。</p>
<h2 id="1-1-c语言背景知识">1.1 C语言背景知识</h2>
<p>C语言是一种通用的、面向过程式的计算机程序设计语言。1972 年，为了移植与开发 UNIX 操作系统，丹尼斯·里奇在贝尔电话实验室设计开发了 C 语言。</p>
<p>C语言标准有C89、C99、C11、C17、C2x ……等，后面的数字是标准发布的年份。如果想了解每个标准有什么差异，自行必应搜索。本教程的完整代码在GNU C17下成功运行。</p>
<h2 id="1-2-用什么写c语言">1.2 用什么写C语言</h2>
<p>编写C语言，就连基本的文本编辑器——记事本也可以完成。但我们并不会只想着使用那么奇奇怪怪的记事本，去编写十来行代码甚至上千行代码，至少是真的不习惯。</p>
<p>接触C语言，会有很多人推荐你用那个什么什么写啊，一点一动就行；但如果在大学学习，教师可能会让你使用Visual C++ 6.0（下简称VC 6.0）去写。</p>
<p>感受过VC 6.0软件界面的人都知道，很不舒服，甚至降低自己的效率。VC 6.0甚至比我的年龄还大，算是老古董了。但是目前教材用的是VC 6.0，实验室配置的是VC 6.0，乃至你的考试，甚至计算机二级，都是VC 6.0，所以用VC 6.0而不是别的软件，更加容易应付教学。</p>
<p>所以在此，我推荐使用的C语言编辑器是：</p>
<ul>
<li>
<p>基础小白或图方便可使用<a class="link" href="https://sourceforge.net/projects/dev-cpp-2020/">Dev-C++ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</li>
<li>
<p>非基础小白可使用Visual Studio或Visual Studio Code</p>
</li>
</ul>
<p>此教程的代码使用Dev-C++，均在Dev-C++下成功运行。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/c_devcpp.jpg" alt="Dev-C++界面"><figcaption>Dev-C++界面</figcaption></figure></p>
<p>按 <code>Ctrl</code> + <code>N</code> 可以新建文件，或者点击左上角文件新建文件。</p>
<p>在 工具 → 编译选项 → 代码生成/优化 → 代码生成 处可以找到语言标准。</p>
<h2 id="1-3-从代码到执行程序">1.3 从代码到执行程序</h2>
<p>在上一节我提到了用什么写C语言，这是关于编辑器（Editor）的事情。字面意思，它只负责编辑，也就是敲上一个个的字母数字，就像写英语日记、写英语文章一样。</p>
<p>事实上，你在编辑器上写的内容，还不能完全算是程序，这个内容称为 <strong>源代码（Source Code）</strong> 。存放源代码的文件称为 <strong>源文件</strong> 。</p>
<p>我们还需要经过一些步骤，使得源代码变成 <strong>可执行文件（Executable file）</strong> ，也就是你计算机里面那些.exe文件。把这些步骤称之为 <strong>编译（Build）</strong> 和 <strong>链接（Link）</strong> 。</p>
<ul>
<li>
<p>编译：编译需要 <strong>编译器</strong> 完成。编译器把一个源代码翻译成可执行文件的工作过程分为五个阶段：词法分析；语法分析；语义检查和中间代码生成；代码优化；目标代码生成。主要是进行词法分析和语法分析，又称为源程序分析，分析过程中发现有语法错误，给出提示信息。常见的编译器有：MinGW、MSVC等。</p>
</li>
<li>
<p>链接：链接需要 <strong>链接器</strong> 完成。链接是将各种代码和数据片段收集并组合成为一个单一文件的过程，这个文件可被加载（复制）到内存并执行。链接可以执行于编译时，也就是在源代码被翻译成机器代码时；也可以执行于加载时，也就是在程序被加载器加载到内存并执行时；甚至执行于运行时，也就是由应用程序来执行。链接的意义在于我们不用将一个大型的应用程序组织成一个巨大的源文件，而是可以把它分解成为更小、更好管理的模块，可以独立的修改和编译这些模块。当我们改变这些模块中的一个时，只需要简单的重新编译它，并重新链接应用，而不必重新编译其他文件。</p>
</li>
</ul>
<p>这些只是一些知识补充，想详细了解可参阅编译原理。另外，如果你选择了Dev-C++或者Visual Studio这样的集成软件，编译器和链接器的配置会相对简单。</p>
<h2 id="1-4-认识最基础的c语言代码">1.4 认识最基础的C语言代码</h2>
<p>学习C语言的开始，从输出一个“Hello World！”开始，这似乎是所有编程语言一开始都经历的事情。</p>
<p>我在此直接给出完整代码，心急的可以复制到Dev-C++运行试试。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Hello World.c </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>现在来逐行认识基本的C语言代码结构。</p>
<ul>
<li>
<p><code>//</code> 表示当前整行被编译器忽略，又称注释，供程序员理解语句。</p>
</li>
<li>
<p><code>#include&lt;stdio.h&gt;</code>中的 <code>#</code>（井号）表示预处理命令，即在程序编译前进行提前处理的部分。若是头文件，可用 <code>&lt;&gt;</code>（单书名号）括起来，也可用 <code>&quot; &quot;</code>（引号）包含起来。 <strong>其中由 <code>&lt;&gt;</code> 括起来的头文件表示在系统头文件的文件夹中查找，由 <code>&quot;&quot;</code> 括起来的头文件表示在源文件当前文件夹查找。</strong></p>
</li>
<li>
<p><code>int main()</code> 是一个函数的开头，再加以 <code>&#123;&#125;</code>（大括号）包含主函数内容。此处是主函数，主函数是一个程序最重要的函数，程序从此开始编译。</p>
</li>
<li>
<p><code>printf(&quot;Hello World!&quot;);</code> 为程序工作语句，其作用是输出“Hello World！”。</p>
</li>
<li>
<p>C语言中以 <code>;</code>（分号）作为一条语句的结束标志。</p>
</li>
<li>
<p><code>return 0;</code>是函数的结构之一，在函数一节介绍。</p>
</li>
</ul>
<p>一般情况下， <strong>一个C语言程序包含预处理器指令、函数、变量、语句（表达式和注释）等</strong> 。函数是一个进行某种功能操作的模块，目前认识到的是主函数，还可以自定义函数。变量即程序运行时其值可以改变的量，变量的功能就是存储数据。</p>
<p>C语言代码按 <strong>顺序结构</strong> ，由上到下顺序执行代码。</p>
<p>还有一件比较重要的事情，养成良好的代码风格，即令人舒适的缩进、空格位置等；千万不要所有代码都挤到一块或者全都左对齐。</p>
<h2 id="1-5-头文件">1.5 头文件</h2>
<p>在上一节提到了预处理命令包含的头文件，那么头文件是什么？</p>
<p>头文件是扩展名为.h的文件，包含了C语言一些函数甚至几乎所有函数的提前 <strong>声明（Statement）</strong> 和 <strong>定义（Definition）</strong> ，没有这些声明和定义，编译器不会认识这些函数，故而不能运行。</p>
<p>有两种类型的头文件：程序员编写的头文件和编译器自带的头文件。</p>
<p>在程序中要使用头文件，需要使用预处理指令 #include 来引用它，引用头文件相当于复制头文件的内容。如stdio.h头文件，它包含了<code>printf()</code>这一函数。</p>
<h2 id="1-6-关键字">1.6 关键字</h2>
<p>C语言的关键字是C语言的基本构成要素，共有32个，根据关键字的作用，可分其为数据类型关键字、控制语句关键字、存储类型关键字和其它关键字四类。</p>
<p><strong>1 数据类型关键字（12个）：</strong><br>
(1)  <code>char</code> ：声明字符型变量或函数<br>
(2) <code>double</code> ：声明双精度变量或函数<br>
(3) <code>enum</code> ：声明枚举类型<br>
(4) <code>float</code> ：声明浮点型变量或函数<br>
(5) <code>int</code> ：声明整型变量或函数<br>
(6) <code>long</code> ：声明长整型变量或函数<br>
(7) <code>short</code> ：声明短整型变量或函数<br>
(8) <code>signed</code> ：声明有符号类型变量或函数<br>
(9) <code>struct</code> ：声明结构体变量或函数<br>
(10) <code>union</code> ：声明共用体（联合）数据类型<br>
(11) <code>unsigned</code> ：声明无符号类型变量或函数<br>
(12) <code>void</code> ：声明函数无返回值或无参数，声明无类型指针</p>
<p><strong>2 控制语句关键字（12个）：</strong><br>
A循环语句<br>
(1) <code>for</code> ：一种循环语句(可意会不可言传）<br>
(2) <code>do</code> ：循环语句的循环体<br>
(3) <code>while</code> ：循环语句的循环条件<br>
(4) <code>break</code> ：跳出当前循环<br>
(5) <code>continue</code> ：结束当前循环，开始下一轮循环<br>
B条件语句<br>
(1) <code>if</code> : 条件语句<br>
(2) <code>else</code> ：条件语句否定分支（与 if 连用）<br>
(3) <code>goto</code> ：无条件跳转语句<br>
C开关语句<br>
(1) <code>switch</code> :用于开关语句<br>
(2) <code>case</code>：开关语句分支<br>
(3) <code>default</code>：开关语句中的“其他”分支<br>
D返回语句<br>
<code>return</code> ：函数返回语句（可以带参数，也可不带参数）</p>
<p><strong>3 存储类型关键字（4个）</strong><br>
(1) <code>auto</code> ：声明自动变量 一般不使用<br>
(2) <code>extern</code> ：声明变量是在其他文件正声明（也可以看做是引用变量）<br>
(3) <code>register</code>：声明积存器变量<br>
(4) <code>static</code> ：声明静态变量</p>
<p><strong>4 其它关键字（4个）：</strong><br>
(1) <code>const</code> ：声明只读变量<br>
(2) <code>sizeof</code> ：计算数据类型长度<br>
(3) <code>typedef</code> ：用以给数据类型取别名<br>
(4) <code>volatile</code> ：说明变量在程序执行中可被隐含地改变</p>
<p>你可能不明白这些关键字什么意思怎么用，但你只需要知道这些关键字不能随便用，它们被C语言内部定义占用了。</p>
<p><br><br><br></p>
<h1>Ⅱ —— 函数</h1>
<p>函数是用来完成特定任务的一组语句。在C语言中，每个程序至少有一个主函数 <code>main()</code> 。此外，C语言还提供了许多内置函数，可以在相应的头文件中找到。有时候，我们也可以称函数为方法。</p>
<p>当我们编写代码时，我们可以将其分割成不同的函数。划分代码到不同的函数中是我们自己决定的。但是从逻辑上来说，我们通常会根据每个函数执行特定的任务来进行划分。例如，如果我们正在编写一个计算器程序，我们可以使用四个函数分别处理加法、减法、乘法和除法。这样的划分可以让代码更有组织性，并且更易于理解和维护。</p>
<h2 id="2-1-函数的基本结构">2.1 函数的基本结构</h2>
<p>函数的结构应当如下，包括 <strong>函数返回类型return_type</strong> ， <strong>函数名字function_name</strong> 、 <strong>参数arguments</strong> 和 <strong>函数主体Body</strong> 等。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">return_type <span class="title function_">function_name</span><span class="params">(arguments)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// body</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>
<p><strong>函数返回类型</strong>：一个函数可以返回一个值，return_type是函数返回的值的数据类型。有些函数执行所需的操作而不返回值，在这种情况下，return_type 是关键字 <code>void</code> 。</p>
</li>
<li>
<p><strong>函数名字</strong>：这是函数的实际名称。函数名和参数列表一起构成了 <strong>函数签名（Function signature）</strong> 。</p>
</li>
<li>
<p><strong>参数列表</strong>：当函数被调用时，可以向参数传递值。参数列表包括函数参数的类型、顺序、数量。参数是可选的，也就是说，函数可能不包含参数。</p>
</li>
<li>
<p><strong>函数主体</strong>：函数主体包含一组定义函数执行任务的语句。若有返回值的函数使用 <code>return</code> 返回。函数主体中遇到返回表示结束函数。</p>
</li>
</ul>
<h2 id="2-2-函数声明和定义">2.2 函数声明和定义</h2>
<p>函数的产生有两个概念： <strong>函数声明（Function Statement）</strong> 和 <strong>函数定义（Function Definition）</strong> 。函数声明告诉编译器函数的名称、返回类型和参数。函数定义提供了函数的实际主体。 <strong>使用函数之前必须先声明（也可以直接声明并定义）。</strong><br>
开玩笑地说，声明就是你骗机器有这么一个函数，但是当机器要找这个函数用的时候，你最好是有个定义。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 函数声明</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数定义</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 函数声明并定义</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">sub</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> a - b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>C语言从上到下运行，如果是先写了 main 函数，再写 sub 函数，而在 main 函数调用了 sub 函数的情况下，需要有一个声明在 main 函数的前面，告知编译器有这个函数，否则按从上到下的顺序，此时并未出现 sub 函数；</p>
<p>如果是先写了 sub 函数，再写 main 函数，而在 main 函数调用了 sub 函数的情况下，在 main 函数之前的 sub 函数就相当于函数声明并定义，main 函数调用 sub 函数也自然成功。</p>
<p>函数声明中的参数列表可以不具体写变量名，但函数定义中的参数列表必须写变量名。如上述代码的声明可以写成：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>)</span>;</span><br></pre></td></tr></table></figure></div>
<h2 id="2-3-调用函数">2.3 调用函数</h2>
<p>当我们写完我们的函数，使用时直接称呼 <strong>函数签名</strong>（函数名字+参数列表）即可。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 声明并定义函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数调用</span></span><br><span class="line">add(c, d);</span><br></pre></td></tr></table></figure></div>
<h2 id="2-4-函数参数传递">2.4 函数参数传递</h2>
<p>如果函数要使用参数，接受参数值的变量称为函数的 <strong>形式参数</strong> 。如上面 <code>int add(int a, int b)</code> 中的 <code>a</code> 和 <code>b</code>。</p>
<p>如果调用函数时，传递进入的参数称为 <strong>实际参数</strong>。如上面 <code>add(1, 2)</code>中的 <code>c</code> 和 <code>d</code> 。</p>
<p>参数传递有两种方式： <strong>值传递</strong> 和 <strong>地址传递</strong> 。</p>
<ul>
<li>
<p><strong>值传递</strong>：把参数的数值复制给函数的形式参数。在这种情况下，修改函数内的形式参数对实际参数没有影响。</p>
</li>
<li>
<p><strong>地址（引用）传递</strong>：把参数的地址复制给函数的形式参数。在函数内，该地址用于访问调用中要用到的实际参数。这意味着，修改形式参数会影响实际参数。 <em>对于地址传递，经过指针的学习可能更清晰。</em></p>
</li>
</ul>
<p><br><br><br></p>
<h1>Ⅲ —— 数据、运算符及语句</h1>
<h2 id="3-1-数据的表现形式">3.1 数据的表现形式</h2>
<p>数据以常量、变量、常变量或标识符的形式出现。</p>
<p>变量、常变量的出现包括 <strong>声明</strong> 、 <strong>定义</strong> 、 <strong>初始化</strong> 三个步骤。 <strong>为变量分配地址和存储空间的称为定义，不分配地址的称为声明。</strong></p>
<p>变量定义：用于为变量分配存储空间，还可为变量指定初始值，程序中，变量有且仅有一个定义。</p>
<p>变量声明：用于向程序表明变量的类型和名字。</p>
<p>定义也是声明：当定义变量时我们声明了它的类型和名字。</p>
<p><strong>所有变量使用之前需要有声明或定义。</strong></p>
<ul>
<li>
<p><strong>常量</strong> ，其值不能改变的量。其分为 <strong>整型常量</strong> （即整数，如1，2，1000，666）、 <strong>实型常量</strong> 、 <strong>字符常量</strong> 。</p>
</li>
<li>
<p><strong>实型常量</strong> ，包括十进制小数形式（由数字和小数点组成）和指数形式，指数形式以E或e代表以10为底的指数，如1e6，注意：e或E之前必须有数字，且e或E之后必须为整数；</p>
</li>
<li>
<p><strong>字符常量之字符常量</strong> ，由 <code>‘’</code> （单引号）包括的一个字符，如 <code>‘a’</code> 、 <code>‘A’</code> 等。普通字符，详见ASCII字符集；转义字符，特殊形式的字符，以 <code>\</code> 开头。  <em>引号在此充当界限符，字符常量和字符串常量不包括引号。</em></p>
</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">转义字符</th>
<th style="text-align:center">字符值</th>
<th style="text-align:center">输出结果</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>\'</code></td>
<td style="text-align:center">一个单引号</td>
<td style="text-align:center"><code>'</code></td>
</tr>
<tr>
<td style="text-align:center"><code>\&quot;</code></td>
<td style="text-align:center">一个双引号</td>
<td style="text-align:center"><code>&quot;</code></td>
</tr>
<tr>
<td style="text-align:center"><code>\?</code></td>
<td style="text-align:center">一个问号</td>
<td style="text-align:center"><code>?</code></td>
</tr>
<tr>
<td style="text-align:center"><code>\\</code></td>
<td style="text-align:center">一个反斜杠</td>
<td style="text-align:center"><code>\</code></td>
</tr>
<tr>
<td style="text-align:center"><code>\a</code></td>
<td style="text-align:center">警告alert</td>
<td style="text-align:center">产生声音或视觉信号</td>
</tr>
<tr>
<td style="text-align:center"><code>\b</code></td>
<td style="text-align:center">退格backspace</td>
<td style="text-align:center">将光标后退一个字符</td>
</tr>
<tr>
<td style="text-align:center"><code>\f</code></td>
<td style="text-align:center">换页form feed</td>
<td style="text-align:center">将光标移到下一页</td>
</tr>
<tr>
<td style="text-align:center"><code>\n</code></td>
<td style="text-align:center">换行</td>
<td style="text-align:center">将光标移到下一行</td>
</tr>
<tr>
<td style="text-align:center"><code>\r</code></td>
<td style="text-align:center">回车carriage return</td>
<td style="text-align:center">将光标移到本行开头</td>
</tr>
<tr>
<td style="text-align:center"><code>\t</code></td>
<td style="text-align:center">水平制表符</td>
<td style="text-align:center">将光标移到下一个Tab位置</td>
</tr>
<tr>
<td style="text-align:center"><code>\v</code></td>
<td style="text-align:center">垂直制表符</td>
<td style="text-align:center">将光标移到下一个垂直制表符</td>
</tr>
<tr>
<td style="text-align:center"><code>\o</code></td>
<td style="text-align:center">与该八进制码对应的ASCII字符</td>
<td style="text-align:center">与该八进制码对应的ASCII字符</td>
</tr>
<tr>
<td style="text-align:center"><code>\xh[h…]</code></td>
<td style="text-align:center">与该十六进制码对应的ASCII字符</td>
<td style="text-align:center">与该十六进制码对应的ASCII字符</td>
</tr>
</tbody>
</table>
<ul>
<li>
<p><strong>字符常量之字符串常量</strong> ，由 <code>“ ”</code> （双引号）包括的一个字符串，可以超过一个字符，如 <code>“boy”</code> 。</p>
</li>
<li>
<p><strong>字符常量之符号常量</strong> ，用 <code>#define</code> 指令指定一个符号名称代表一个常量。</p>
</li>
</ul>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> Pi 3.14 <span class="comment">//符号常量，之后所有语句中所有Pi用3.14替换</span></span></span><br></pre></td></tr></table></figure></div>
<p><em>#define宏定义与常变量const的区别是，#define宏定义的值为实型常量，且#define为预处理命令，不分配内存，但常变量具有使程序稳定性提高的优点，使用方便。</em></p>
<ul>
<li><strong>变量</strong> ，在运行期间可以改变的量。变量必须先定义后使用。</li>
</ul>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a;  <span class="comment">//定义整型变量 a</span></span><br><span class="line">a = <span class="number">3</span>;  <span class="comment">//把3赋值给变量 a</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li><strong>常变量</strong> ，在变量存在期间不可改变的量。也必须先定义后使用。用法是在定义变量前加上“const”。</li>
</ul>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> a = <span class="number">3</span>;  <span class="comment">//定义一个整数常变量 a，后续不可修改。 </span></span><br></pre></td></tr></table></figure></div>
<ul>
<li><strong>标识符</strong> ，简单来说就是一个对象的名字，遵守命名规则。</li>
</ul>
<p>变量的命名规则：</p>
<ol>
<li>
<p>变量名的开头必须是字母或下划线，不能是数字。实际编程中最常用的是以字母开头，而以下划线开头的变量名是系统专用的。</p>
</li>
<li>
<p>变量名中的字母是区分大小写的。比如 a 和 A 是不同的变量名，num 和 Num 也是不同的变量名。</p>
</li>
<li>
<p>变量名绝对不可以是C语言关键字。</p>
</li>
<li>
<p>变量名中不能有空格。这个可以这样理解：因为上面我们说过，变量名是字母、数字、下划线的组合，没有空格这一项。</p>
</li>
</ol>
<h2 id="3-2-数据的类型">3.2 数据的类型</h2>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/c_type.jpg" alt="数据类型"><figcaption>数据类型</figcaption></figure></p>
<h3 id="3-2-1-整型数据">3.2.1 整型数据</h3>
<table>
<thead>
<tr>
<th style="text-align:center">类型</th>
<th style="text-align:center">存储大小</th>
<th style="text-align:center">表示值范围（十进制）</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>char</code></td>
<td style="text-align:center">1字节</td>
<td style="text-align:center">-128~127</td>
</tr>
<tr>
<td style="text-align:center"><code>unsigned char</code></td>
<td style="text-align:center">1字节</td>
<td style="text-align:center">0~255</td>
</tr>
<tr>
<td style="text-align:center"><code>signed char</code></td>
<td style="text-align:center">1字节</td>
<td style="text-align:center">-128~127</td>
</tr>
<tr>
<td style="text-align:center"><code>int</code></td>
<td style="text-align:center">4字节</td>
<td style="text-align:center">-2147483648（ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><msup><mn>2</mn><mn>31</mn></msup></mrow><annotation encoding="application/x-tex">-2^{31}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span> ）~2147483647（ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>31</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{31}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> ）</td>
</tr>
<tr>
<td style="text-align:center"><code>unsigned int</code></td>
<td style="text-align:center">4字节</td>
<td style="text-align:center">0~4294967295（ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>32</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{32}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> ）</td>
</tr>
<tr>
<td style="text-align:center"><code>short</code></td>
<td style="text-align:center">2字节</td>
<td style="text-align:center">-32768~32767</td>
</tr>
<tr>
<td style="text-align:center"><code>unsigned short</code></td>
<td style="text-align:center">2字节</td>
<td style="text-align:center">0~65535</td>
</tr>
<tr>
<td style="text-align:center"><code>long</code></td>
<td style="text-align:center">4字节</td>
<td style="text-align:center">-2147483648（ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><msup><mn>2</mn><mn>31</mn></msup></mrow><annotation encoding="application/x-tex">-2^{31}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span> ）~2147483648（ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>31</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{31}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> ）</td>
</tr>
<tr>
<td style="text-align:center"><code>unsigned long</code></td>
<td style="text-align:center">4字节</td>
<td style="text-align:center">0~4294967295（ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>32</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{32}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> ）</td>
</tr>
<tr>
<td style="text-align:center"><code>long int</code></td>
<td style="text-align:center">4字节</td>
<td style="text-align:center">-2147483648（ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><msup><mn>2</mn><mn>31</mn></msup></mrow><annotation encoding="application/x-tex">-2^{31}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span> ）~2147483648（ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>31</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{31}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> ）</td>
</tr>
<tr>
<td style="text-align:center"><code>unsigned long int</code></td>
<td style="text-align:center">4字节</td>
<td style="text-align:center">0~4294967295（ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>32</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{32}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> ）</td>
</tr>
<tr>
<td style="text-align:center"><code>long long int</code></td>
<td style="text-align:center">8字节</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><msup><mn>2</mn><mn>64</mn></msup></mrow><annotation encoding="application/x-tex">-2^{64}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span></span>~<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>64</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{64}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span><span class="mord mtight">4</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></td>
</tr>
<tr>
<td style="text-align:center"><code>unsigned long long int</code></td>
<td style="text-align:center">8字节</td>
<td style="text-align:center">0~ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>64</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{64}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span><span class="mord mtight">4</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></td>
</tr>
</tbody>
</table>
<p>注意，各种类型的存储大小与系统位数有关，但目前通用的以64位系统为主，下同。为了得到某个类型或某个变量在特定平台上的准确大小，您可以使用 sizeof 运算符。表达式 <code>sizeof(type)</code> 得到对象或类型的存储字节大小。</p>
<p>上述只讨论十进制，实际上C语言还可以表示八进制(<code>int a = 010</code>)和十六进制(<code>int a = 0x10</code>)。</p>
<p>特别指出，unsigned表示无符号数据，即非负数，但只有整型和字符型数据可以加unsigned修饰符。</p>
<p>由于ASCII码的存在， <code>char</code> 类型的数据范围恰好最小完整表达字符，所以 <code>char</code> 类型又称为字符类型。</p>
<h3 id="3-2-2-浮点型数据">3.2.2 浮点型数据</h3>
<table>
<thead>
<tr>
<th style="text-align:center">类型</th>
<th style="text-align:center">存储大小</th>
<th style="text-align:center">表示值范围</th>
<th style="text-align:center">精度</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>float</code></td>
<td style="text-align:center">4字节</td>
<td style="text-align:center">1.2E-38~3.4E+38</td>
<td style="text-align:center">6位有效数字</td>
</tr>
<tr>
<td style="text-align:center"><code>double</code></td>
<td style="text-align:center">8字节</td>
<td style="text-align:center">2.3E-308~1.7E+308</td>
<td style="text-align:center">15位有效数字</td>
</tr>
<tr>
<td style="text-align:center"><code>long double</code></td>
<td style="text-align:center">16字节</td>
<td style="text-align:center">3.4E-4932~1.1E+4932</td>
<td style="text-align:center">19位有效数字</td>
</tr>
</tbody>
</table>
<p>需要注意，计算机对于浮点数的存储并不完全精准。</p>
<p>若我们声明定义的变量超过数据类型的数据范围时，编译会警告我们，我们可在数据末尾加专用字符进行类型转换。如在 <code>float</code> 类型数据后加“f”，指定为 <code>float</code> 类型，如在实型变量后加“L”，指定为 <code>long double</code> 型。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">float</span> a = <span class="number">3.14159</span>;</span><br><span class="line"><span class="comment">//在某些系统中，会发出警告超出float类型，系统自动转化会影响精度</span></span><br><span class="line"><span class="type">float</span> a = <span class="number">3.14159f</span>;</span><br><span class="line"><span class="comment">//在数字后面加“f”，指定为float型，编译时不发出警告</span></span><br></pre></td></tr></table></figure></div>
<h3 id="3-2-3-void类型">3.2.3 Void类型</h3>
<p><code>void</code> 它通常用于以下三种情况下：</p>
<ol>
<li>函数返回为空：C中有各种函数都不返回值，或者可以说它们返回空。不返回值的函数的返回类型为空。</li>
<li>函数参数为空：C中有各种函数不接受任何参数。不带参数的函数可以接受一个 <code>void</code> 。</li>
<li>指针指向 <code>void</code> ：类型为 <code>void *</code> 的指针代表对象的地址，而不是类型。返回指向 <code>void</code> 的指针，可以转换为任何数据类型。</li>
</ol>
<h3 id="3-2-4-类型转换">3.2.4 类型转换</h3>
<p>类型转换是将一个数据类型的值转换为另一种数据类型的值。</p>
<p>C 语言中有两种类型转换：</p>
<ul>
<li><strong>隐式类型转换</strong>：隐式类型转换是在表达式中自动发生的，无需进行任何明确的指令或函数调用。它通常是将一种较小的类型自动转换为较大的类型，例如，将int类型转换为long类型或float类型转换为double类型。隐式类型转换也可能会导致数据精度丢失或数据截断。</li>
</ul>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i = <span class="number">10</span>;</span><br><span class="line"><span class="type">float</span> f = <span class="number">3.14</span>;</span><br><span class="line"><span class="type">double</span> d = i + f; <span class="comment">// 隐式将int类型转换为double类型</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li><strong>显式类型转换</strong>：显式类型转换需要使用强制类型转换运算符（type casting operator），它可以将一个数据类型的值强制转换为另一种数据类型的值。强制类型转换可以使程序员在必要时对数据类型进行更精确的控制，但也可能会导致数据丢失或截断。</li>
</ul>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> d = <span class="number">3.14159</span>;</span><br><span class="line"><span class="type">int</span> i = (<span class="type">int</span>)d; <span class="comment">// 显式将double类型转换为int类型</span></span><br></pre></td></tr></table></figure></div>
<h2 id="3-3-运算符">3.3 运算符</h2>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/c_cop.jpg" alt="运算符"><figcaption>运算符</figcaption></figure></p>
<h3 id="3-3-1-算术运算符">3.3.1 算术运算符</h3>
<table>
<thead>
<tr>
<th style="text-align:center">运算符</th>
<th style="text-align:center">描述</th>
<th style="text-align:center">实例</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>+</code></td>
<td style="text-align:center">左操作数和右操作数相加</td>
<td style="text-align:center"><code>A + B</code></td>
</tr>
<tr>
<td style="text-align:center"><code>-</code></td>
<td style="text-align:center">左操作数减去右操作数</td>
<td style="text-align:center"><code>A - B</code></td>
</tr>
<tr>
<td style="text-align:center"><code>*</code></td>
<td style="text-align:center">左操作数和右操作数相乘</td>
<td style="text-align:center"><code>A * B</code></td>
</tr>
<tr>
<td style="text-align:center"><code>/</code></td>
<td style="text-align:center">左操作数除以右操作数</td>
<td style="text-align:center"><code>A / B</code></td>
</tr>
<tr>
<td style="text-align:center"><code>%</code></td>
<td style="text-align:center">左操作数除以右操作数后的余数</td>
<td style="text-align:center"><code>A % B</code></td>
</tr>
<tr>
<td style="text-align:center"><code>++</code></td>
<td style="text-align:center">操作数整数值自增1</td>
<td style="text-align:center"><code>A ++</code></td>
</tr>
<tr>
<td style="text-align:center"><code>--</code></td>
<td style="text-align:center">操作数整数值自减1</td>
<td style="text-align:center"><code>A --</code></td>
</tr>
</tbody>
</table>
<p><code>%</code> 运算符的操作数只可以是整数。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> a, b, ans1;</span><br><span class="line">	<span class="type">int</span> c, d, ans2;</span><br><span class="line">	ans1 = a + b; <span class="comment">//两个整型变量相加的结果仍为整型。</span></span><br><span class="line">	ans1 = a - b; <span class="comment">//两个整型变量相减的结果仍为整型。</span></span><br><span class="line">	ans1 = a * b; <span class="comment">//两个整型变量相乘的结果仍为整型。</span></span><br><span class="line">	ans1 = a / b; <span class="comment">//两个整型变量相除的结果仍为整型，多数为除不尽向零取整。</span></span><br><span class="line">	<span class="comment">//如 5/3=1，-5/3=-1；</span></span><br><span class="line">	ans2 = c % d; <span class="comment">// 取余运算要求运算对象均为整数，即整型。</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>应当注意， <code>++i</code> 和 <code>i++</code> ， <code>--i</code> 和 <code>i--</code> 是两回事。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test2.c</span></span><br><span class="line"><span class="comment">//以下例子可能理解更加深刻</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> i,j;</span><br><span class="line">  </span><br><span class="line">	i = <span class="number">1</span>;</span><br><span class="line">	i++;    <span class="comment">//i使用后，使i的值加一,此时 i=1；</span></span><br><span class="line">	j = i;    <span class="comment">// j=i=2;</span></span><br><span class="line">    </span><br><span class="line">	i = <span class="number">1</span>;</span><br><span class="line">	++i;    <span class="comment">//i使用前，使i的值加一,此时 i=2；</span></span><br><span class="line">	j = i;    <span class="comment">// j=i=2;</span></span><br><span class="line">    </span><br><span class="line">	i = <span class="number">1</span>;</span><br><span class="line">	i--;    <span class="comment">//j使用后，使i的值减一，此时 i=1；</span></span><br><span class="line">	j = i;    <span class="comment">//j=i=0;</span></span><br><span class="line">    </span><br><span class="line">	i = <span class="number">1</span>;</span><br><span class="line">	--i;    <span class="comment">//j使用前，使i的值减一，此时 i=0；</span></span><br><span class="line">	j = i;    <span class="comment">//j=i=0;</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h3 id="3-3-2-关系运算符">3.3.2 关系运算符</h3>
<table>
<thead>
<tr>
<th style="text-align:center">运算符</th>
<th style="text-align:center">描述</th>
<th style="text-align:center">实例</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>==</code></td>
<td style="text-align:center">检查两个操作数的值是否相等，如果相等则条件为真</td>
<td style="text-align:center"><code>A == B</code></td>
</tr>
<tr>
<td style="text-align:center"><code>!=</code></td>
<td style="text-align:center">检查两个操作数的值是否相等，如果不相等则条件为真</td>
<td style="text-align:center"><code>A != B</code></td>
</tr>
<tr>
<td style="text-align:center"><code>&gt;</code></td>
<td style="text-align:center">检查左操作数的值是否大于右操作数的值，如果是则条件为真</td>
<td style="text-align:center"><code>A &gt; B</code></td>
</tr>
<tr>
<td style="text-align:center"><code>&lt;</code></td>
<td style="text-align:center">检查左操作数的值是否小于右操作数的值，如果是则条件为真。</td>
<td style="text-align:center"><code>A &lt; B</code></td>
</tr>
<tr>
<td style="text-align:center"><code>&gt;=</code></td>
<td style="text-align:center">检查左操作数的值是否大于等于右操作数的值，如果是则条件为真。</td>
<td style="text-align:center"><code>A &gt;= B</code></td>
</tr>
<tr>
<td style="text-align:center"><code>&lt;=</code></td>
<td style="text-align:center">检查左操作数的值是否小于等于右操作数的值，如果是则条件为真。</td>
<td style="text-align:center"><code>A &lt;= B</code></td>
</tr>
</tbody>
</table>
<h3 id="3-3-3-逻辑运算符">3.3.3 逻辑运算符</h3>
<table>
<thead>
<tr>
<th style="text-align:center">运算符</th>
<th style="text-align:center">描述</th>
<th style="text-align:center">实例</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>&amp;&amp;</code></td>
<td style="text-align:center">逻辑与运算符，如果两个操作数都非零，则条件为真。</td>
<td style="text-align:center"><code>A &amp;&amp; B</code></td>
</tr>
<tr>
<td style="text-align:center"><code>\|\|</code></td>
<td style="text-align:center">逻辑或运算符，如果两个操作数中有任意一个非零，则条件为真</td>
<td style="text-align:center"><code>A \|\| B</code></td>
</tr>
<tr>
<td style="text-align:center"><code>!</code></td>
<td style="text-align:center">逻辑非运算符，用来逆转操作数的逻辑状态。如果条件为真则逻辑非运算符将使其为假。</td>
<td style="text-align:center"><code>!A</code></td>
</tr>
</tbody>
</table>
<h3 id="3-3-4-位运算符">3.3.4 位运算符</h3>
<p>位运算符是对数据转化为二进制，再逐位进行运算。如<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>6</mn><msub><mn>0</mn><mn>10</mn></msub><mo>=</mo><mn>0011110</mn><msub><mn>0</mn><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">60_{10} = 00111100_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">6</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，再对每一位进行逻辑运算。</p>
<table>
<thead>
<tr>
<th style="text-align:center">运算符</th>
<th style="text-align:center">描述</th>
<th style="text-align:center">实例</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>&amp;</code></td>
<td style="text-align:center">按位与运算符，对两个操作数的每一位执行逻辑与操作</td>
<td style="text-align:center"><code>A &amp; B</code></td>
</tr>
<tr>
<td style="text-align:center"><code>\|</code></td>
<td style="text-align:center">按位或运算符，对两个操作数的每一位执行逻辑或操作</td>
<td style="text-align:center"><code>A \| B</code></td>
</tr>
<tr>
<td style="text-align:center"><code>^</code></td>
<td style="text-align:center">按位异或运算符，对两个操作数的每一位执行逻辑异或操作</td>
<td style="text-align:center"><code>A ^ B</code></td>
</tr>
<tr>
<td style="text-align:center"><code>~</code></td>
<td style="text-align:center">按位取反运算符，对两个操作数的每一位执行逻辑取反操作</td>
<td style="text-align:center"><code>~A</code></td>
</tr>
<tr>
<td style="text-align:center"><code>&lt;&lt;</code></td>
<td style="text-align:center">将操作数的所有位向左移动指定的位数。左移n位相当于乘以2的n次方</td>
<td style="text-align:center"><code>A &lt;&lt; n</code></td>
</tr>
<tr>
<td style="text-align:center"><code>&gt;&gt;</code></td>
<td style="text-align:center">将操作数的所有位向右移动指定的位数。右移n位相当于除以2的n次方</td>
<td style="text-align:center"><code>A &gt;&gt; n</code></td>
</tr>
</tbody>
</table>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// bit.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"> </span><br><span class="line">	<span class="type">unsigned</span> <span class="type">int</span> a = <span class="number">60</span>;    <span class="comment">/* 60 = 0011 1100 */</span>  </span><br><span class="line">	<span class="type">unsigned</span> <span class="type">int</span> b = <span class="number">13</span>;    <span class="comment">/* 13 = 0000 1101 */</span></span><br><span class="line">	<span class="type">int</span> c = <span class="number">0</span>;           </span><br><span class="line"> </span><br><span class="line">	c = a &amp; b;       <span class="comment">/* 12 = 0000 1100 */</span> </span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;c 的值是 %d\n&quot;</span>, c ); <span class="comment">// 一个输出的函数</span></span><br><span class="line"> </span><br><span class="line">	c = a | b;       <span class="comment">/* 61 = 0011 1101 */</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;c 的值是 %d\n&quot;</span>, c );</span><br><span class="line"> </span><br><span class="line">	c = a ^ b;       <span class="comment">/* 49 = 0011 0001 */</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;c 的值是 %d\n&quot;</span>, c );</span><br><span class="line"> </span><br><span class="line">	c = ~a;          <span class="comment">/*-61 = 1100 0011 */</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;c 的值是 %d\n&quot;</span>, c );</span><br><span class="line"> </span><br><span class="line">	c = a &lt;&lt; <span class="number">2</span>;     <span class="comment">/* 240 = 1111 0000 */</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;c 的值是 %d\n&quot;</span>, c );</span><br><span class="line"> </span><br><span class="line">	c = a &gt;&gt; <span class="number">2</span>;     <span class="comment">/* 15 = 0000 1111 */</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;c 的值是 %d\n&quot;</span>, c );</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h3 id="3-3-5-赋值运算符">3.3.5 赋值运算符</h3>
<table>
<thead>
<tr>
<th style="text-align:center">运算符</th>
<th style="text-align:center">描述</th>
<th style="text-align:center">实例</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>=</code></td>
<td style="text-align:center">把右操作数的值赋给左操作数</td>
<td style="text-align:center"><code>C = A + B</code></td>
</tr>
<tr>
<td style="text-align:center"><code>+=</code></td>
<td style="text-align:center">把右边操作数加上左边操作数的结果赋给左边操作数</td>
<td style="text-align:center"><code>C += A</code> 相当于 <code>C = C + A</code></td>
</tr>
<tr>
<td style="text-align:center"><code>-=</code></td>
<td style="text-align:center">把右边操作数减去左边操作数的结果赋给左边操作数</td>
<td style="text-align:center"><code>C -= A</code> 相当于 <code>C = C - A</code></td>
</tr>
<tr>
<td style="text-align:center"><code>*=</code></td>
<td style="text-align:center">把右边操作数乘以左边操作数的结果赋给左边操作数</td>
<td style="text-align:center"><code>C *= A</code> 相当于 <code>C = C * A</code></td>
</tr>
<tr>
<td style="text-align:center"><code>/=</code></td>
<td style="text-align:center">把右边操作数除以左边操作数的结果赋给左边操作数</td>
<td style="text-align:center"><code>C /= A</code> 相当于 <code>C = C / A</code></td>
</tr>
<tr>
<td style="text-align:center"><code>%=</code></td>
<td style="text-align:center">把右边操作数取余左边操作数的结果赋给左边操作数</td>
<td style="text-align:center"><code>C %= A</code> 相当于 <code>C = C % A</code></td>
</tr>
<tr>
<td style="text-align:center"><code>&lt;&lt;=</code></td>
<td style="text-align:center">左移且赋值运算符</td>
<td style="text-align:center"><code>C &lt;&lt;= A</code> 相当于 <code>C = C &lt;&lt; A</code></td>
</tr>
<tr>
<td style="text-align:center"><code>&gt;&gt;=</code></td>
<td style="text-align:center">右移且赋值运算符</td>
<td style="text-align:center"><code>C &gt;&gt;= A</code> 相当于 <code>C = C &gt;&gt; A</code></td>
</tr>
<tr>
<td style="text-align:center"><code>&amp;=</code></td>
<td style="text-align:center">按位与且赋值运算符</td>
<td style="text-align:center"><code>C &amp;= A</code> 相当于 <code>C = C &amp; A</code></td>
</tr>
<tr>
<td style="text-align:center"><code>^=</code></td>
<td style="text-align:center">按位异或且赋值运算符</td>
<td style="text-align:center"><code>C ^= A</code> 相当于 <code>C = C ^ A</code></td>
</tr>
<tr>
<td style="text-align:center"><code>\|=</code></td>
<td style="text-align:center">按位或且赋值运算符</td>
<td style="text-align:center"><code>C \|= A</code> 相当于 <code>C = C \| A</code></td>
</tr>
</tbody>
</table>
<p>赋值运算符参与的表达式中，赋值表达式返回赋值符号右边的值。</p>
<h3 id="3-3-6-其他运算符">3.3.6 其他运算符</h3>
<ul>
<li><strong>条件运算符</strong> <code>（? : ）</code> ：其形式为 <code>(表达式1)? 表达式2 : 表达式3</code> ，先求解表达式1，若其值为真（非0）则将表达式2的值作为整个表达式的取值，否则（表达式1的值为0）将表达式3的值作为整个表达式的取值。</li>
</ul>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> i = <span class="number">9</span>, o = <span class="number">6</span>, q;</span><br><span class="line">	i &gt; o ? i : o;</span><br><span class="line">	<span class="comment">// i大于o吗，大于（真）则返回i的值，小于（假）则返回o的值。</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<ul>
<li><strong>逗号运算符</strong> <code>,</code> ：其形式为 <code>表达式1,表达式2</code> ，逗号运算符确保操作数被顺序地处理：先计算左边的操作数，再计算右边的操作数。右操作数的类型和值作为整个表达式的结果，而左操作数只是当作副作用被计算，其值和类型不会被返回。</li>
</ul>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> i = <span class="number">9</span>, o = <span class="number">6</span>, q;</span><br><span class="line">	q = (i + o, i - o);</span><br><span class="line">	<span class="comment">// q = 3</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>
<p><strong>指针运算符</strong> <code>&amp;</code> 和 <code>*</code> 。 <code>*</code> ：取值符，指向一个变量； <code>&amp;</code> ：取地址符，取址运算符的操作数必须是在内存中可寻址到的地址。换句话说，该运算符只能用于函数或对象。</p>
</li>
<li>
<p><strong>成员运算符</strong> <code>.</code> 和 <code>-&gt;</code> 。用于返回复杂数据类型的子成员。</p>
</li>
<li>
<p><strong>下标运算符</strong> <code>[]</code> 。用于访问下标，在数组中用到。</p>
</li>
<li>
<p><strong>求字节运算符</strong> <code>sizeof()</code> 。返回变量的大小，将需要求字节内存的变量或其他数据结构放于括号中。</p>
</li>
<li>
<p><strong>强制类型转换运算符</strong> <code>(类型名)(表达式)</code> 。 如 <code>(float)(a + b)</code> 。</p>
</li>
</ul>
<h3 id="3-3-7-运算符优先级">3.3.7 运算符优先级</h3>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/c_pre.jpg" alt="运算符优先级"><figcaption>运算符优先级</figcaption></figure></p>
<h2 id="3-4-语句">3.4 语句</h2>
<ol>
<li><strong>控制语句</strong></li>
</ol>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//条件语句</span></span><br><span class="line"><span class="keyword">if</span>(条件)  <span class="comment">//如果小括号里面的条件为真，则运行大括号的语句。</span></span><br><span class="line">&#123;</span><br><span class="line">  …… </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//循环语句</span></span><br><span class="line"><span class="keyword">for</span>(语句<span class="number">1</span>;语句<span class="number">2</span>;语句<span class="number">3</span>)  <span class="comment">//语句2为条件，为真则运行大括号的语句，直至条件为假</span></span><br><span class="line">&#123;</span><br><span class="line">  …… </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//注意，小括号内必须得有两个分号，即使没有语句</span></span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//循环语句</span></span><br><span class="line"><span class="keyword">while</span>(条件)  <span class="comment">//如果小括号的条件为真，则运行大括号的语句，直至条件为假</span></span><br><span class="line">&#123;</span><br><span class="line">  …… </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">  …… </span><br><span class="line">&#125;<span class="keyword">while</span>(条件);  <span class="comment">//如果小括号的条件为真，则运行大括号的语句，直至条件为假</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 注意，while(…)&#123;…&#125;和do&#123;…&#125;while;的区别是，do-while至少循环一次，无视条件真或假。</span></span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="comment">//用于循环语句</span></span><br><span class="line"><span class="comment">//作用是结束该次循环，转至下一次循环，不改变总循环次数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="comment">//用于循环语句或者switch语句</span></span><br><span class="line"><span class="comment">//作用是结束整个循环，改变总循环次数</span></span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//条件语句</span></span><br><span class="line"><span class="keyword">switch</span> (对象)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">case</span> 值<span class="number">1</span>:</span><br><span class="line">    语句<span class="number">1</span> </span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> 值<span class="number">2</span>:</span><br><span class="line">    语句<span class="number">2</span> </span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">default</span>:  <span class="comment">//default表示除以上case之外的情况</span></span><br><span class="line">    语句<span class="number">3</span></span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//该语句每个case中的break不可省略。</span></span><br><span class="line"><span class="comment">//若省略break则系统会一直往下读语句，直至结束或者break，可自行上机作死</span></span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">return</span> ……;</span><br><span class="line"><span class="comment">//从函数中返回语句，一般情况下返回语句也是函数结束的地方</span></span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//转向语句</span></span><br><span class="line"><span class="keyword">goto</span> a;</span><br><span class="line">  number = <span class="number">0</span>;</span><br><span class="line">a:</span><br><span class="line">  number = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//结果number为1;  </span></span><br><span class="line"><span class="comment">//声明一处标记为a，使用goto语句使程序转向a处；</span></span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>
<p><strong>函数调用语句</strong>：右一个函数调用加分号构成。</p>
</li>
<li>
<p><strong>复合语句</strong>：用 <code>&#123;&#125;</code> 括起来的语句，也称语句块。</p>
</li>
<li>
<p><strong>空语句</strong>：只有一个分号。</p>
</li>
<li>
<p><strong>表达式语句</strong>：一个表达式加上一个分号构成。用C语言运算符将运算对象连接起来的式子称为表达式。</p>
</li>
</ol>
<h2 id="3-5-变量的作用范围">3.5 变量的作用范围</h2>
<p>任何一种编程中， <strong>作用域</strong> 是程序中定义的变量所存在的区域，超过该区域变量就不能被访问。</p>
<p>C语言中有三个地方可以声明变量：</p>
<ol>
<li>
<p>在函数或块（由花括号包括起来的称为代码块）内部的局部变量</p>
</li>
<li>
<p>在所有函数外部的全局变量</p>
</li>
<li>
<p>在形式参数的函数参数定义中</p>
</li>
</ol>
<p>变量按作用范围可分为 <strong>局部变量</strong> 、 <strong>全局变量</strong> 、 <strong>形式参数</strong> 。</p>
<ul>
<li><strong>局部变量</strong></li>
</ul>
<p>在某个函数或块的内部声明的变量称为局部变量。它们只能被该函数或该代码块内部的语句使用。局部变量在函数外部是不可知的。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// 局部变量声明</span></span><br><span class="line">	<span class="type">int</span> a, b;</span><br><span class="line">	<span class="type">int</span> c;</span><br><span class="line"> </span><br><span class="line">	<span class="comment">// 实际初始化 </span></span><br><span class="line">	a = <span class="number">10</span>;</span><br><span class="line">	b = <span class="number">20</span>;</span><br><span class="line">	c = a + b;</span><br><span class="line"> </span><br><span class="line">	<span class="built_in">printf</span> (<span class="string">&quot;value of a = %d, b = %d and c = %d\n&quot;</span>, a, b, c);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<ul>
<li><strong>全局变量</strong></li>
</ul>
<p>全局变量是定义在函数外部，通常是在程序的顶部。全局变量在整个程序生命周期内都是有效的，在任意的函数内部能访问全局变量。也就是说，全局变量在声明后整个程序中都是可用的。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">// 全局变量声明</span></span><br><span class="line"><span class="type">int</span> g;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span> <span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// 局部变量声明</span></span><br><span class="line">	<span class="type">int</span> a, b;</span><br><span class="line"> </span><br><span class="line">	<span class="comment">// 实际初始化</span></span><br><span class="line">	a = <span class="number">10</span>;</span><br><span class="line">	b = <span class="number">20</span>;</span><br><span class="line">	g = a + b;</span><br><span class="line"> </span><br><span class="line">	<span class="built_in">printf</span> (<span class="string">&quot;value of a = %d, b = %d and g = %d\n&quot;</span>, a, b, g);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<ul>
<li><strong>形式参数</strong></li>
</ul>
<p>函数的参数就是形式参数，被当作该函数内的局部变量，如果与全局变量同名它们会优先使用，同样如果局部变量与全局变量同名时优先使用当前区域的局部变量。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">// 全局变量声明</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// 在主函数中的局部变量声明</span></span><br><span class="line">	<span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">	<span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line">	<span class="type">int</span> c = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>)</span>;</span><br><span class="line"> </span><br><span class="line">	<span class="built_in">printf</span> (<span class="string">&quot;主函数中的 a = %d\n&quot;</span>, a);</span><br><span class="line">	c = sum(a, b);</span><br><span class="line">	<span class="built_in">printf</span> (<span class="string">&quot;主函数中的 c = %d\n&quot;</span>, c);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 添加两个整数的函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">printf</span> (<span class="string">&quot;sum函数中的 a = %d\n&quot;</span>,  a);</span><br><span class="line">	<span class="built_in">printf</span> (<span class="string">&quot;sum函数中的 b = %d\n&quot;</span>,  b);</span><br><span class="line">	<span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">输出结果：</span><br><span class="line">主函数中的 a = 10</span><br><span class="line">sum函数中的 a = 10</span><br><span class="line">sum函数中的 b = 20</span><br><span class="line">主函数中的 c = 30</span><br></pre></td></tr></table></figure></div>
<ul>
<li><strong>全局变量与局部变量在内存中的区别</strong></li>
</ul>
<ol>
<li>
<p>全局变量保存在内存的全局存储区中，占用静态的存储单元；</p>
</li>
<li>
<p>局部变量保存在栈中，只有在所在函数被调用时才动态地为变量分配存储单元。</p>
</li>
</ol>
<ul>
<li><strong>局部变量和全局变量的初始化</strong></li>
</ul>
<p>当局部变量被定义时，系统不会对其初始化，必须自行对其初始化。定义全局变量时，系统会自动对其初始化，如下所示：</p>
<table>
<thead>
<tr>
<th style="text-align:center">数据类型</th>
<th style="text-align:center">初始化默认值</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>int</code></td>
<td style="text-align:center"><code>0</code></td>
</tr>
<tr>
<td style="text-align:center"><code>char</code></td>
<td style="text-align:center"><code>\0</code></td>
</tr>
<tr>
<td style="text-align:center"><code>float</code></td>
<td style="text-align:center"><code>0</code></td>
</tr>
<tr>
<td style="text-align:center"><code>double</code></td>
<td style="text-align:center"><code>0</code></td>
</tr>
<tr>
<td style="text-align:center"><code>pointer</code>（指针）</td>
<td style="text-align:center"><code>NULL</code></td>
</tr>
</tbody>
</table>
<h1>Ⅳ —— 格式化输入输出</h1>
<p>格式化的输入输出函数位于 <code>stdio.h</code> 头文件中。</p>
<h2 id="4-1-格式化的输出">4.1 格式化的输出</h2>
<ul>
<li><code>printf()</code>函数进行格式化的输出，其函数定义如下：</li>
</ul>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">printf</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *fmt, ...)</span>;</span><br><span class="line"><span class="comment">// fmt：为常量字符串,存储在内存的常量字段，fmt为该字符串首地址；</span></span><br><span class="line"><span class="comment">// ...表示存在可变形参</span></span><br><span class="line"><span class="comment">// 输出正确返回输出的字符总数，输出错误返回负值</span></span><br></pre></td></tr></table></figure></div>
<p>也可以参考这样的格式： <code>printf(格式控制,输出表列)</code></p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// printf.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">1</span>, b = <span class="number">2</span>, c = <span class="number">3</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d %d %d\n&quot;</span>, a, b, c);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">输出结果：</span><br><span class="line">1 2 3</span><br></pre></td></tr></table></figure></div>
<p><strong>格式控制</strong>，是使用双引号括起来的一个字符串，称为格式控制字符串，包括格式声明和普通字符。</p>
<ol>
<li>
<p><strong>格式声明</strong>，由 <code>%</code>（百分号）和格式字符组成，其作用是将输出的数据转换为指定的格式后输出。格式声明总是由 <code>%</code> 字符开始。</p>
</li>
<li>
<p><strong>普通字符</strong>，即原样输出的字符，包括逗号、空格等。</p>
</li>
</ol>
<p>应当注意的是：</p>
<ol>
<li>
<p>当我们想在显示器输出一个 <code>%</code> 时，我们需要在格式控制字符串中连续使用两个 <code>%</code> 表示一个 <code>%</code> 。</p>
</li>
<li>
<p>当我们想在显示器输出一个 <code>\</code> 时，我们需要在格式控制字符串中连续使用两个 <code>\</code> 表示一个 <code>\</code> 。</p>
</li>
</ol>
<p>对于格式字符，有如下：</p>
<table>
<thead>
<tr>
<th style="text-align:center">格式字符</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>d</code> 或 <code>i</code></td>
<td style="text-align:center">以带符号的十进制输出整数（正数不带符号）</td>
</tr>
<tr>
<td style="text-align:center"><code>ld</code> 或 <code>lld</code></td>
<td style="text-align:center">数据类型为 <code>long int</code> 或 <code>long long int</code> 的输出</td>
</tr>
<tr>
<td style="text-align:center"><code>o</code></td>
<td style="text-align:center">以无符号的八进制输出整数（不输出前导 <code>0</code>）</td>
</tr>
<tr>
<td style="text-align:center"><code>x</code> 或 <code>X</code></td>
<td style="text-align:center">以无符号的十六进制输出整数（不输出前导符 <code>0x</code> ）</td>
</tr>
<tr>
<td style="text-align:center"><code>u</code></td>
<td style="text-align:center">以无符号的十进制输出整数</td>
</tr>
<tr>
<td style="text-align:center"><code>c</code></td>
<td style="text-align:center">以字符形式输出一个字符</td>
</tr>
<tr>
<td style="text-align:center"><code>s</code></td>
<td style="text-align:center">输出一整个字符串，直至遇到 <code>\0</code></td>
</tr>
<tr>
<td style="text-align:center"><code>f</code></td>
<td style="text-align:center">以小数形式输出单精度数，默认输出6位小数</td>
</tr>
<tr>
<td style="text-align:center"><code>lf</code></td>
<td style="text-align:center">以小数形式输出双精度数，默认输出6位小数</td>
</tr>
<tr>
<td style="text-align:center"><code>e</code> 或 <code>E</code></td>
<td style="text-align:center">以指数形式输出实数</td>
</tr>
<tr>
<td style="text-align:center"><code>g</code> 或 <code>G</code></td>
<td style="text-align:center">选用 <code>%f</code> 或 <code>%e</code> 中宽度较短的格式，不输出无意义 <code>0</code></td>
</tr>
</tbody>
</table>
<ul>
<li>PS：正常来说，一个数字的前面加 <code>0</code> ，表示该数字为八进制。上述中不输出前导 <code>0</code> ，但当格式为 <code>%#o</code> 时，输出前导 <code>0</code> ；一个数字的前面加 <code>0x</code> ，表示该数字为十六进制。上述中不输出前导符，但当格式为 <code>%#x</code> 时，输出前导 <code>0x</code> 。</li>
</ul>
<p>输入下面的代码可以直观感受输出的格式问题：会因为格式字符与输出的数据类型不匹配而导致输出乱码。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line">	<span class="type">float</span> b = <span class="number">3.1415926535</span>; </span><br><span class="line">	<span class="type">double</span> c = <span class="number">3.1415926535</span>;</span><br><span class="line">	<span class="type">long</span> <span class="type">int</span> d = <span class="number">1e9</span>;</span><br><span class="line">	<span class="type">long</span> <span class="type">long</span> <span class="type">int</span> e=<span class="number">1e18</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\t\t%ld\t\t%lld\t\t%f\t%lf\n&quot;</span>, a, a, a, a, a);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\t%ld\t%lld\t%.8f\t%.8lf\n&quot;</span>, b, b, b, b, b);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\t%ld\t%lld\t%.8f\t%.8lf\n&quot;</span>, c, c, c, c, c);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\t%ld\t%lld\t%f\t%lf\n&quot;</span>, d, d, d, d, d);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\t%ld\t%lld\t%f\t%lf\n&quot;</span>, e, e, e, e, e);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">运行结果：</span><br><span class="line">1               1               4294967297              0.000000        0.000000</span><br><span class="line">1610612736      1074340347      4614256656748904448     3.14159274      3.14159274</span><br><span class="line">1413551940      1074340347      4614256656551843652     3.14159265      3.14159265</span><br><span class="line">1000000000      1000000000      4294967297000000000     3.141592        3.141593</span><br><span class="line">-1486618624     232830643       1000000000000000000     0.000000        0.000000</span><br></pre></td></tr></table></figure></div>
<p>应该清晰格式字符，不乱用不混用。 <strong>输出表列的数量需与%d（或其他格式声明）的数量一致。</strong></p>
<p><code>%f</code> 默认保留6位小数，而 <code>%m.nf</code> 可以自定义小数位，m指输出宽度，n指保留小数位。如果想用 <code>0</code> 控制宽度，在宽度控制数字前加 <code>0</code> 可以这么使用 <code>%06d</code> 、<code>%07.2f</code> ，但只能补前导 <code>0</code> 。而单独的 <code>%.nf</code> 就可以控制输出的小数位。</p>
<p>当m前面添加 <code>-</code> ，则输出数据向左对齐，再补空格或 <code>0</code> 。当m前面无 <code>-</code> ，则输出数据向右对齐，再补空格或 <code>0</code> ，此时称前导空格或前导 <code>0</code> 。</p>
<p>如 <code>%7.2f</code> ，表示输出数据占7列（小数点也占一列），保留2位小数。运行以下代码可深刻理解：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">float</span> a = <span class="number">3.141592</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;|%07.2f|\n&quot;</span>, a);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;|%-07.2f|\n&quot;</span>, a);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">运行结果：</span><br><span class="line">|0003.14|</span><br><span class="line">|3.14   |</span><br></pre></td></tr></table></figure></div>
<p>由 <code>%f</code> 拓展， <code>%d</code> 等格式声明都可在 <code>%</code> 和格式字符之间加一个数字（正或负），表示控制整个输出所占宽度，如 <code>%7d</code> 、 <code>%4c</code> 等。</p>
<p>如果事先并不知道保留多少小数位，而是后续输入的情况，可以使用占位符 <code>%.*f</code> 解决。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">float</span> a = <span class="number">3.1415926</span>;</span><br><span class="line">	<span class="type">int</span> k;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k); <span class="comment">// 根据输入的k决定保留多少位小数</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%.*f&quot;</span>, k, a);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>另外， <code>printf()</code> 函数在运行时的形参是 <strong>从右到左</strong> 处理，具体效果如下：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span> </span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123; </span><br><span class="line">    <span class="type">int</span> a = <span class="number">5</span>, b = <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, b = a + <span class="number">1</span>, a += <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">输出结果:</span><br><span class="line">7 6</span><br></pre></td></tr></table></figure></div>
<p>由于是 <strong>从右到左</strong> 的顺序处理，所以先是 <code>a += 1</code> ，a变成6，再接着 <code>b = a + 1</code>，b变成7。</p>
<ul>
<li>putchar()：输出一个字符</li>
</ul>
<p>函数原型： <code>int putchar(int _Character)</code> ，函数定义在 <code>stdio.h</code> 中。</p>
<ul>
<li>puts()：输出一个字符串，并换行</li>
</ul>
<p>函数原型： <code>int puts(const char *s);</code> ，函数定义在 <code>stdio.h</code> 中。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">char</span> a = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">	<span class="built_in">putchar</span>(<span class="string">&#x27;!&#x27;</span>);</span><br><span class="line">	<span class="built_in">putchar</span>(a);</span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">运行结果：</span><br><span class="line">!aHello World!</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<h2 id="4-2-格式化的输入">4.2 格式化的输入</h2>
<ul>
<li>用 <code>scanf()</code> 函数进行格式化的输出，其函数定义如下：</li>
</ul>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">scanf</span><span class="params">(<span class="type">const</span> <span class="type">char</span> * <span class="keyword">restrict</span> format,...)</span>;</span><br><span class="line"><span class="comment">// 第一参数为输入格式字符串，省略号表示存在可变形参</span></span><br><span class="line"><span class="comment">// 输入成功返回成功读入的数据项数，输入数据时遇到了结束则返回EOF（End Of File）。</span></span><br></pre></td></tr></table></figure></div>
<p>也可以参考这样的格式： <code>scanf(格式控制，地址表列)；</code>。格式控制字符串同输入的规则。在使用 <code>scanf()</code> 的时候，我们应当注意， <code>scanf()</code> 函数的地址表列是需要输入的变量地址，而不是变量名，因此，我们要在变量名前加 <code>&amp;</code> 取地址符。如：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, a, b, c);    <span class="comment">//此写法错误</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;a, &amp;b, &amp;c); <span class="comment">//此写法正确</span></span><br></pre></td></tr></table></figure></div>
<p>当我们不加取地址符的时候，程序会因为储存内存溢出（输入的内容没有正确的地方存放）而终止程序。因此，当我们的程序莫名中断崩掉时，我们可以优先考虑是否在输入时加取地址符。</p>
<p>从另一个角度理解，对于函数而言，我们希望输入一个值，也就是修改变量里面的值，应当传入其地址，而不是直接传入值。</p>
<p>还需要注意的是， <code>scanf()</code> 的格式控制字符串应与我们输入的格式严格一致，即格式控制字符串中有逗号或空格等的时候，我们输入也需加上逗号或空格等。如：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;a, &amp;b, &amp;c);<span class="comment">//此时应当输入 1 2 3</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d,%d,%d&quot;</span>, &amp;a, &amp;b, &amp;c);<span class="comment">//此时应当输入 1,2,3</span></span><br></pre></td></tr></table></figure></div>
<p>如果没有留意到这个问题，那么当我们输入数据的时候，可能会出现数据吞没的情况，因为输入的跟字符串规定的不匹配，不读入。</p>
<p>该函数还有自动处理的地方，如</p>
<ol>
<li>
<p>当我们的输入格式控制为 <code>%d%d%d</code> 时，系统会自动把空格或者换行（回车）作为分隔两个数据的标志。</p>
</li>
<li>
<p>当我们的输入格式控制为 <code>%f%f%f</code> 时，系统会自动把小数点、空格或者换行（回车）作为分隔两个数据的标志。</p>
</li>
</ol>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">float</span> a, b;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%f%f&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%f %f\n&quot;</span>, a, b);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">运行窗口：</span><br><span class="line">3.142.77                              //输入</span><br><span class="line">3.142000 0.770000                     //输出</span><br></pre></td></tr></table></figure></div>
<p>虽然系统会自动把空格作为分隔两个数据的标志而不读入空格，但是总有办法可以使得 <code>scanf()</code> 函数输入带空格，如下代码：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// getstring.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">char</span> a[<span class="number">20</span>]; <span class="comment">// 存放字符串</span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%[^\n]&quot;</span>, a); <span class="comment">// 可输入带空格的字符串</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, a);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>实际上， <code>scanf()</code> 函数的注意点与其的键盘缓冲区和输入流有关。该函数会从输入流中选择数据放入键盘缓冲区中。在未输入满前忽略掉空白字符（空格、制表符和新行符），在输入满时把空白字符当作中断的标志。所以要注意反思输入流和键盘缓冲区里面的内容是什么，是否有键盘缓冲区遗留问题导致提前终止输入，是否有数据仍在输入流中没有进入键盘缓冲区而丢弃等。</p>
<ul>
<li><code>getchar()</code>：输入一个字符</li>
</ul>
<p>函数原型： <code>int getchar(void);</code> ，返回值则是输入的字符的ASCII码，若读取失败返回EOF或-1，函数定义在 <code>stdio.h</code> 中。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">char</span> b;</span><br><span class="line">	b = getchar();</span><br><span class="line">	<span class="built_in">putchar</span>(b);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">运行窗口：</span><br><span class="line">h	// 输入</span><br><span class="line">h	// 输出</span><br></pre></td></tr></table></figure></div>
<ul>
<li><code>gets()</code>：输入一个字符串，一般使用 <code>scanf()</code> 输入字符串的时候不能输入含空格的字符串，而使用 <code>gets()</code> 则可以输入含空格的字符串。</li>
</ul>
<p>由于 <code>gets()</code> 函数的不安全性，在C99标准中，已经不再建议使用该函数，而在C11中更是直接抛弃了这个函数。</p>
<p><br><br><br></p>
<h1>Ⅴ —— 条件结构</h1>
<p>实际上，在很多情况下，需要根据某个条件是否满足来决定是否执行指定操作任务，或者从给定的两种或多种操作选择其一。这就是选择结构需要解决的问题。再举个详细的例子，当我们处于岔路时，做出方向的选择；比如数学上的分段函数，条件不同对应函数关系不同。</p>
<p>通过条件结构，可以完成一些简单的语法题，如交换两个数，输出两数最大值和最小值，由键盘输入三个数输出最大值，判断闰年……</p>
<p>条件的真假如果对应到数字上，0为假，非0为真，即正负数都为真。</p>
<h2 id="5-1-if构成的条件结构">5.1 if构成的条件结构</h2>
<p><code>if</code> 语句的结构如下：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>( condition is <span class="literal">true</span> ) </span><br><span class="line">&#123;</span><br><span class="line">  sentence1;</span><br><span class="line">  sentence2;</span><br><span class="line">  …………</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//先简单地翻译一遍以上代码：如果（ 某个条件成立 ），则运行花括号中的内容。</span></span><br></pre></td></tr></table></figure></div>
<p>需要注意， <code>if</code> 语句在没有花括号的情况下，只连带其后的一句语句。即 <code>if(condition)</code> 后只能跟一个语句，其可以是单个简单语句，也可以是由花括号包含起来的复合语句。</p>
<p>再加之 <code>else</code> （另外，否则），可以组成以下三种形式：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 情况一，无else子句部分，只有单个if语句</span></span><br><span class="line"><span class="keyword">if</span>( condition )</span><br><span class="line">&#123;</span><br><span class="line">	sentence;</span><br><span class="line">&#125;   </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 情况二，有else子句部分</span></span><br><span class="line"><span class="keyword">if</span>( condition )</span><br><span class="line">&#123;</span><br><span class="line">	sentence1;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">	sentence2;</span><br><span class="line">&#125;</span><br><span class="line">      </span><br><span class="line"><span class="comment">// 情况三，在else部分又嵌套多层if语句</span></span><br><span class="line"><span class="keyword">if</span>( condition )</span><br><span class="line">&#123;</span><br><span class="line">	sentence1;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>( condition1 )</span><br><span class="line">&#123;</span><br><span class="line">	sentence2;</span><br><span class="line">&#125;   </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">	sentence3;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 情况三还可以写成下面的形式</span></span><br><span class="line"><span class="keyword">if</span>( condition )</span><br><span class="line">&#123;</span><br><span class="line">	sentence1;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span>( condition1 )</span><br><span class="line">	&#123;</span><br><span class="line">		sentence2;</span><br><span class="line">	&#125;   </span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		sentence3;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p><code>if</code> 语句无论写几行，都是一个整体，属于同一个语句，只是将其分成 <code>if</code> 部分和 <code>else</code> 部分。在 <code>if</code> 语句中要对给定的条件进行检查，判定所给定的条件是否成立。判断的结果是一个逻辑值“是”或“否”。</p>
<p><code>if</code> 语句小括号中的 <code>condition</code> ，应该是由关系运算符与逻辑运算符构成的表达式，运算符号详见运算符。如表达x大于1时写成 <code>x&gt;1</code> ，表达x在10到20之间时写成 <code>x &gt;=10 &amp;&amp; x &lt;= 20</code> ，表达x不等于4时写成 <code>x != 4</code> ，表达x等于4时写成 <code>x == 4</code> 。可以试着巧妙应用 <code>? :</code> 三目运算符转化繁琐的if结构。</p>
<p>下面结合一个例子剖析 <code>if-else</code> 语句，在数学中有阶跃函数（分段函数），当x＞0时，y＝1；当x＝0时，y＝0；当x＜0时，y＝-1。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span> <span class="comment">//声明头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> x, y; <span class="comment">//定义x和y变量</span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x); <span class="comment">//输入x</span></span><br><span class="line">	<span class="keyword">if</span>(x &gt; <span class="number">0</span>) <span class="comment">//第一个判断，做x＞0的判断</span></span><br><span class="line">	&#123;</span><br><span class="line">		y = <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>( x == <span class="number">0</span> ) <span class="comment">//排除第一个判断后的另外一个判断，做x＝0的判断</span></span><br><span class="line">	&#123;</span><br><span class="line">		y = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">  </span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>( x &lt; <span class="number">0</span> ) <span class="comment">//排除以上两种情况后的另一种情况，做x＜0的判断</span></span><br><span class="line">	&#123;</span><br><span class="line">		y = <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//其实这种情况下，排除以上两种情况，剩下唯一的可能，可以写成else部分</span></span><br><span class="line">	<span class="comment">//如：</span></span><br><span class="line">	<span class="comment">//  else</span></span><br><span class="line">	<span class="comment">//  &#123;</span></span><br><span class="line">	<span class="comment">//     y = -1;</span></span><br><span class="line">	<span class="comment">//  &#125;</span></span><br><span class="line">  </span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, y); <span class="comment">//输出y</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p><code>if</code> 语句可以多个嵌套， <code>if</code> 中又带有 <code>if-else</code> 等情况，请注意辨识。应当注意 <code>if</code> 与 <code>else</code> 的配对关系。 <code>else</code> 总是与它上面最近的未配对的 <code>if</code> 配对， <code>else</code> 一般不能单独出现，上面必须先有 <code>if</code> 部分。上面的例子用 <code>if</code> 语句嵌套可如下表示：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span> <span class="comment">//声明头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> x, y; <span class="comment">//定义x和y变量</span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x); <span class="comment">//输入x</span></span><br><span class="line">	<span class="keyword">if</span>(x &gt;= <span class="number">0</span>)  <span class="comment">//将大于等于零归为一类</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(x &gt; <span class="number">0</span>)<span class="comment">//再判断大于0的情况</span></span><br><span class="line">			y = <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="comment">//在x大于等于零的情况下，再排除x大于零，即x等于零</span></span><br><span class="line">			y = ;  </span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="comment">//排除x大于等于零的情况下，即x小于零 </span></span><br><span class="line">		y = <span class="number">-1</span>;</span><br><span class="line">  </span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, y); <span class="comment">//输出y</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h2 id="5-2-switch构成的条件结构">5.2 switch构成的条件结构</h2>
<p><code>switch</code> 语句的结构如下：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span> (object) <span class="comment">//对于某个变量或表达式进行switch</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">case</span> constant1: <span class="comment">//对于常量1的情况，进行语句</span></span><br><span class="line">		<span class="comment">//操作部分语句</span></span><br><span class="line">		<span class="keyword">break</span>; <span class="comment">//注意break必须存在</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">case</span> constant2: <span class="comment">//对于常量2的情况，进行语句</span></span><br><span class="line">		<span class="comment">//操作部分语句</span></span><br><span class="line">		<span class="keyword">break</span>; <span class="comment">//注意break必须存在</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">default</span>: <span class="comment">//对于默认情况，即排除上述情况，进行语句</span></span><br><span class="line">		<span class="comment">//操作部分语句</span></span><br><span class="line">		<span class="keyword">break</span>; <span class="comment">//注意break不必存在，建议存在</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>在此强调， <code>switch</code> 语句中 <code>case</code> 情况部分的 <code>break</code> 语句必须存在，此为语法规定。当去掉 <code>break</code> 语句时，系统将逐句往下运行。更具体地说，如果 <code>switch</code> 时 <code>case</code> 情况1的话，你想运行情况1部分的语句，但因为缺少 <code>break</code> 语句，系统还会运行下面 <code>case</code> 情况的语句，造成逻辑表达上的错误。可以对下面的代码中每个 <code>break</code> 试着取消注释，让其运行，观察系统运行语句输出区别。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span> <span class="comment">//声明头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> object = <span class="number">1</span>, sum = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">switch</span>(object) </span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">0</span> : </span><br><span class="line">			sum = <span class="number">0</span>;</span><br><span class="line">			<span class="comment">//break;</span></span><br><span class="line">		<span class="keyword">case</span> <span class="number">1</span> : </span><br><span class="line">			sum = <span class="number">1</span>;</span><br><span class="line">			<span class="comment">//brea;</span></span><br><span class="line">		<span class="keyword">case</span> <span class="number">2</span> :</span><br><span class="line">			sum = <span class="number">2</span>;</span><br><span class="line">			<span class="comment">//break;</span></span><br><span class="line">		<span class="keyword">default</span> :</span><br><span class="line">			sum = <span class="number">-1</span>;</span><br><span class="line">			<span class="comment">//break;</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p><code>switch</code> 语句的对象应该是 <strong>整型和字符类型的变量或变量表达式</strong> ，如 <code>int</code> 变量 <code>number</code> 、 <code>char</code> 变量 <code>ch</code>  、 <code>number%10</code> 、 <code>ch+32</code> ……相对于的 <code>case</code> 情况应该是整型常量或者是字符常量。如整数1、2、3……和字符’A’、‘B’、‘c’……</p>
<p>对于 <code>switch</code> 语句，还有以下规则说明。操作部分语句可以不止一个语句，其一直运行到 <code>break</code> 语句为止。可以没有 <code>default</code> 的情况，但此时如果没有与 <code>switch</code> 表达式相匹配的 <code>case</code> 常量时，不执行任何语句。 <code>case</code> 情况出现的次序不影响执行结果，每个 <code>case</code> 情况常量必须互不相同，不能存在一个值有多种执行情况。</p>
<p>这里有一个例子，对于输入分数，输出分数评级，可以辅助理解：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span> <span class="comment">//声明头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> score ; <span class="comment">//输入分数score，此处人为规定输入值在0到100之间 </span></span><br><span class="line">	<span class="type">char</span> grade ; <span class="comment">//输出分数评级，由&#x27;A&#x27;到&#x27;E&#x27; </span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span> , &amp;score ) ; <span class="comment">//输入分数 </span></span><br><span class="line">	<span class="keyword">switch</span>( score / <span class="number">10</span> ) </span><br><span class="line">	<span class="comment">//对分数除以十，即判断十位的情况，如80分到90，除以十为8 </span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">10</span>: </span><br><span class="line">			grade = <span class="string">&#x27;A&#x27;</span> ;</span><br><span class="line">			<span class="keyword">break</span> ;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">9</span>: </span><br><span class="line">			grade = <span class="string">&#x27;A&#x27;</span> ;</span><br><span class="line">			<span class="keyword">break</span> ;    </span><br><span class="line">		<span class="keyword">case</span> <span class="number">8</span>: </span><br><span class="line">			grade = <span class="string">&#x27;B&#x27;</span> ;</span><br><span class="line">			<span class="keyword">break</span> ;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">7</span>: </span><br><span class="line">			grade = <span class="string">&#x27;C&#x27;</span> ;</span><br><span class="line">			<span class="keyword">break</span> ;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">6</span>: </span><br><span class="line">			grade = <span class="string">&#x27;D&#x27;</span> ;</span><br><span class="line">			<span class="keyword">break</span> ;</span><br><span class="line">		<span class="keyword">default</span>:</span><br><span class="line">			grade = <span class="string">&#x27;E&#x27;</span> ;</span><br><span class="line">			<span class="keyword">break</span> ;      </span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Your grade is %c .\n&quot;</span> , grade ) ;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p><code>switch</code> 语句也是可以嵌套的，但结构上比较繁琐。</p>
<p><br><br><br></p>
<h1>Ⅵ —— 循环结构</h1>
<p>有时候用条件结构还是不能简便解决问题，还需要使用循环结构，如处理求多个整数的和、处理多个判断。</p>
<p>再如在输入的时候，我希望输入50个数字，我们可以复制粘贴50句 <code>scanf()</code> 来实现这个要求。学了循环之后，至少，不再需要50句语句。</p>
<p>需要注意的是， <strong>循环语句一定要设置终止条件，否则将进入死循环，无法得出结果！！！</strong></p>
<p>通过循环结构，可以完成一些简单的语法题，如判断一个数是否为素数，计算斐波那契数列，计算阶乘……</p>
<h2 id="6-1-while构成的循环结构">6.1 while构成的循环结构</h2>
<p><code>while</code> 语句的一般形式如下：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>( condition is <span class="literal">true</span> ) </span><br><span class="line">&#123;</span><br><span class="line">	sentences;</span><br><span class="line">	……………………</span><br><span class="line">	<span class="comment">//花括号内的内容总称为循环体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>此处 <code>condition</code> 为表达式，只有当循环条件为真，即表达式为真，就执行循环体语句。循环体可以是一条语句，也可以是一个语句块（用花括号包起来）。 <code>while</code> 循环的特点是先判断条件表达式，后执行循环体语句。</p>
<p><code>while</code> 语句的运行顺序是：从上至下，先判断条件表达式是否为真，为真则执行循环体。循环体运行完后再次判断条件表达式，为真则执行循环体。一直循环直至判断条件表达式为假。</p>
<p>这里给出一个例子，求1到100的和，希望通过例子更好理解 <code>while</code> 循环：</p>
<p>分析此问题，将100个数相加，要重复进行100次加法，显然是需要循环结构介入。有兴趣的可以尝试画画流程图（此处不做介绍）。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// add-100-number.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span> <span class="comment">//声明头文件 </span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> i = <span class="number">1</span>; <span class="comment">//初始化循环变量，从1开始 </span></span><br><span class="line">	<span class="type">int</span> sum = <span class="number">0</span>; <span class="comment">//用来存求和的值 </span></span><br><span class="line">	<span class="keyword">while</span>(i &lt;= <span class="number">100</span>) </span><br><span class="line">	&#123;</span><br><span class="line">		sum += i; <span class="comment">//相当于sum=sum+i，求和 </span></span><br><span class="line">		i ++; <span class="comment">//i自增，实现从1到2到3到……100 </span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;sum = %d\n&quot;</span>, sum); <span class="comment">//输出求和的值 </span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p><code>while</code> 括号里的 <code>condition</code> 条件表达式实际上也会被执行的，如果条件表达式是赋值语句（赋值成功则表达式为真）、自增自减等也会生效。</p>
<h2 id="6-2-do-while构成的循环结构">6.2 do-while构成的循环结构</h2>
<p><code>do-while</code> 语句。其一般形式如下：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">do</span> </span><br><span class="line">&#123;</span><br><span class="line">	sentences;</span><br><span class="line">	……………………</span><br><span class="line">	<span class="comment">//花括号内的内容总称为循环体</span></span><br><span class="line">&#125; <span class="keyword">while</span>(condition is <span class="literal">true</span>); <span class="comment">//注意这有一个分号</span></span><br></pre></td></tr></table></figure></div>
<p>此处 <code>condition</code> 为表达式，道理同上。 <code>do-while</code> 循环的特点是先无条件执行循环体，然后判断循环条件是否成立。即 <code>do-while</code> 循环至少进行一次循环，注意与 <code>while</code> 语句区分。</p>
<p><code>do-while</code> 语句的运行顺序是：从上至下，先无条件执行一次循环体，再判断条件表达式是否为真，为真则回到循环体开始重新执行循环体。循环体运行完后再次判断条件表达式，为真则执行循环体。一直循环直至判断条件表达式为假。</p>
<p>此处同样解决上面的问题，从1加到100求和。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// add-100-number.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span> <span class="comment">//声明头文件 </span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> i = <span class="number">1</span>; <span class="comment">//初始化循环变量，从1开始 </span></span><br><span class="line">	<span class="type">int</span> sum = <span class="number">0</span>; <span class="comment">//用来存求和的值 </span></span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">	&#123;</span><br><span class="line">		sum += i; <span class="comment">//相当于sum=sum+i，求和 </span></span><br><span class="line">		i ++; <span class="comment">//i自增，实现从1到2到3到……100 </span></span><br><span class="line">	&#125; <span class="keyword">while</span>(i &lt;= <span class="number">100</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;sum = %d\n&quot;</span>, sum); <span class="comment">//输出求和的值 </span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p><code>while</code> 括号里的 <code>condition</code> 条件表达式实际上也会被执行的，如果条件表达式是赋值语句（赋值成功则表达式为真）、自增自减等也会生效。</p>
<h2 id="6-3-for构成的循环结构">6.3 for构成的循环结构</h2>
<p><code>for</code> 语句的一般形式如下：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>( sentence1; condition; sentence2 )</span><br><span class="line">&#123;</span><br><span class="line">	sentences3</span><br><span class="line">	…………………………</span><br><span class="line">	<span class="comment">//花括号内的内容总称为循环体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>此处 <code>sentence1</code> 和 <code>sentence2</code> 为普通表达式， <code>sentence1</code> 只执行一次，而 <code>sentence2</code> 在每次执行完循环体后都会运行一次。 <code>condition</code> 为条件控制表达式，只有当循环条件为真，即表达式为真，就执行循环体语句。</p>
<p><code>for</code> 语句的运行顺序是：先进行一次 <code>sentence1</code> ，接着判断 <code>condition</code> 是否为真，为真则执行循环体。循环体运行完后执行 <code>sentence2</code> 。然后再次判断 <code>condition</code> ，一直循环直至条件为假。</p>
<p>所以延展出常用的 <code>for</code> 语句使用格式：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(循环变量赋值初始化; 循环条件; 循环变量变化)</span><br><span class="line">&#123;</span><br><span class="line">  循环体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>做个补充，在老版本的C语言中， <code>sentence1</code> 不支持声明变量并同时初始化，如： <code>for(int i = 1; i &lt;= 100; i ++)</code> 。但是在C99版本后是允许的。</p>
<p>事实上， <code>for</code> 语句中的 <code>sentence1</code> 语句、 <code>sentence2</code> 语句和 <code>condition</code> 语句并非必要。即这三句语句可以省略，省略 <code>condition</code> 语句默认为真，写成 <code>for( ; ; )</code> ，但是两个分号绝不可少。在省略掉这三句语句时，我们仍要思考如何终止循环。例如在 <code>for</code> 语句上面就把变量初始化，在循环体中设置判断 <code>if</code> 什么条件就终止循环，在循环体中处理条件变化……</p>
<h2 id="6-4-循环的终止与继续">6.4 循环的终止与继续</h2>
<ul>
<li>使用 <code>break</code> 语句终止循环。</li>
</ul>
<p>之前使用 <code>break</code> 语句，可能是条件结构中跳出 <code>switch</code> 语句。实际上， <code>break</code> 语句还可以用来跳出循环体，即终止循环。</p>
<p>以求1到100和的例子，假如我希望在和刚好大于等于2500的时候结束，并想知道此时是多少个数的和，那怎么实现呢？</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// use-break.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span> <span class="comment">//声明头文件 </span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> i, sum = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i ++) </span><br><span class="line">	&#123;</span><br><span class="line">		sum += i;</span><br><span class="line">		<span class="keyword">if</span>(sum &gt;= <span class="number">2500</span>) <span class="comment">//当sum大于等于2500 </span></span><br><span class="line">		<span class="keyword">break</span>; <span class="comment">//终止所在的一层for循环 </span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;sum = %d, and now i is %d\n&quot;</span>, sum, i);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>当然也可以这样解决：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// use-for.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span> <span class="comment">//声明头文件 </span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> i, sum = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; sum &lt; <span class="number">2500</span>; i ++) </span><br><span class="line">	&#123;</span><br><span class="line">		sum += i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;sum = %d, and now i is %d\n&quot;</span>, sum, i);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>注释中我写到，终止 <code>break</code> 所在的一层 <code>for</code> 循环，因为当有多个循环嵌套时， <code>break</code> 不会终止所有的循环，而是一层循环。（可以自己做实验研究）</p>
<ul>
<li>使用 <code>continue</code> 语句跳过本次循环。</li>
</ul>
<p>有时候不希望终止整个循环，而是想结束这一次循环，还得执行下次循环。这时可以使用 <code>continue</code> 语句。</p>
<p>还是求1到100和的例子，但我希望求1到100中是偶数的和，那么奇数就没必要加进去，此时可以使用 <code>continue</code> 语句跳过本次循环。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Find-the-sum-of-even-numbers-from-1-to-100.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span> <span class="comment">//声明头文件 </span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> i, sum = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i ++) </span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(i % <span class="number">2</span> == <span class="number">1</span>) <span class="comment">//当i为奇数，即除于2余数为1 </span></span><br><span class="line">			<span class="keyword">continue</span>; <span class="comment">//结束本次循环 </span></span><br><span class="line">		sum += i; </span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;sum = %d\n&quot;</span>, sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>需要注意的是，结束本次循环并不是完全不进入循环，而是不执行 <code>continue</code> 下面的循环体部分。上面的代码，如果 <code>sum += i</code> 在 <code>continue</code> 的上面，结果还是会加上奇数的部分。</p>
<p><br><br><br></p>
<h1>Ⅶ —— 枚举</h1>
<p>枚举是C语言中的一种基本数据类型，用于定义一组具有离散值的常量。枚举类型通常用于为程序中的一组相关的常量取名字，以便于程序的可读性和维护性。</p>
<p>定义一个枚举类型，需要使用 <code>enum</code> 关键字，后面跟着枚举类型的名称，以及用大括号 <code>&#123;&#125;</code> 括起来的一组枚举常量。每个枚举常量可以用一个标识符来表示，也可以为它们指定一个整数值，如果没有指定，那么默认从0开始递增。</p>
<p>枚举语法定义格式为：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span>　枚举名　&#123;</span>枚举元素<span class="number">1</span>,枚举元素<span class="number">2</span>,……&#125;;</span><br></pre></td></tr></table></figure></div>
<p>举个例子，一周有7天，如果想将星期一映射为数字1，星期天映射为数字7，我们可以使用枚举。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Day</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	MON=<span class="number">1</span>, TUE, WED, THU, FRI, SAT, SUN</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// MON映射到1，后面的会自动递增</span></span><br><span class="line"><span class="comment">// 效果跟#define MON 1 等一样</span></span><br></pre></td></tr></table></figure></div>
<p>如果想让星期三之后特殊一些，星期三映射到8，星期天映射到12，只需在中间添加赋值即可。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Day</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	MON=<span class="number">1</span>, TUE, WED=<span class="number">8</span>, THU, FRI, SAT, SUN</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// MON映射到1，TUE映射到2，WED映射到8，后面的会自动递增</span></span><br></pre></td></tr></table></figure></div>
<p>使用时直接输出即可：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, MON);</span><br></pre></td></tr></table></figure></div>
<p>然而上面是对枚举类型的使用，下面介绍枚举变量的定义和使用。</p>
<p>枚举类型是一种数据类型，可以对标 <code>int</code> 理解；枚举变量是一个变量，可以对标 <code>int number</code> 中的 <code>number</code> 理解。</p>
<p>可以通过三种方式定义枚举变量：</p>
<ol>
<li>先定义枚举类型，再定义枚举变量</li>
</ol>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">DAY</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	MON=<span class="number">1</span>, TUE, WED, THU, FRI, SAT, SUN</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">DAY</span> <span class="title">day</span>;</span></span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>定义枚举类型的同时定义枚举变量</li>
</ol>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">DAY</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	MON=<span class="number">1</span>, TUE, WED, THU, FRI, SAT, SUN</span><br><span class="line">&#125; day;</span><br></pre></td></tr></table></figure></div>
<ol start="3">
<li>省略枚举名称，直接定义枚举变量</li>
</ol>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	MON=<span class="number">1</span>, TUE, WED, THU, FRI, SAT, SUN</span><br><span class="line">&#125; day;</span><br></pre></td></tr></table></figure></div>
<p>给出使用枚举变量的情形：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">DAY</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">      MON=<span class="number">1</span>, TUE, WED, THU, FRI, SAT, SUN</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">enum</span> <span class="title">DAY</span> <span class="title">day</span>;</span></span><br><span class="line">    day = WED;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, day);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>在 <strong>枚举类型值连续</strong> 的情况下还可以进行循环：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">DAY</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">      MON=<span class="number">1</span>, TUE, WED, THU, FRI, SAT, SUN</span><br><span class="line">&#125; day;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 遍历枚举元素</span></span><br><span class="line">    <span class="keyword">for</span> (day = MON; day &lt;= SUN; day++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;枚举元素：%d \n&quot;</span>, day);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>如果将将整数转换为现有枚举值，只需强制类型转换：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">enum</span> <span class="title">day</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">        saturday, sunday, monday, tuesday, wednesday, thursday, friday</span><br><span class="line">    &#125; workday;</span><br><span class="line"> </span><br><span class="line">    <span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="class"><span class="keyword">enum</span> <span class="title">day</span> <span class="title">weekend</span>;</span></span><br><span class="line">    weekend = ( <span class="keyword">enum</span> day ) a;  <span class="comment">//类型转换</span></span><br><span class="line">    <span class="comment">//weekend = a; //错误</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,weekend);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">输出结果：</span><br><span class="line">1</span><br></pre></td></tr></table></figure></div>
<p><br><br><br></p>
<h1>Ⅷ —— 数组</h1>
<p>数组是一种可以存储固定大小的相同类型元素的顺序集合。简单来说，数组可以存放一串相同的数据类型。</p>
<h2 id="8-1-数组结构">8.1 数组结构</h2>
<p>数组的结构如下图：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/c_array.png" alt="数组的结构"><figcaption>数组的结构</figcaption></figure></p>
<p>数组的每一个单体称作 <strong>元素</strong> ，每个元素有它的 <strong>索引号</strong> ，用于访问该元素。 <strong>索引号从0开始。</strong></p>
<h2 id="8-2-数组的定义和访问">8.2 数组的定义和访问</h2>
<p>数组的定义十分简单，其定义格式是：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">type arrayName [arraySize];</span><br></pre></td></tr></table></figure></div>
<p>如 <code>int array[5];</code> 就定义了一个大小为5的整型数组，数组名为array，它可以存放5个整型数据，索引号从0到4。</p>
<p>访问数组时直接使用 <code>arrayName[index]</code> 的方式进行，如 <code>array[0]</code> 就是array数组的第一个元素的值。使用循环还可以将数组的内容输出：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> i;</span><br><span class="line">	<span class="type">int</span> <span class="built_in">array</span>[<span class="number">5</span>];</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// 访问数组并赋值</span></span><br><span class="line">   	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">5</span>; ++ i)</span><br><span class="line">   		<span class="built_in">array</span>[i] = i + <span class="number">1</span>;</span><br><span class="line">   	</span><br><span class="line">   	<span class="comment">// 访问数组并输出</span></span><br><span class="line">   	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">5</span>; ++ i)</span><br><span class="line">   		<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, <span class="built_in">array</span>[i]);</span><br><span class="line">   	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>补充个冷知识，我们比较经常使用 <code>array[0]</code> 访问元素，实际上还能以 <code>0[array]</code> 的方式访问元素。</p>
<h2 id="8-3-数组的初始化">8.3 数组的初始化</h2>
<p>通过上面的例子，我们可以通过循环给数组中的每个元素赋值。但是还可以通过声明时的初始化语句进行相同的操作。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="built_in">array</span>[<span class="number">5</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br></pre></td></tr></table></figure></div>
<p>大括号 <code>&#123; &#125;</code> 之间的值的数目不能大于我们在数组声明时在方括号 <code>[ ]</code> 中指定的元素数目。如果省略掉了数组的大小，数组的大小则为初始化时元素的个数。即等价于：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="built_in">array</span>[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br></pre></td></tr></table></figure></div>
<h2 id="8-4-多维数组">8.4 多维数组</h2>
<p>C 语言支持多维数组。多维数组声明的一般形式如下：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">type name[size1][size2]...[sizeN];</span><br></pre></td></tr></table></figure></div>
<p>下面以二维数组作为示例。一个二维数组，在本质上，是一个元素为一维数组的数组。定义形式如下：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">type arrayName [x][y];</span><br></pre></td></tr></table></figure></div>
<p>如一个二维数组初始化如下：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="built_in">array</span>[<span class="number">3</span>][<span class="number">4</span>] = &#123;  </span><br><span class="line"> &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125; ,   <span class="comment">/*  初始化索引号为 0 的行 */</span></span><br><span class="line"> &#123;<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125; ,   <span class="comment">/*  初始化索引号为 1 的行 */</span></span><br><span class="line"> &#123;<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>&#125;   <span class="comment">/*  初始化索引号为 2 的行 */</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/c_array2.png" alt="二维数组"><figcaption>二维数组</figcaption></figure></p>
<p>二维数组中的元素是通过使用下标（即数组的行索引和列索引）访问。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span> </span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span> <span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// 一个带有 5 行 2 列的数组</span></span><br><span class="line">	<span class="type">int</span> a[<span class="number">5</span>][<span class="number">2</span>] = &#123; &#123;<span class="number">0</span>,<span class="number">0</span>&#125;, &#123;<span class="number">1</span>,<span class="number">2</span>&#125;, &#123;<span class="number">2</span>,<span class="number">4</span>&#125;, &#123;<span class="number">3</span>,<span class="number">6</span>&#125;,&#123;<span class="number">4</span>,<span class="number">8</span>&#125;&#125;;</span><br><span class="line">	<span class="type">int</span> i, j;</span><br><span class="line"> </span><br><span class="line">	<span class="comment">// 输出数组中每个元素的值</span></span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;a[%d][%d] = %d\n&quot;</span>, i, j, a[i][j]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h2 id="8-5-数组的使用">8.5 数组的使用</h2>
<ul>
<li>求数组长度：使用 <code>sizeof</code> 关键字，将整个数组占的内存大小除以每个元素占的内存大小，得到的就是元素个数。</li>
</ul>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> numbers[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line"><span class="type">int</span> length = <span class="keyword">sizeof</span>(numbers) / <span class="keyword">sizeof</span>(numbers[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure></div>
<ul>
<li>将数组作为函数参数传入</li>
</ul>
<ol>
<li>形式参数是一个已定义大小的数组</li>
</ol>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">fun</span><span class="params">(<span class="type">int</span> param[<span class="number">10</span>])</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// ……</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>形式参数是一个未定义大小的数组</li>
</ol>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">fun</span><span class="params">(<span class="type">int</span> param[])</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// ……</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>为了函数的通用性，通常使用未定义大小的数组，再将数组大小作为第二参数传入。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> <span class="title function_">getAverage</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> size)</span> <span class="comment">// 求数组的平均值</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> i;</span><br><span class="line">	<span class="type">double</span> avg;</span><br><span class="line">	<span class="type">double</span> sum;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; size; ++ i)</span><br><span class="line">	&#123;</span><br><span class="line">		sum += arr[i];</span><br><span class="line">	&#125;</span><br><span class="line">	avg = sum / size;</span><br><span class="line">	<span class="keyword">return</span> avg;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>需要注意的是，我们传入的是数组，在函数内部中如若有对数组元素的修改，也会同步对外部的数组进行修改。因为此处形式参数是以地址传递的形式传入。</p>
<p>为什么传递数组名字会是以地址传递的形式传入呢？那是因为 <strong>数组名实际上是一个指针</strong> ，它存放数组中首元素的地址。至于什么是指针，可查阅下一节。</p>
<p><br><br><br></p>
<h1>Ⅸ —— 指针</h1>
<p>指针是C语言很重要的一环。</p>
<p>数据都有一个内存空间，内存空间都有一个地址，我们形象地把这个地址称为指针。指针也就是内存地址，指针变量是用来存放内存地址的变量。</p>
<h2 id="9-1-指针变量的定义">9.1 指针变量的定义</h2>
<p>指针变量定义的一般形式为：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">type *var_name;</span><br></pre></td></tr></table></figure></div>
<p><code>type</code> 是指针的基类型，它必须是一个有效的数据类型， <code>var_name</code> 是指针变量的名称。用来声明指针的星号 <code>*</code> 与乘法中使用的星号是相同的，但在此处的意义是标记改变量是指针变量，称为指针运算符。一个指针对应一个 <code>*</code> 。</p>
<p>所有实际数据类型，不管是整型、浮点型、字符型，还是其他的数据类型，对应指针的值的类型都是一样的，都是一个 <strong>代表内存地址的长的十六进制数</strong> 。不同数据类型的指针之间唯一的不同是，指针所指向的变量或常量的数据类型不同。</p>
<p>当我们需要取一个变量的地址时，我们需要加 <code>&amp;</code> （取地址符）；当我们需要取一个指针的数据时，我们需要加 <code>*</code> 。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> *pa = &amp;a;</span><br></pre></td></tr></table></figure></div>
<p>之前使用 <code>scanf()</code> 函数时所加的 <code>&amp;</code> ，表明我们是把数据放到某变量名所处的地址，而不是塞到变量名里面。</p>
<p>如果想输出地址的话，可以使用 <code>%p</code> 或 <code>%x</code> 输出：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p&quot;</span>, &amp;a);</span><br></pre></td></tr></table></figure></div>
<p>指针使用前必须有初始化值，即定义时必须赋值，若无值则指向NULL。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> *p = <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure></div>
<p>如果使用前没有初始化值时，该指针会变成 <strong>野指针</strong> ，指针指向了一块随机的空间，不受程序控制。有可能是系统重要软件的地址，贸然使用可能使得系统崩溃。</p>
<h2 id="9-2-指针的运算">9.2 指针的运算</h2>
<ul>
<li>
<p>指针之间不能进行 <code>+</code> 运算，无意义。</p>
</li>
<li>
<p>指针进行 <code>&lt;</code> 运算时，表示实际内存高低位的比较；</p>
</li>
<li>
<p>指针进行 <code>=</code> 运算时，表示把右边的地址赋值给左边；</p>
</li>
<li>
<p>指针进行 <code>-</code> 运算时，表示在两指针之间相隔相同类型元素的个数。</p>
</li>
<li>
<p>指针进行 <code>++</code> 运算时，表示在指针递增，会指向下一个元素的存储单元。指针在递增时跳跃的字节数取决于指针所指向变量数据类型长度，比如 int 就是 4 个字节。</p>
</li>
<li>
<p>指针进行 <code>--</code> 运算时，表示在指针递减，会指向上一个元素的存储单元。指针在递减时跳跃的字节数取决于指针所指向变量数据类型长度，比如 int 就是 4 个字节。</p>
</li>
</ul>
<h2 id="9-3-指针的使用">9.3 指针的使用</h2>
<ul>
<li>指针间接访问变量</li>
</ul>
<p>通过指针输出：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">100</span>, b = <span class="number">10</span>;</span><br><span class="line">	<span class="type">int</span> *pointer1, *pointer2;</span><br><span class="line">	pointer1 = &amp;a;</span><br><span class="line">	pointer2 = &amp;b;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d\n&quot;</span>, a, b); </span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;pointer1=%d,pointer2=%d\n&quot;</span>, pointer1, pointer2); </span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;pointer1=%d,pointer2=%d\n&quot;</span>, *pointer1, *pointer2);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">输出结果：</span><br><span class="line">a=100,b=10</span><br><span class="line">pointer1=6422216,pointer2=6422220</span><br><span class="line">pointer1=100,pointer2=10</span><br></pre></td></tr></table></figure></div>
<p>通过指针将两个变量存放的值交换，用地址传递实现存储空间上的交换。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// swap-ab.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span> *a,<span class="type">int</span> *b)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> tmp;</span><br><span class="line">	tmp = *a;</span><br><span class="line">	*a = *b;</span><br><span class="line">	*b = tmp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> x = <span class="number">1</span>, y = <span class="number">2</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;x=%d,y=%d\n&quot;</span>, x, y);</span><br><span class="line">	swap(&amp;x, &amp;y);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;x=%d,y=%d\n&quot;</span>, x, y);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">输出结果：</span><br><span class="line">x=1,y=2</span><br><span class="line">x=2,y=1</span><br></pre></td></tr></table></figure></div>
<ul>
<li>指针引用一维数组</li>
</ul>
<p>数组名即是该数组首元素（即序号为0的元素）的地址。所以我们可以直接用指针指向数组名，无需取地址符。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> *p;</span><br><span class="line">p = a;</span><br></pre></td></tr></table></figure></div>
<p>同时，我们可以对数组首元素进行取地址，即下代码等价：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">p = a;      <span class="comment">//p指向数组首元素的地址，即a[0]的地址；</span></span><br><span class="line">p = &amp;a[<span class="number">0</span>];  <span class="comment">//p指向a[0]的地址</span></span><br></pre></td></tr></table></figure></div>
<p>当我们正确把指针指向一个数组的时候，可以对指针进行以下运算： <code>p++</code> , <code>++p</code> , <code>p--</code> , <code>--p</code> , <code>p = p + 1</code> , <code>p = p - 1</code> 等。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/c_pointer.png" alt="指针访问数组"><figcaption>指针访问数组</figcaption></figure></p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> a[<span class="number">5</span>] = &#123;<span class="number">101</span>,<span class="number">102</span>,<span class="number">103</span>,<span class="number">104</span>,<span class="number">105</span>&#125;;</span><br><span class="line">	<span class="type">int</span> *p;</span><br><span class="line">	p = a;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, *p);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, *(p+<span class="number">1</span>));</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, *(p+<span class="number">2</span>));</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;      </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">输出结果：</span><br><span class="line"><span class="number">101</span> <span class="number">102</span> <span class="number">103</span></span><br></pre></td></tr></table></figure></div>
<p>因为数组名也有地址的属性，所以输出语句还可以改成：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, *a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, *(a+<span class="number">1</span>));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, *(a+<span class="number">2</span>));</span><br></pre></td></tr></table></figure></div>
<p>但数组名不能进行自增自减，如不能 <code>a++</code> 或 <code>a--</code> 等。</p>
<p>指针还可以引用字符串（字符数组），字符串的本质是一个字符数组。我们可以类似指针引用一维数组那样引用字符串。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> a[] = <span class="string">&quot;computer!&quot;</span>;</span><br><span class="line">  <span class="type">char</span> *p;</span><br><span class="line">  p = a;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>, *p);  <span class="comment">//%c，取*时，具体到某个元素，此处是首元素</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>, *(p + <span class="number">2</span>));</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, p);  <span class="comment">//%s，不取*，从首元素输出所有字符</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, p + <span class="number">2</span>);  <span class="comment">// 从a[2]开始输出所有字符</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">输出结果：</span><br><span class="line">输出结果：</span><br><span class="line">c</span><br><span class="line">m</span><br><span class="line">computer!</span><br><span class="line">mputer!</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//以上也可用字符指针变量表示，如下所示：</span></span><br><span class="line"><span class="type">char</span> *p=<span class="string">&quot;computer!&quot;</span>;<span class="comment">//此处可能会出现warning，但无关紧要</span></span><br><span class="line"><span class="comment">//上句等价于char *p; p=&quot;computer!&quot;;</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,p);<span class="comment">//此处无需*p，注意对比</span></span><br></pre></td></tr></table></figure></div>
<p><code>char *p=&quot;computer!&quot;</code> 的意思是将字符指针变量 <code>p</code> 指到&quot;computer!&quot;的首地址即&quot;c&quot;的地址。</p>
<p>之前，我们用字符数组也能实现打印字符串，而使用字符指针的不同是：</p>
<p>①可以对字符指针变量赋值，但不能对数组名赋值，初始化不等于赋值，如不能：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> a[<span class="number">10</span>] = &#123;<span class="string">&quot;computer!&quot;</span>&#125;; <span class="comment">//此句合法</span></span><br><span class="line"><span class="type">char</span> a[<span class="number">10</span>]; </span><br><span class="line">a = <span class="string">&quot;computer!&quot;</span>; <span class="comment">//此句不合法</span></span><br></pre></td></tr></table></figure></div>
<p>②储存内容不同，字符数组把每一个元素的值都存放，而字符指针只存放第一个元素的地址。</p>
<ul>
<li>指针指向二维数组</li>
</ul>
<p>二维数组有两个下标，那么一个指针怎么指，我们将指针分为 <strong>行指针</strong> 和 <strong>列指针</strong> 。行指针，即指向某一行元素的指针；列指针，即指向某一列元素的指针。</p>
<p>下有二维数组 <code>a[4][5]</code> ：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/c_pointer2.png" alt="指针指向二维数组"><figcaption>指针指向二维数组</figcaption></figure></p>
<ul>
<li>动态数组</li>
</ul>
<p>像 <code>int a[5];</code> 这样的定义数组，我们称之为 <strong>静态数组</strong> 。在程序编译时，静态数组的内存空间就被分配好了，存储在栈上或者全局数据区。静态数组的大小在声明时确定且无法在运行时改变。静态数组的生命周期与其作用域相关。如果在函数内部声明静态数组，其生命周期为整个函数执行期间；如果在函数外部声明静态数组，其生命周期为整个程序的执行期间。</p>
<p><strong>动态数组</strong> 是在运行时通过动态内存分配函数（如 <code>malloc</code> 和 <code>calloc</code> ）手动分配内存的数组。动态数组的内存空间在运行时通过动态内存分配函数手动分配，并存储在堆上。需要使用 <code>malloc</code> 、 <code>calloc</code>  等函数来申请内存，并使用 <code>free</code> 函数来释放内存。动态数组的大小在运行时可以根据需要进行调整。可以使用 <code>realloc</code> 函数来重新分配内存，并改变数组的大小。动态数组的生命周期由程序员控制。需要在使用完数组后手动释放内存，以避免内存泄漏。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> size = <span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> *dynamicArray = (<span class="type">int</span> *)<span class="built_in">malloc</span>(size * <span class="keyword">sizeof</span>(<span class="type">int</span>)); <span class="comment">// 动态数组内存分配</span></span><br><span class="line"><span class="comment">// 使用动态数组</span></span><br><span class="line"><span class="built_in">free</span>(dynamicArray); <span class="comment">// 动态数组内存释放</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>数组指针</li>
</ul>
<p>数组指针，其本质是指针，指向一个一维数组的指针。所以定义时，由运算符优先级，我们需要带上小括号</p>
<p>定义数组指针： <code>类型名 (*指针变量名)[长度];</code></p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> a[<span class="number">4</span>][<span class="number">5</span>] = &#123;</span><br><span class="line">		<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,</span><br><span class="line">		<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,</span><br><span class="line">		<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,</span><br><span class="line">		<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>&#125;;</span><br><span class="line">	<span class="type">int</span> (*p)[<span class="number">5</span>];</span><br><span class="line">	p = a+<span class="number">1</span>; <span class="comment">// 指向第2行</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)  <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,(*p)[i]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">输出结果：</span><br><span class="line">6 7 8 9 10</span><br></pre></td></tr></table></figure></div>
<ul>
<li>指针数组</li>
</ul>
<p>指针数组，其本质是数组，是一个元素均为指针类型的数组。</p>
<p>定义指针数组： <code>类型名 *数组名[长度];</code></p>
<p>举例：（将数字转化为对应的英文月份）</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">char</span> *p[<span class="number">13</span>];</span><br><span class="line">	p[<span class="number">1</span>]=<span class="string">&quot;Januray&quot;</span>;  p[<span class="number">2</span>]=<span class="string">&quot;February&quot;</span>;  p[<span class="number">3</span>]=<span class="string">&quot;March&quot;</span>; </span><br><span class="line">	p[<span class="number">4</span>]=<span class="string">&quot;April&quot;</span>;  p[<span class="number">5</span>]=<span class="string">&quot;May&quot;</span>;      p[<span class="number">6</span>]=<span class="string">&quot;June&quot;</span>;</span><br><span class="line">	p[<span class="number">7</span>]=<span class="string">&quot;July&quot;</span>;  p[<span class="number">8</span>]=<span class="string">&quot;August&quot;</span>;    p[<span class="number">9</span>]=<span class="string">&quot;September&quot;</span>;</span><br><span class="line">	p[<span class="number">10</span>]=<span class="string">&quot;October&quot;</span>;p[<span class="number">11</span>]=<span class="string">&quot;November&quot;</span>;  p[<span class="number">12</span>]=<span class="string">&quot;December&quot;</span>;</span><br><span class="line">	<span class="comment">//可能会警告，但无关紧要</span></span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,p[n]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">运行结果：</span><br><span class="line">3 	// 输入</span><br><span class="line">March 	// 输出</span><br></pre></td></tr></table></figure></div>
<ul>
<li>指向函数的指针</li>
</ul>
<p>函数名也代表函数的起始地址。</p>
<p>此内容直接看以下例子——比较两个数字的大小</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">max</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> (x &gt; y ? x : y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">50</span>, b = <span class="number">100</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;max=%d&quot;</span>, max(a, b));</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>上代码等价于：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">max</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> (x &gt; y ? x : y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">50</span>, b = <span class="number">100</span>;</span><br><span class="line">	<span class="type">int</span> (*p)(<span class="type">int</span>,<span class="type">int</span>);</span><br><span class="line">	p = max;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;max=%d&quot;</span>, (*p)(a,b));</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>注意 <code>int (*p)(int,int)</code>；定义指向函数的指针变量： <code>类型名 (* 指针变量名)(函数参数表列);</code></p>
<p>指向函数的指针变量的一个重要用途是把函数的入口地址作为参数传递到其他函数，下附一个使用函数指针的例子；</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">fun</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> (*p)(<span class="type">int</span>,<span class="type">int</span>))</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> ans;</span><br><span class="line">	ans = (*p)(x,y);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">max</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;max=&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> x &gt; y ? x : y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">min</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;min=&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> x &lt; y ? x : y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">34</span>, b = <span class="number">-21</span>, n;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;请输入你的选择(1-求最大值，2-求最小值)：&quot;</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">if</span>(n==<span class="number">1</span>)  fun(a, b, max);</span><br><span class="line">	<span class="keyword">if</span>(n==<span class="number">2</span>)  fun(a, b, min);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>返回指针类型的函数</li>
</ul>
<p>定义返回指针值得函数形式为： <code>类型名* 函数名(参数表列);</code></p>
<p>依然是使用一个例子：对若干学生成绩，找出不合格得课程得学生及其学生号，代码如下：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">float</span>* <span class="title function_">search</span><span class="params">(<span class="type">float</span> (*pointer)[<span class="number">4</span>])</span><span class="comment">//定义函数</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">	<span class="type">float</span> *pt;</span><br><span class="line">	pt = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="comment">//切记初始化指针，无则指向NULL</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(; i &lt; <span class="number">4</span>; i ++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(*(*pointer+i)&lt;<span class="number">60</span>)  pt = *pointer;</span><br><span class="line">		<span class="comment">//如有不及格，使pt指向score[i][0]</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> pt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">float</span> score[][<span class="number">4</span>] = &#123;&#123;<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>,<span class="number">90</span>&#125;,&#123;<span class="number">56</span>,<span class="number">89</span>,<span class="number">67</span>,<span class="number">88</span>&#125;,&#123;<span class="number">34</span>,<span class="number">78</span>,<span class="number">90</span>,<span class="number">66</span>&#125;&#125;;</span><br><span class="line">	<span class="comment">//定义数组，初始化成绩，有3名学生，每名学生有4门成绩</span></span><br><span class="line">	<span class="type">float</span> *p;</span><br><span class="line">	<span class="type">int</span> i, j;</span><br><span class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i ++)</span><br><span class="line">	&#123;</span><br><span class="line">		p = search(score + i);</span><br><span class="line">		<span class="comment">//调用search函数，如不及格则返回score[i][0]的地址</span></span><br><span class="line">		<span class="comment">//否则返回NULL</span></span><br><span class="line">		<span class="keyword">if</span>(p == *(score+i))  <span class="comment">//若返回的不是NULL，则输出学生成绩</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;No.%d score:&quot;</span>,i);</span><br><span class="line">			<span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j ++)</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%5.2f &quot;</span>, *(p+j));</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>指向指针数据的指针变量</li>
</ul>
<p>指向指针数据的指针，可以嵌套，如：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">100</span>;</span><br><span class="line">	<span class="type">int</span> *p;</span><br><span class="line">	p = &amp;a;</span><br><span class="line">	<span class="type">int</span> **q;</span><br><span class="line">	q = &amp;p;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, **q);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">输出结果：</span><br><span class="line">100</span><br></pre></td></tr></table></figure></div>
<p><br><br><br></p>
<h1>Ⅹ —— 共用体与结构体</h1>
<h2 id="10-1-共用体">10.1 共用体</h2>
<p><strong>共用体（Union）</strong> 是一种特殊的数据类型，允许在相同的内存位置存储不同的数据类型。可以定义一个带有多成员的共用体，但是任何时候只能有一个成员带有值。</p>
<p>为了定义共用体，必须使用 <code>union</code> 语句。 <code>union</code> 语句定义了一个新的数据类型，带有多个成员。定义格式如下：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">union</span> [<span class="title">union</span> <span class="title">tag</span>]</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	成员定义;</span><br><span class="line">	成员定义;</span><br><span class="line">	...</span><br><span class="line">	成员定义;</span><br><span class="line">&#125; 共用体变量;</span><br></pre></td></tr></table></figure></div>
<p><code>union tag</code> 是可选的，每个 <code>成员定义</code> 是标准的变量定义，比如 <code>int i;</code> 或者 <code>float f;</code> 或者其他有效的变量定义。在共用体定义的末尾，最后一个分号之前，可以指定一个或多个共用体变量，这是可选的。</p>
<p>下面定义一个名为 <code>Data</code> 的共用体类型，有三个成员 <code>i</code> 、 <code>f</code> 和 <code>str</code> ：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">Data</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="type">int</span> i;</span><br><span class="line">	<span class="type">float</span> f;</span><br><span class="line">	<span class="type">char</span>  str[<span class="number">10</span>];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div>
<p>也可以像枚举类型定义枚举类型的同时定义枚举变量一样，定义共用体类型的同时定义共用体变量。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">Data</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="type">int</span> i;</span><br><span class="line">	<span class="type">float</span> f;</span><br><span class="line">	<span class="type">char</span>  str[<span class="number">10</span>];</span><br><span class="line">&#125; data;</span><br></pre></td></tr></table></figure></div>
<p><code>Data</code> 类型的变量可以存储一个整数、一个浮点数，或者一个字符串。这意味着一个变量（相同的内存位置）可以存储多个多种类型的数据。可以根据需要在一个共用体内使用任何内置的或者用户自定义的数据类型。</p>
<p><strong>共用体占用的内存应足够存储共用体中最大的成员。</strong> 例如，在上面的实例中，<code>Data</code> 将占用10个字节的内存空间，因为在各个成员中，字符串所占用的空间是最大的。</p>
<p>使用共用体时，我们需要先创建共用体类型变量，再根据变量访问成员。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">Data</span> <span class="title">data</span>;</span></span><br></pre></td></tr></table></figure></div>
<p>为了访问共用体的成员，使用成员访问运算符 <code>.</code> ，如 <code>data.i</code> 、 <code>data.f</code> 、 <code>data.str</code> ，但是在同一时间只能使用一个成员。</p>
<h2 id="10-2-结构体">10.2 结构体</h2>
<p><strong>结构体</strong> 与共用体类似，不同的是结构体的成员并列存在，可同时使用。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">tag</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	成员定义;</span><br><span class="line">	成员定义;</span><br><span class="line">	...</span><br><span class="line">	成员定义;</span><br><span class="line">&#125; 结构体变量;</span><br></pre></td></tr></table></figure></div>
<p><code>tag</code> 是结构体标签，每个 <code>成员定义</code> 是标准的变量定义，比如 <code>int i;</code> 或者 <code>float f;</code> 或者其他有效的变量定义。在结构体定义的末尾，最后一个分号之前，可以指定一个或多个结构体变量，这是可选的。</p>
<p>如：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//此声明声明了拥有3个成员的结构体，分别为整型的a，字符型的b和双精度的c</span></span><br><span class="line"><span class="comment">//同时又声明了结构体变量s1</span></span><br><span class="line"><span class="comment">//这个结构体并没有标明其标签</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="type">int</span> a;</span><br><span class="line">	<span class="type">char</span> b;</span><br><span class="line">	<span class="type">double</span> c;</span><br><span class="line">&#125; s1;</span><br><span class="line"></span><br><span class="line"><span class="comment">//此声明声明了拥有3个成员的结构体，分别为整型的a，字符型的b和双精度的c</span></span><br><span class="line"><span class="comment">//结构体的标签被命名为SIMPLE,没有声明变量</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">SIMPLE</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="type">int</span> a;</span><br><span class="line">	<span class="type">char</span> b;</span><br><span class="line">	<span class="type">double</span> c;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//用SIMPLE标签的结构体，另外声明了变量t1、t2、t3</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">SIMPLE</span> <span class="title">t1</span>, <span class="title">t2</span>[20], *<span class="title">t3</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//也可以用typedef创建新类型</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="type">int</span> a;</span><br><span class="line">	<span class="type">char</span> b;</span><br><span class="line">	<span class="type">double</span> c; </span><br><span class="line">&#125; Simple2;</span><br><span class="line"><span class="comment">//现在可以用Simple2作为类型声明新的结构体变量</span></span><br><span class="line">Simple2 u1, u2[<span class="number">20</span>], *u3;</span><br></pre></td></tr></table></figure></div>
<p>第一个和第二声明被编译器当作两个完全不同的类型，即使他们的成员列表是一样的，如果令 <code>t3=&amp;s1</code> ，则是非法的。</p>
<p>如果将结构体与基本数据类型做对比的话，举个例子：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Tag</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="type">double</span> number;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Tag</span> <span class="title">b</span>；</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">typedef</span> <span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="type">int</span> number;</span><br><span class="line">&#125; Tag2;</span><br><span class="line">Tag2 c;</span><br></pre></td></tr></table></figure></div>
<p>那么 <code>int</code> 、 <code>struct Tag</code> 、 <code>Tag2</code> 是对等的，都是数据类型；而 <code>a</code> 、 <code>b</code> 和 <code>c</code> 是同级的，都是变量。</p>
<p>结构体的成员可以包含其他结构体，也可以包含指向自己结构体类型的指针。如果两个结构体互相包含，则需要对其中一个结构体进行不完整声明，如下所示：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">B</span>;</span>    <span class="comment">//对结构体B进行不完整声明</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//结构体A中包含指向结构体B的指针</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">A</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">B</span> *<span class="title">partner</span>;</span></span><br><span class="line">    <span class="comment">//other members;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//结构体B中包含指向结构体A的指针，在A声明完后，B也随之进行声明</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">B</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">A</span> *<span class="title">partner</span>;</span></span><br><span class="line">    <span class="comment">//other members;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div>
<p>为了访问结构的成员，使用成员访问运算符 <code>.</code> 。对于结构体的初始化，可以使用 <code>&#123;&#125;</code> ：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//book.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Books</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="type">char</span>  title[<span class="number">50</span>];</span><br><span class="line">   	<span class="type">char</span>  author[<span class="number">50</span>];</span><br><span class="line">   	<span class="type">char</span>  subject[<span class="number">100</span>];</span><br><span class="line">   	<span class="type">int</span>   book_id;</span><br><span class="line">&#125; book = &#123;<span class="string">&quot;C 语言&quot;</span>, <span class="string">&quot;RUNOOB&quot;</span>, <span class="string">&quot;编程语言&quot;</span>, <span class="number">123456</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;title : %s\nauthor: %s\nsubject: %s\nbook_id: %d\n&quot;</span>, book.title, book.author, book.subject, book.book_id);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>结构体作为函数的参数传入时，传参方式与其他类型的变量或指针类似，如： <code>void printBooks(struct Books b);</code> ，之后在函数里访问成员即可。</p>
<p>可以定义指向结构的指针，方式与定义指向其他类型变量的指针相似，如：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Books</span> *<span class="title">struct_pointer</span>;</span></span><br><span class="line">struct_pointer = &amp;Book1;</span><br><span class="line">struct_pointer-&gt;title; <span class="comment">// 指针访问成员时</span></span><br></pre></td></tr></table></figure></div>
<p>需要注意的是，使用指向该结构的指针访问结构的成员时，必须使用 <code>-&gt;</code> 运算符。</p>
<p>使用 <code>sizeof</code> 运算符来计算结构体的大小，这在使用链表时有帮助。</p>
<p><br><br><br></p>
<h1>Ⅺ —— 链表</h1>
<h2 id="11-1-链表及其构成">11.1 链表及其构成</h2>
<p><strong>链表</strong>是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的。而这些储存单元需要及时开辟，此时需要使用动态储存分配函数。</p>
<p><strong>链表</strong>由一系列结点（链表中每一个元素称为结点）组成，结点可以在运行时动态生成。每个结点包括两个部分：一个是存储数据元素的 <strong>数据域</strong> ，另一个是存储下一个结点地址的 <strong>指针域</strong> 。如：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">test</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="type">int</span> num;		<span class="comment">// 数据域</span></span><br><span class="line">  <span class="type">char</span> name[<span class="number">5</span>];		<span class="comment">// 数据域</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">test</span> *<span class="title">next</span>;</span> 	<span class="comment">// 指针域</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div>
<p>链表还可分为动态链表和静态链表，此处不讨论静态链表，均为动态链表。</p>
<p>使用链表结构可以克服数组链表需要预先知道数据大小的缺点，链表结构可以充分利用计算机内存空间，实现灵活的内存动态管理。但是链表失去了数组随机读取的优点，同时链表由于增加了结点的指针域，空间开销比较大。</p>
<p>链表最明显的好处就是，常规数组排列关联项目的方式可能不同于这些数据项目在记忆体或磁盘上顺序，数据的存取往往要在不同的排列顺序中转换。链表允许插入和移除表上任意位置上的节点，但是不允许随机存取。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/c_arrayandlist.png" alt="链表与数组"><figcaption>链表与数组</figcaption></figure></p>
<h2 id="11-2-内存管理的函数">11.2 内存管理的函数</h2>
<p>关于动态储存分配函数有 <code>calloc()</code> 、 <code>malloc()</code> 、 <code>free()</code> 、 <code>realloc()</code> 。他们都存在于 <code>stdlib.h</code> 头文件中。</p>
<p>有的编译系统要求用 <code>malloc.h</code> 头文件而不是 <code>stdlib.h</code> 头文件，实际上这两个头文件都包含以上的动态储存分配函数。</p>
<p>除 <code>free()</code> 函数，其他函数都会返回一定的地址，需要对地址进行强制类型转换，转换为我们所需的数据类型。</p>
<table>
<thead>
<tr>
<th style="text-align:center">函数名</th>
<th style="text-align:center">函数原型</th>
<th style="text-align:center">功能</th>
<th style="text-align:center">返回值</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>calloc()</code></td>
<td style="text-align:center"><code>void *calloc(unsigned n, unsign size)</code></td>
<td style="text-align:center">分配n个大小为size的内存连续空间</td>
<td style="text-align:center">成功时返回分配内存的起始地址，不成功返回0</td>
</tr>
<tr>
<td style="text-align:center"><code>malloc()</code></td>
<td style="text-align:center"><code>void *calloc(unsigned size)</code></td>
<td style="text-align:center">分配1个大小为size的储存区</td>
<td style="text-align:center">成功时返回分配内存起始地址，内存不足返回0</td>
</tr>
<tr>
<td style="text-align:center"><code>free()</code></td>
<td style="text-align:center"><code>void free(void *p)</code></td>
<td style="text-align:center">释放p所指的内存区</td>
<td style="text-align:center">无</td>
</tr>
<tr>
<td style="text-align:center"><code>realloc()</code></td>
<td style="text-align:center"><code>void *calloc(viod *p, unsigned isze)</code></td>
<td style="text-align:center">将p所指的已分配内存区大小改为size，size可大于或小于原来大小</td>
<td style="text-align:center">返回指向该内存的指针</td>
</tr>
</tbody>
</table>
<h2 id="11-3-单向链表">11.3 单向链表</h2>
<p><strong>单向链表</strong>，指针指向单向，连接方向单向，优点是简单，缺点是效率略低。</p>
<p>单向链表是由结点构成，所讨论的单向链表结点如下：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">test</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="type">int</span> num;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">test</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>链表的创建</li>
</ul>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//链表创建，返回一个表头head</span></span><br><span class="line"><span class="keyword">struct</span> test *<span class="title function_">creat</span><span class="params">()</span>  </span><br><span class="line">&#123;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">test</span> *<span class="title">head</span>;</span></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">test</span> *<span class="title">p1</span>, *<span class="title">p2</span>;</span></span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">	p1 = p2 = (<span class="keyword">struct</span> test *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> test));  <span class="comment">//开辟一个内存单元</span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p1-&gt;num);  <span class="comment">//输入第一个信息</span></span><br><span class="line">	head = <span class="literal">NULL</span>;  <span class="comment">//指针必须初始化，无地址则指向NULL</span></span><br><span class="line">	<span class="keyword">while</span>(p1-&gt;num != <span class="number">0</span>) <span class="comment">// 设计当输入0时停止创建链表</span></span><br><span class="line">	&#123;</span><br><span class="line">		n += <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(n == <span class="number">1</span>)  head = p1; <span class="comment">// 当链表为空，即创建的是第一个结点，则使头结点指向p1的地址</span></span><br><span class="line">		<span class="keyword">else</span>  p2-&gt;next = p1;	<span class="comment">// 当链表非空，用next指针连接</span></span><br><span class="line">		p2 = p1; <span class="comment">// p2指向p1所指的地址，p2为当前链表末尾</span></span><br><span class="line">		p1 = (<span class="keyword">struct</span> test *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> test));  <span class="comment">//再开辟内存单元，并将起始地址赋值给p1</span></span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p1-&gt;num);   <span class="comment">//循环输入信息</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">free</span>(p1); <span class="comment">// 释放最后一个结点，即释放输入为0的结点</span></span><br><span class="line">	p2-&gt;next = <span class="literal">NULL</span>; <span class="comment">// 链表的末尾指向NULL</span></span><br><span class="line">	<span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>根据上述代码，演示过程如图：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/c_create.png" alt="链表创建过程"><figcaption>链表创建过程</figcaption></figure></p>
<ul>
<li>链表的插入</li>
</ul>
<p>链表的插入思路如图：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/c_insert.png" alt="链表的插入"><figcaption>链表的插入</figcaption></figure></p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 在某链表中插入一个新的由指针引用的结构体</span></span><br><span class="line"><span class="keyword">struct</span> test *<span class="title function_">add</span><span class="params">(<span class="keyword">struct</span> test *head, <span class="keyword">struct</span> test *insert)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">test</span> *<span class="title">p0</span>, *<span class="title">p1</span>, *<span class="title">p2</span>;</span></span><br><span class="line">	p0 = insert;  <span class="comment">//将新的由指针引用的结构体赋值给p0</span></span><br><span class="line">	p1 = head;</span><br><span class="line">	<span class="keyword">if</span>(head == <span class="literal">NULL</span>)<span class="comment">//判断是否为空链表</span></span><br><span class="line">	&#123;</span><br><span class="line">		head = p0;  <span class="comment">//是空链表则从头插入，头指针为p0</span></span><br><span class="line">		p0-&gt;next = <span class="literal">NULL</span>;<span class="comment">//后面无新的数据</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>    <span class="comment">//链表非空，按num排序，找到适合的位置或者到链表末端停下</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">while</span>((p0-&gt;num &gt; p1-&gt;num) &amp;&amp; (p1-&gt;next != <span class="literal">NULL</span>))</span><br><span class="line">		&#123;</span><br><span class="line">			p2=p1;</span><br><span class="line">			p1=p1-&gt;next;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span>(p0-&gt;num &lt;= p1-&gt;num) <span class="comment">// 找到合适的位置</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(head == p1) head = p0;</span><br><span class="line">			<span class="keyword">else</span>  p2-&gt;next = p0;</span><br><span class="line">			p0-&gt;next = p1;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="comment">// 找不到合适位置，插入到链表末尾</span></span><br><span class="line">		&#123;</span><br><span class="line">			p1-&gt;next = p0;</span><br><span class="line">			p0-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">		&#125;		</span><br><span class="line">	&#125;		</span><br><span class="line">	<span class="keyword">return</span> head; <span class="comment">// 返回更新后的链表表头</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>链表的删除</li>
</ul>
<p>链表的删除思路如图：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/c_delete.png" alt="链表的删除"><figcaption>链表的删除</figcaption></figure></p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 在某链表中查找num并删除该结构体，返回更新后的表头</span></span><br><span class="line"><span class="keyword">struct</span> test *<span class="title function_">del</span><span class="params">(<span class="keyword">struct</span> test *head, <span class="type">int</span> num)</span> </span><br><span class="line">&#123;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">test</span> *<span class="title">p1</span>, *<span class="title">p2</span>;</span></span><br><span class="line">	<span class="keyword">if</span>(head == <span class="literal">NULL</span>)  <span class="comment">// 判断是否为空链表</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;这是一个空链表\n&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> head;</span><br><span class="line">	&#125;  </span><br><span class="line">	</span><br><span class="line">	p1 = head;</span><br><span class="line">	<span class="comment">// 链表非空，将创建好的链表头指针head赋值给p1</span></span><br><span class="line">	<span class="comment">// 不能直接对表头进行操作，否则变动完之后找不到表头</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">// 当没匹配到元素或者已经到链表末端，停止循环</span></span><br><span class="line">	<span class="keyword">while</span>(p1-&gt;num != num &amp;&amp; p1-&gt;next != <span class="literal">NULL</span>)  </span><br><span class="line">	&#123;</span><br><span class="line">		p2 = p1;		<span class="comment">// p2指向的是p1的前一个结点</span></span><br><span class="line">		p1 = p1-&gt;next;		<span class="comment">// p1指针遍历链表</span></span><br><span class="line">	&#125; <span class="comment">// 此处寻找元素</span></span><br><span class="line">  </span><br><span class="line">	<span class="keyword">if</span>(p1-&gt;num == num)  <span class="comment">// 如果是找到了元素而停止循环的情况</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(p1 == head)</span><br><span class="line">		&#123;</span><br><span class="line">			head = p1-&gt;next;<span class="comment">// 如果删除的是头指针，则将头指针指向下一个，修改表头</span></span><br><span class="line">			<span class="built_in">free</span>(p1);</span><br><span class="line">		&#125;  </span><br><span class="line">			</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			p2-&gt;next = p1-&gt;next;  <span class="comment">// 删除节点，即跳过某结构体直接连向下一个</span></span><br><span class="line">			<span class="built_in">free</span>(p1);</span><br><span class="line">		&#125;  </span><br><span class="line">			</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> </span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Not found!&quot;</span>);   <span class="comment">// 到链表末端而停止循环的情况，也就是没找到</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> head;	<span class="comment">// 返回修改后的表头</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>链表的查找</li>
</ul>
<p>思路简单，自行理解代码。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 在链表中查找值为obj的结构体，找到返回该结构体的指针，找不到返回NULL</span></span><br><span class="line"><span class="keyword">struct</span> test *<span class="title function_">find</span><span class="params">(<span class="keyword">struct</span> test *head, <span class="type">int</span> obj)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">test</span> *<span class="title">p</span>, *<span class="title">res</span> =</span> <span class="literal">NULL</span>; <span class="comment">// res作为返回的结构体</span></span><br><span class="line">	<span class="keyword">if</span>(head == <span class="literal">NULL</span>)	<span class="keyword">return</span> <span class="literal">NULL</span>; <span class="comment">// 链表为空返回空</span></span><br><span class="line">	</span><br><span class="line">	p = head;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">while</span>(p != <span class="literal">NULL</span>) <span class="comment">// 遍历链表</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(p-&gt;num == obj) <span class="comment">// 找到目标</span></span><br><span class="line">		&#123;</span><br><span class="line">			res = p;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		p = p-&gt;next; <span class="comment">// 往下顺延</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>链表的输出</li>
</ul>
<p>思路简单，自行理解代码。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// while循环输出链表</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(<span class="keyword">struct</span> test *head)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">test</span> *<span class="title">p</span>;</span></span><br><span class="line">	p = head;</span><br><span class="line">	<span class="keyword">while</span>(p != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, p-&gt;num);</span><br><span class="line">		p = p-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h2 id="11-4-双向链表">11.4 双向链表</h2>
<p><strong>双向链表</strong>，指针指向双向，连接方向双向。</p>
<p>双向链表是由结点构成，所讨论的双向链表结点如下：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">test</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="type">int</span> num;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">test</span> *<span class="title">next</span>;</span>	<span class="comment">// 指向后一个结构体</span></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">test</span> *<span class="title">pre</span>;</span>	<span class="comment">// 指向前一个结构体</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div>
<p>双向链表结构如下图：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/c_dlist.png" alt="双向链表"><figcaption>双向链表</figcaption></figure></p>
<p>至于双向链表的创建，插入，删除，查找，不详细介绍。多一个方向的指针使得该链表可以往前遍历，提高其方便性。</p>
<h2 id="11-5-循环链表">11.5 循环链表</h2>
<p>循环链表的首位是相接的，构成一个环。所以还可以分成单向循环链表和双向循环链表。</p>
<ul>
<li>循环单向链表</li>
</ul>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/c_clist.png" alt="循环单向链表"><figcaption>循环单向链表</figcaption></figure></p>
<ul>
<li>循环双向链表</li>
</ul>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/c_cdlist.png" alt="循环双向链表"><figcaption>循环双向链表</figcaption></figure></p>
<p><br><br><br></p>
<h1>Ⅻ —— 对文件的读写</h1>
<h2 id="12-1-打开文件">12.1 打开文件</h2>
<p>可以使用 <code>fopen()</code> 函数来创建一个新的文件或者打开一个已有的文件，这个调用会初始化类型 <code>FILE</code> 的一个对象，类型 <code>FILE</code> 包含了所有用来控制流的必要的信息。下面是这个函数调用的原型：</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line">FILE *<span class="title function_">fopen</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *filename, <span class="type">const</span> <span class="type">char</span> *mode)</span>;</span><br></pre></td></tr></table></figure></div>
<p>函数的第一参数是打开的文件名，常量字符指针类型，也能看成字符串类型；第二参数是打开文件的模式，有如下模式：</p>
<table>
<thead>
<tr>
<th style="text-align:center">模式</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>r</code></td>
<td style="text-align:center">打开一个已有的文本文件，允许读取文件</td>
</tr>
<tr>
<td style="text-align:center"><code>r+</code></td>
<td style="text-align:center">打开一个已有的文本文件，允许读写文件</td>
</tr>
<tr>
<td style="text-align:center"><code>w</code></td>
<td style="text-align:center">打开一个文本文件，允许写入。若文件不存在将新建文件，若文件存在则覆盖原有内容重新写入</td>
</tr>
<tr>
<td style="text-align:center"><code>w+</code></td>
<td style="text-align:center">打开一个文本文件，允许读写。若文件不存在将新建文件，若文件存在则覆盖原有内容重新写入</td>
</tr>
<tr>
<td style="text-align:center"><code>a</code></td>
<td style="text-align:center">打开一个文本文件，允许写入。若文件不存在将新建文件，若文件存在则在原有内容上追加写入</td>
</tr>
<tr>
<td style="text-align:center"><code>a+</code></td>
<td style="text-align:center">打开一个文本文件，允许读写。若文件不存在将新建文件，若文件存在则在原有内容上追加写入</td>
</tr>
</tbody>
</table>
<p>如果是处理二进制文件的情况，则在原来的基础上加上 <code>b</code> ，如： <code>rb</code> ， <code>wb</code> ， <code>ab</code> ， <code>rb+</code> ， <code>r+b</code> ， <code>wb+</code> ， <code>w+b</code> ， <code>ab+</code> ， <code>a+b</code> 。</p>
<p><strong>打开文件处理完成之后记得关闭文件</strong>，使用 <code>fclose()</code> 函数。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">fclose</span><span class="params">(FILE *fp)</span>;</span><br></pre></td></tr></table></figure></div>
<p>如果成功关闭文件， <code>fclose()</code> 函数返回零，如果关闭文件时发生错误，函数返回  <code>EOF</code> 。这个函数实际上，会清空缓冲区中的数据，关闭文件，并释放用于该文件的所有内存。 <code>EOF</code> 是一个定义在头文件 <code>stdio.h</code> 中的常量，上述打开文件函数和关闭文件函数也都在 <code>stdio.h</code> 头文件中。</p>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	FILE *fp;	<span class="comment">// 文件对象</span></span><br><span class="line">	fp = fopen(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;a+&quot;</span>); <span class="comment">// 打开文件并把文件指针绑定到该文件</span></span><br><span class="line">	fclose(fp); <span class="comment">// 关闭文件</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h2 id="12-2-写入文件">12.2 写入文件</h2>
<ul>
<li>函数 <code>fputc()</code> ：把参数 <code>c</code> 的字符值写入到 <code>fp</code> 所指向的输出流中。如果写入成功，它会返回写入的字符，如果发生错误，则会返回 <code>EOF</code> 。</li>
</ul>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">fputc</span><span class="params">(<span class="type">int</span> c, FILE *fp)</span>;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>函数 <code>fputs()</code> ：把字符串 <code>s</code> 写入到 <code>fp</code> 所指向的输出流中。如果写入成功，它会返回一个非负值，如果发生错误，则会返回 <code>EOF</code> 。</li>
</ul>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">fputs</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *s, FILE *fp)</span>;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>函数 <code>fprintf</code> ：把一个字符串写入到文件中。该函数形式与 <code>printf</code> 函数类似，参考 <code>printf</code> 函数使用。</li>
</ul>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">fprintf</span><span class="params">(FILE *fp,<span class="type">const</span> <span class="type">char</span> *format, ...)</span> </span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 两函数比较</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d%d&quot;</span>, a, b);</span><br><span class="line"><span class="built_in">fprintf</span>(fp, <span class="string">&quot;%d %d&quot;</span>, a, b);</span><br></pre></td></tr></table></figure></div>
<h2 id="12-3-读取文件">12.3 读取文件</h2>
<ul>
<li>函数 <code>fgetc()</code> ：从 <code>fp</code> 所指向的输入文件中读取一个字符，返回值是读取的字符，发生错误时返回 <code>EOF</code> 。</li>
</ul>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">fgetc</span><span class="params">(FILE *fp)</span>;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>函数 <code>fgets()</code> ：从 <code>fp</code> 所指向的输入文件中读取n-1个字符，并把字符串复制到 <code>buf</code> 中，最后追加 <code>NULL</code> 终止字符串。该函数如果在读取最后一个字符之前就遇到一个换行符 ‘\n’ 或文件的末尾 <code>EOF</code> ，则只会返回读取到的字符，包括换行符。</li>
</ul>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> *<span class="title function_">fgets</span><span class="params">(<span class="type">char</span> *buf, <span class="type">int</span> n, FILE *fp )</span>;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>函数 <code>fscanf()</code> ：从文件中读取字符串，但是在遇到第一个空格和换行符时，它会停止读取。该函数形式与 <code>scanf</code> 函数类似，参考 <code>scanf</code> 函数使用，记得添加取地址符 <code>&amp;</code> 。</li>
</ul>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">fscanf</span><span class="params">(FILE *fp, <span class="type">const</span> <span class="type">char</span> *format, ...)</span></span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 两函数比较</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line"><span class="built_in">fscanf</span>(fp, <span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br></pre></td></tr></table></figure></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>Python语言入门学习教程</title>
    <url>/%E7%AC%94%E8%AE%B0/python-language-learning/</url>
    <content><![CDATA[<p>个人整理面向入门基础级别的Python语言学习教程。</p>
<p>关键词：Python</p>
<span id="more"></span>
<hr>
<!-- toc -->
<h1>一. Python的基本观念</h1>
<h2 id="1-1-什么是python语言">1.1 什么是Python语言</h2>
<p>Python是一种 <strong>直译的</strong> 、 <strong>面向对象的</strong> 、 <strong>拥有许多函数库</strong> 的语言。</p>
<p><strong>直译</strong>表明它不需要经过像C语言一样的编译过程，直接由直译器运行。这有好处也有坏处，好处是方便简洁直接运行；坏处是没有编译器的错误检查，即运行到某行才知道错误。</p>
<p><strong>面向对象</strong>表明它是一门高级语言，具有抽象化的概念（也就是对象），能完成众多工作。Python中一切都是对象，而对象的函数称作方法。</p>
<p><strong>拥有许多函数库</strong>表明它有很多内置的套件或者是模块，开源且每个人可贡献，我们直接import调用这些模块即可完成一些复杂的任务。 <em>由于Python的模块众多，此教程只介绍最基本的语法，模块的使用建议查看模块的帮助文档，建议善于查阅资料</em></p>
<p>当然Python也具有垃圾回收的功能，即程序执行时直译器会主动回收不再需要的动态内存空间，减少程序员犯错的机会。</p>
<p>Python也经历了很多版本的迭代，从最初的Python 2.0到Python 3.0、Python 3.x。Python 3在开发时与Python 2不兼容，所以可以认为是两个独立的版本，但后面官方把Python 3.x版本的特性移植到Python 2.6/2.7x中。本教程的演示代码经过Python 3.11.4测试。</p>
<h2 id="1-2-怎么写python程序">1.2 怎么写Python程序</h2>
<p>首先具备Python的直译器，即下载安装Python。<a class="link" href="https://www.python.org/downloads/windows/">官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>选择尽量较新的Python版本下载。打开下载的Python安装包，选择<code>Customize installation</code>客制化安装，记得勾选下面的“Add python.exe to PATH”。接着默认勾选pip：包管理器，下载包时使用。建议勾选上，再接着更改安装路径，建议安装在非系统盘。最后等待安装完成即可。具体可参考<a class="link" href="https://fingsinz.space/%E6%97%A5%E5%B8%B8/8/">这篇博客 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>接着编写Python并执行，Python的后缀名为 <code>.py</code> 。在此介绍两种方式编写Python：记事本和Visual Studio Code。</p>
<ol>
<li>记事本方式：新建记事本，命名为 <code>xxx.py</code> ，在里面编写Python代码，之后启用命令提示符cmd使用python命令直译运行。</li>
</ol>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/py-language-leaning_write.jpg" alt="记事本编写Python"><figcaption>记事本编写Python</figcaption></figure></p>
<ol start="2">
<li>Visual Studio Code方式：直接编写代码运行。</li>
</ol>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/py-language-leaning_write2.jpg" alt="VSCode编写Python"><figcaption>VSCode编写Python</figcaption></figure></p>
<p>在Python中，使用 <code>#</code> 作为整行注释符号，三个单引号或双引号作为整段注释符号。</p>
<p>同时，Python不像C语言，Python的每句最后不需要添加分号 <code>;</code> ，还把相同的缩进作为一整个语句块，这些特性会在后面的代码慢慢体现。</p>
<h2 id="1-3-import模块">1.3 import模块</h2>
<p>想使用 Python 源文件或者特殊模块，只需在另一个源文件里执行 import 语句，语法如下：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> module1[, module2[,... moduleN]</span><br></pre></td></tr></table></figure></div>
<p>比如引入系统模块： <code>impory sys</code></p>
<p>在此基础教程上，一般不需要使用import便可满足使用。但是在开发程序时，需要其他模块的支持，便需要 <code>import</code> 。</p>
<p><code>from … import</code> ：语句从模块中导入一个指定的部分到当前命名空间中，语法如下：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> modname <span class="keyword">import</span> name1[, name2[, ... nameN]]</span><br></pre></td></tr></table></figure></div>
<p><code>from … import *</code> ：把一个模块的所有内容全都导入到当前的命名空间也是可行的，只需使用如下声明：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> modname <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure></div>
<p>在模块间，需要清楚本模块和引入模块的运行。如果想在模块被引入时，模块中的某一程序块不执行，可以用 <code>__name__</code> 属性来使该程序块仅在该模块自身运行时执行。</p>
<p>举个例子，有两个Python文件：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># a.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&#x27;a.py的main中运行&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&#x27;a.py的非main中运行&#x27;</span>)</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># b.py</span></span><br><span class="line"><span class="keyword">import</span> a</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;b.py运行&#x27;</span>)</span><br></pre></td></tr></table></figure></div>
<p>运行a.py输出：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">a.py的main中运行</span><br></pre></td></tr></table></figure></div>
<p>运行b.py输出：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">a.py的非main中运行</span><br><span class="line">b.py运行</span><br></pre></td></tr></table></figure></div>
<p><br><br><br></p>
<h1>二. 函数</h1>
<h2 id="2-1-函数的基本结构">2.1 函数的基本结构</h2>
<p>函数的结构应当如下，包括 <strong>函数名字function_name</strong> 、 <strong>参数arguments</strong> 和 <strong>函数主体Body</strong> 。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">function_name</span>(<span class="params">arguments</span>):</span><br><span class="line">	<span class="comment"># body1</span></span><br><span class="line">	<span class="comment"># body2</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>
<p><code>def</code> ：函数代码块的开头，后接函数名字、参数列表和函数主体。</p>
</li>
<li>
<p><strong>函数名字</strong>：标记一个函数的名字。</p>
</li>
<li>
<p><strong>参数列表</strong>：当函数被调用时，可以向参数传递值。参数列表包括函数参数的顺序、数量。参数是可选的，也就是说，函数可能不包含参数。</p>
</li>
<li>
<p><strong>函数主体</strong>：函数内容以冒号 <code>:</code> 开始，并且具有相同的缩进。函数主体包含一组定义函数执行任务的语句。若有返回值的函数使用 <code>return</code> 返回，没有 <code>return</code> 相当于返回 <code>None</code> 。函数主体中遇到返回表示结束函数。</p>
</li>
</ul>
<h2 id="2-2-函数的定义">2.2 函数的定义</h2>
<p>Python与C语言不一样，不存在函数提前声明一说。即想要调用某函数，必先在前面定义该函数，并不存在调用前先使用函数声明而调用后再函数定义。</p>
<p>定义一个函数十分简单，就如：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">a, b</span>):</span><br><span class="line">	<span class="keyword">return</span> a + b</span><br></pre></td></tr></table></figure></div>
<h2 id="2-3-传递参数和调用函数">2.3 传递参数和调用函数</h2>
<p>直接使用函数名加上传递参数即可调用函数。当函数不需要传递参数时：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">doNothing</span>():</span><br><span class="line">	<span class="comment"># do Nothing</span></span><br><span class="line">doNothing()	<span class="comment"># 函数调用</span></span><br></pre></td></tr></table></figure></div>
<p>在Python中，变量是没有类型的，而对象有不同类型的区分。当函数需要传递参数时，参数列表就简单写个变量名：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">a, b</span>):</span><br><span class="line">	<span class="keyword">return</span> a + b</span><br><span class="line">c = add(<span class="number">1</span>, <span class="number">2</span>)	<span class="comment"># c = 3</span></span><br></pre></td></tr></table></figure></div>
<p>Python中一切都是对象。</p>
<p>参数传递时，是按 <strong>对象</strong> 讨论的，分为可变对象传递和不可变对象传递。</p>
<ul>
<li>
<p>不可变对象传递（如整数、字符串、元组传递）时，类似于C语言的值传递，传递的只是一个值，并没有影响对象本身。如果在函数中修改对象的值，则是新生成一个对象。</p>
</li>
<li>
<p>可变对象传递（如列表、字典传递）时，类似于C语言的地址传递，或者说引用传递，修改对象的值，外部的对象也受影响。</p>
</li>
</ul>
<p>调用函数时可使用的正式参数类型有：必需参数、关键字参数、默认参数和不定长参数。</p>
<ul>
<li>必需参数须以正确的顺序传入函数。调用时的数量必须和定义时的一样。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">a, b</span>):</span><br><span class="line">	<span class="keyword">return</span> a + b</span><br><span class="line">c = add(<span class="number">1</span>)	<span class="comment"># 错误，必需参数不一致。</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>关键字参数允许函数调用时参数的顺序与声明时不一致。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">sub</span>(<span class="params">a, b</span>):</span><br><span class="line">	<span class="keyword">return</span> a - b</span><br><span class="line">c = sub(b = <span class="number">2</span>, a = <span class="number">1</span>)	<span class="comment"># c = -1</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>默认参数会在没有传递参数时使用。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">sub1</span>(<span class="params">a, b = <span class="number">1</span></span>):</span><br><span class="line">	<span class="keyword">return</span> a - b</span><br><span class="line">c = sub1(<span class="number">1</span>)	<span class="comment"># 第二参数没有传递，默认b = 1，c = 0</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>不定长参数使得一个函数能处理比当初声明时更多的参数。格式如下，加了 <code>*</code> 的参数会以元组的形式导入，加了 <code>**</code> 的参数会以字典的形式导入；如果单独出现星号 <code>*</code> ，则星号 后的参数必须用关键字传入。不定长参数不过多介绍。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">functionname1</span>(<span class="params">formal_args, *var </span>):	<span class="comment"># 元组形式</span></span><br><span class="line">   <span class="comment"># body</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">functionname2</span>(<span class="params">formal_args, **var </span>):	<span class="comment"># 字典形式</span></span><br><span class="line">   <span class="comment"># body</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">a,b,*,c</span>):	<span class="comment"># *后参数必须以关键字传入。</span></span><br><span class="line">    <span class="keyword">return</span> a+b+c</span><br><span class="line">f(<span class="number">1</span>, <span class="number">2</span>, c = <span class="number">3</span>)</span><br></pre></td></tr></table></figure></div>
<ul>
<li>Python 3.8新增了强制位置参数，举例但不过多介绍。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">a, b, /, c, d, *, e, f</span>):</span><br><span class="line">	<span class="keyword">return</span> a + b + c + d + e + f</span><br><span class="line">f(<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, d = <span class="number">40</span>, e = <span class="number">50</span>, f = <span class="number">60</span>)</span><br><span class="line"><span class="comment"># 形参 a 和 b 必须使用指定位置参数，c 或 d 可以是位置形参或关键字形参，而 e 和 f 要求为关键字形参</span></span><br></pre></td></tr></table></figure></div>
<h2 id="2-4-内置函数">2.4 内置函数</h2>
<p>内置函数有：</p>
<table>
<thead>
<tr>
<th style="text-align:center"><code>abs()</code></th>
<th style="text-align:center"><code>dict()</code></th>
<th style="text-align:center"><code>help()</code></th>
<th style="text-align:center"><code>min()</code></th>
<th style="text-align:center"><code>setattr()</code></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>all()</code></td>
<td style="text-align:center"><code>dir()</code></td>
<td style="text-align:center"><code>hex()</code></td>
<td style="text-align:center"><code>next()</code></td>
<td style="text-align:center"><code>slice()</code></td>
</tr>
<tr>
<td style="text-align:center"><code>any()</code></td>
<td style="text-align:center"><code>divmod()</code></td>
<td style="text-align:center"><code>id()</code></td>
<td style="text-align:center"><code>object()</code></td>
<td style="text-align:center"><code>sorted()</code></td>
</tr>
<tr>
<td style="text-align:center"><code>ascii()</code></td>
<td style="text-align:center"><code>enumerate()</code></td>
<td style="text-align:center"><code>input()</code></td>
<td style="text-align:center"><code>oct()</code></td>
<td style="text-align:center"><code>staticmethod()</code></td>
</tr>
<tr>
<td style="text-align:center"><code>bin()</code></td>
<td style="text-align:center"><code>eval()</code></td>
<td style="text-align:center"><code>int()</code></td>
<td style="text-align:center"><code>open()</code></td>
<td style="text-align:center"><code>str()</code></td>
</tr>
<tr>
<td style="text-align:center"><code>bool()</code></td>
<td style="text-align:center"><code>exec()</code></td>
<td style="text-align:center"><code>isinstance()</code></td>
<td style="text-align:center"><code>ord()</code></td>
<td style="text-align:center"><code>sum()</code></td>
</tr>
<tr>
<td style="text-align:center"><code>bytearray()</code></td>
<td style="text-align:center"><code>filter()</code></td>
<td style="text-align:center"><code>issubclass()</code></td>
<td style="text-align:center"><code>pow()</code></td>
<td style="text-align:center"><code>super()</code></td>
</tr>
<tr>
<td style="text-align:center"><code>bytes()</code></td>
<td style="text-align:center"><code>float()</code></td>
<td style="text-align:center"><code>iter()</code></td>
<td style="text-align:center"><code>print()</code></td>
<td style="text-align:center"><code>tuple()</code></td>
</tr>
<tr>
<td style="text-align:center"><code>callable()</code></td>
<td style="text-align:center"><code>format()</code></td>
<td style="text-align:center"><code>len()</code></td>
<td style="text-align:center"><code>property()</code></td>
<td style="text-align:center"><code>type()</code></td>
</tr>
<tr>
<td style="text-align:center"><code>chr()</code></td>
<td style="text-align:center"><code>frozenset()</code></td>
<td style="text-align:center"><code>list()</code></td>
<td style="text-align:center"><code>range()</code></td>
<td style="text-align:center"><code>vars()</code></td>
</tr>
<tr>
<td style="text-align:center"><code>classmethod()</code></td>
<td style="text-align:center"><code>getattr()</code></td>
<td style="text-align:center"><code>locals()</code></td>
<td style="text-align:center"><code>repr()</code></td>
<td style="text-align:center"><code>zip()</code></td>
</tr>
<tr>
<td style="text-align:center"><code>compile()</code></td>
<td style="text-align:center"><code>globals()</code></td>
<td style="text-align:center"><code>map()</code></td>
<td style="text-align:center"><code>reversed()</code></td>
<td style="text-align:center"><code>__import__()</code></td>
</tr>
<tr>
<td style="text-align:center"><code>complex()</code></td>
<td style="text-align:center"><code>hasattr()</code></td>
<td style="text-align:center"><code>max()</code></td>
<td style="text-align:center"><code>round()</code></td>
<td style="text-align:center"><code>reload()</code></td>
</tr>
<tr>
<td style="text-align:center"><code>delattr()</code></td>
<td style="text-align:center"><code>hash()</code></td>
<td style="text-align:center"><code>memoryview()</code></td>
<td style="text-align:center"><code>set()</code></td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>
<h2 id="2-5-匿名函数">2.5 匿名函数</h2>
<p>Python 使用 <code>lambda</code> 来创建匿名函数。匿名函数即不再使用 <code>def</code> 语句这样标准的形式定义一个函数。</p>
<ul>
<li>
<p><code>lambda</code> 只是一个表达式，函数体比 <code>def</code> 简单很多。</p>
</li>
<li>
<p><code>lambda</code> 的主体是一个表达式，而不是一个代码块。仅仅能在 <code>lambda</code> 表达式中封装有限的逻辑进去。</p>
</li>
<li>
<p><code>lambda</code>  函数拥有自己的命名空间，且不能访问自己参数列表之外或全局命名空间里的参数。</p>
</li>
</ul>
<p>其语法如下：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">lambda</span> [arg1 …] : expression</span><br></pre></td></tr></table></figure></div>
<p>举个例子：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">add = <span class="keyword">lambda</span> a, b : a + b</span><br><span class="line">c = add(<span class="number">1</span>, <span class="number">2</span>)	<span class="comment"># c = 3</span></span><br></pre></td></tr></table></figure></div>
<p><br><br><br></p>
<h1>三. Python的变量与基本运算</h1>
<h2 id="3-1-什么是变量">3.1 什么是变量</h2>
<p>变量是没有类型的，它仅仅是一个对象的引用。而对象具有数据类型。</p>
<p>变量命名应当合法且易懂</p>
<ol>
<li>
<p>必须由英文字母、_（下画线）或中文字开头，建议使用英文字母；</p>
</li>
<li>
<p>变量名称只能由英文字母、数字、_（下画线）或中文字所组成；</p>
</li>
<li>
<p>英文字母大小写是敏感的，例如，Name与name被视为不同变量名称；</p>
</li>
<li>
<p>Python的系统或函数保留字不能用作变量名称。</p>
</li>
</ol>
<ul>
<li>系统保留字有：and、as、assert、break、class、continue、def、del、elif、else、except、False、finally、for、from、global、if、import、in、is、lambda、none、nonlocal、not、or、pass、raise、return、True、try、while、with、yield。</li>
</ul>
<p>如果变量尚未进行设定值或暂时不想存储任何数据，可将值设为 <code>None</code> ，其类型为 <code>NoneType</code> 。</p>
<p>Python的变量同样具有作用域，即变量的使用范围。作用域一共有四种：</p>
<ul>
<li>
<p>Local：局部作用域</p>
</li>
<li>
<p>Enclosing：闭包函数外的函数中</p>
</li>
</ul>
<p><em>如果在一个函数的内部定义了另一个函数，外部的叫他外函数，内部的叫他内函数。闭包就是在一个外函数中定义了一个内函数，内函数里运用了外函数的临时变量，并且外函数的返回值是内函数的引用。这样就构成了一个闭包。</em></p>
<ul>
<li>
<p>Global：全局作用域</p>
</li>
<li>
<p>Built-in：内建作用域</p>
</li>
</ul>
<p>使用变量时，以 L –&gt; E –&gt; G –&gt;B 的规则查找，即：在局部找不到，便会去局部外的局部找（例如闭包），再找不到就会去全局找，再者去内建中找。看一个例子：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="number">5</span>	<span class="comment"># x 是全局变量</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fun1</span>():</span><br><span class="line">	x = <span class="number">4</span>	<span class="comment"># x 是局部变量</span></span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">fun2</span>():	<span class="comment"># 构成闭包</span></span><br><span class="line">		x = <span class="number">3</span>	<span class="comment"># x 是闭包环境变量</span></span><br><span class="line">	<span class="keyword">return</span> fun2</span><br><span class="line">	</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fun3</span>():</span><br><span class="line">	<span class="keyword">global</span> x	<span class="comment"># 告诉直译器变量x应该从全局中寻找，x 是全局变量</span></span><br><span class="line">	<span class="keyword">return</span> x</span><br></pre></td></tr></table></figure></div>
<p>由此，使用 <code>global</code> 关键字可以在局部内声明并使用一个全局变量</p>
<h2 id="3-2-运算符">3.2 运算符</h2>
<h3 id="3-2-1-算术运算符">3.2.1 算术运算符</h3>
<ol>
<li>
<p>四则运算： <code>+</code> 、 <code>-</code> 、 <code>*</code> 、 <code>/</code> 。</p>
</li>
<li>
<p>取余运算： <code>%</code> ，计算除法运算中的余数。</p>
</li>
<li>
<p>整除运算： <code>//</code> ，计算除法运算中的整数部分。</p>
</li>
<li>
<p>次幂运算： <code>**</code> ，计算次幂。</p>
</li>
</ol>
<h3 id="3-2-2-赋值运算符">3.2.2 赋值运算符</h3>
<ul>
<li>赋值运算： <code>=</code> ，为变量设定值，并由其引申得下表。</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">运算符</th>
<th style="text-align:center">实例</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>+=</code></td>
<td style="text-align:center"><code>a += b</code></td>
<td style="text-align:center"><code>a = a + b</code></td>
</tr>
<tr>
<td style="text-align:center"><code>-=</code></td>
<td style="text-align:center"><code>a -= b</code></td>
<td style="text-align:center"><code>a = a - b</code></td>
</tr>
<tr>
<td style="text-align:center"><code>*=</code></td>
<td style="text-align:center"><code>a *= b</code></td>
<td style="text-align:center"><code>a = a * b</code></td>
</tr>
<tr>
<td style="text-align:center"><code>/=</code></td>
<td style="text-align:center"><code>a /= b</code></td>
<td style="text-align:center"><code>a = a / b</code></td>
</tr>
<tr>
<td style="text-align:center"><code>%=</code></td>
<td style="text-align:center"><code>a %= b</code></td>
<td style="text-align:center"><code>a = a % b</code></td>
</tr>
<tr>
<td style="text-align:center"><code>//=</code></td>
<td style="text-align:center"><code>a //= b</code></td>
<td style="text-align:center"><code>a = a // b</code></td>
</tr>
<tr>
<td style="text-align:center"><code>**=</code></td>
<td style="text-align:center"><code>a **= b</code></td>
<td style="text-align:center"><code>a = a ** b</code></td>
</tr>
</tbody>
</table>
<ul>
<li>等号具有多重使用方式</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">x = y = z = <span class="number">10</span> <span class="comment"># 连等，合法</span></span><br><span class="line">x, y, z = <span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span> <span class="comment"># 多重指定赋值，合法</span></span><br><span class="line">x, y = y, x <span class="comment"># 交换，合法</span></span><br></pre></td></tr></table></figure></div>
<h3 id="3-2-3-比较运算符">3.2.3 比较运算符</h3>
<table>
<thead>
<tr>
<th style="text-align:center">关系运算符</th>
<th style="text-align:center">说明</th>
<th style="text-align:center">实例</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">&gt;</td>
<td style="text-align:center">大于</td>
<td style="text-align:center">a &gt; b</td>
<td style="text-align:center">检查a是否大于b</td>
</tr>
<tr>
<td style="text-align:center">&lt;</td>
<td style="text-align:center">小于</td>
<td style="text-align:center">a &lt; b</td>
<td style="text-align:center">检查a是否小于b</td>
</tr>
<tr>
<td style="text-align:center">&gt;=</td>
<td style="text-align:center">大于等于</td>
<td style="text-align:center">a &gt;= b</td>
<td style="text-align:center">检查a是否大于或等于b</td>
</tr>
<tr>
<td style="text-align:center">&lt;=</td>
<td style="text-align:center">小于等于</td>
<td style="text-align:center">a &lt;= b</td>
<td style="text-align:center">检查a是否小于或等于b</td>
</tr>
<tr>
<td style="text-align:center">==</td>
<td style="text-align:center">等于</td>
<td style="text-align:center">a == b</td>
<td style="text-align:center">检查a是否等于b</td>
</tr>
<tr>
<td style="text-align:center">!=</td>
<td style="text-align:center">不等于</td>
<td style="text-align:center">a != b</td>
<td style="text-align:center">检查a是否不等于b</td>
</tr>
</tbody>
</table>
<h3 id="3-2-4-位运算符">3.2.4 位运算符</h3>
<p>位运算符是对数据转化为二进制，再逐位进行运算。如<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>6</mn><msub><mn>0</mn><mn>10</mn></msub><mo>=</mo><mn>0011110</mn><msub><mn>0</mn><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">60_{10} = 00111100_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">6</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，再对每一位进行逻辑运算。</p>
<table>
<thead>
<tr>
<th style="text-align:center">运算符</th>
<th style="text-align:center">描述</th>
<th style="text-align:center">实例</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>&amp;</code></td>
<td style="text-align:center">按位与运算符，对两个操作数的每一位执行逻辑与操作</td>
<td style="text-align:center"><code>A &amp; B</code></td>
</tr>
<tr>
<td style="text-align:center"><code>\|</code></td>
<td style="text-align:center">按位或运算符，对两个操作数的每一位执行逻辑或操作</td>
<td style="text-align:center"><code>A \| B</code></td>
</tr>
<tr>
<td style="text-align:center"><code>^</code></td>
<td style="text-align:center">按位异或运算符，对两个操作数的每一位执行逻辑异或操作</td>
<td style="text-align:center"><code>A ^ B</code></td>
</tr>
<tr>
<td style="text-align:center"><code>~</code></td>
<td style="text-align:center">按位取反运算符，对两个操作数的每一位执行逻辑取反操作</td>
<td style="text-align:center"><code>~A</code></td>
</tr>
<tr>
<td style="text-align:center"><code>&lt;&lt;</code></td>
<td style="text-align:center">将操作数的所有位向左移动指定的位数。左移n位相当于乘以2的n次方</td>
<td style="text-align:center"><code>A &lt;&lt; n</code></td>
</tr>
<tr>
<td style="text-align:center"><code>&gt;&gt;</code></td>
<td style="text-align:center">将操作数的所有位向右移动指定的位数。右移n位相当于除以2的n次方</td>
<td style="text-align:center"><code>A &gt;&gt; n</code></td>
</tr>
</tbody>
</table>
<h3 id="3-2-5-逻辑运算符">3.2.5 逻辑运算符</h3>
<table>
<thead>
<tr>
<th style="text-align:center">运算符</th>
<th style="text-align:center">描述</th>
<th style="text-align:center">实例</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">and</td>
<td style="text-align:center">逻辑与运算符，如果两个操作数都非零，则条件为真。</td>
<td style="text-align:center">A and B</td>
</tr>
<tr>
<td style="text-align:center">or</td>
<td style="text-align:center">逻辑或运算符，如果两个操作数中有任意一个非零，则条件为真</td>
<td style="text-align:center">A or B</td>
</tr>
<tr>
<td style="text-align:center">not</td>
<td style="text-align:center">逻辑非运算符，用来逆转操作数的逻辑状态。如果条件为真则逻辑非运算符将使其为假。</td>
<td style="text-align:center">not A</td>
</tr>
</tbody>
</table>
<h3 id="3-2-6-成员运算符">3.2.6 成员运算符</h3>
<table>
<thead>
<tr>
<th style="text-align:center">运算符</th>
<th style="text-align:center">描述</th>
<th style="text-align:center">实例</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">in</td>
<td style="text-align:center">如果在指定的序列中找到值返回 True，否则返回 False。</td>
<td style="text-align:center">x 在 y 序列中 , 如果 x 在 y 序列中返回 True。</td>
</tr>
<tr>
<td style="text-align:center">not in</td>
<td style="text-align:center">如果在指定的序列中没有找到值返回 True，否则返回 False。</td>
<td style="text-align:center">x 不在 y 序列中 , 如果 x 不在 y 序列中返回 True。</td>
</tr>
</tbody>
</table>
<h3 id="3-2-7-身份运算符">3.2.7 身份运算符</h3>
<table>
<thead>
<tr>
<th style="text-align:center">运算符</th>
<th style="text-align:center">描述</th>
<th style="text-align:center">实例</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">in</td>
<td style="text-align:center">如果在指定的序列中找到值返回 True，否则返回 False。</td>
<td style="text-align:center">x 在 y 序列中 , 如果 x 在 y 序列中返回 True。</td>
</tr>
<tr>
<td style="text-align:center">not in</td>
<td style="text-align:center">如果在指定的序列中没有找到值返回 True，否则返回 False。</td>
<td style="text-align:center">x 不在 y 序列中 , 如果 x 不在 y 序列中返回 True。</td>
</tr>
</tbody>
</table>
<h3 id="3-2-8-删除变量">3.2.8 删除变量</h3>
<ul>
<li>使用 <code>del</code> 删除变量，回收所占的内存空间。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="number">10</span></span><br><span class="line"><span class="keyword">del</span> x</span><br><span class="line"><span class="comment"># 后面不能再使用x</span></span><br></pre></td></tr></table></figure></div>
<h2 id="3-3-python的断行">3.3 Python的断行</h2>
<ul>
<li>
<p>Python的语句可以不使用 <code>;</code> ，但也可以 <code>;</code> 进行语句分割。总体上不推荐使用。</p>
</li>
<li>
<p>Python中若语句过长，可以使用 <code>\</code> 或 <code>#</code> 进行分行。</p>
</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">z = (a +\</span><br><span class="line">	 b +\</span><br><span class="line">	 c)</span><br><span class="line"></span><br><span class="line">y = (d + <span class="comment"># 可做注释</span></span><br><span class="line">	 e + <span class="comment"># 可做注释</span></span><br><span class="line">	 f )</span><br></pre></td></tr></table></figure></div>
<p><br><br><br></p>
<h1>四. Python的基本数据类型</h1>
<h2 id="4-1-type-函数">4.1 type()函数</h2>
<ul>
<li><code>type()</code> 可以返回变量的数据类型。如</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="number">10</span></span><br><span class="line"><span class="built_in">type</span>(x) <span class="comment"># &lt;class &#x27;int&#x27;&gt;</span></span><br></pre></td></tr></table></figure></div>
<h2 id="4-2-数值数据类型">4.2 数值数据类型</h2>
<h3 id="4-2-1-什么是数值数据类型">4.2.1 什么是数值数据类型</h3>
<p>数值数据类型用于存储数值。数据类型是不允许改变的,这就意味着如果改变数字数据类型的值，将重新分配内存空间。</p>
<p>Python 支持三种不同的数值类型：</p>
<ul>
<li>
<p>整型(int)：通常被称为是整型或整数，是正或负整数，不带小数点。Python3 整型是没有限制大小的，可以当作 Long 类型使用，所以 Python3 没有 Python2 的 Long 类型。布尔(bool)是整型的子类型。</p>
</li>
<li>
<p>浮点型(float)：浮点型由整数部分与小数部分组成，浮点型也可以使用科学计数法表示（2.5e2 = 2.5 x 102 = 250）</p>
</li>
<li>
<p>复数(comple)：复数由实数部分和虚数部分构成，可以用a + bj,或者complex(a,b)表示， 复数的实部a和虚部b都是浮点型</p>
</li>
</ul>
<h3 id="4-2-2-数值类型的运算">4.2.2 数值类型的运算</h3>
<p>普通的算术运算可以运行在数值数据类型中：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line">b = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">a + b</span><br><span class="line">a - b</span><br><span class="line">a * b</span><br><span class="line">a / b</span><br><span class="line">a // b</span><br><span class="line">a ** b</span><br><span class="line">a % b</span><br></pre></td></tr></table></figure></div>
<p>当浮点数与整数运算时，同样会进行隐式类型转换为更高级的浮点数。</p>
<p>同样也可以使用强制类型转换： <code>int()</code> 、 <code>float()</code> 。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="number">10</span></span><br><span class="line"><span class="built_in">float</span>(a)</span><br><span class="line">b = <span class="number">5.5</span></span><br><span class="line"><span class="built_in">int</span>(b)</span><br></pre></td></tr></table></figure></div>
<h3 id="4-2-3-数值类型的方法">4.2.3 数值类型的方法</h3>
<p>进制转换类型方法：</p>
<ol>
<li>
<p>转二进制： <code>bin()</code></p>
</li>
<li>
<p>转八进制： <code>oct()</code></p>
</li>
<li>
<p>转十六进制： <code>hex()</code></p>
</li>
</ol>
<p>数学方法：</p>
<ol>
<li>
<p><code>abs(x)</code>	：返回数字的绝对值，如 <code>abs(-10)</code> 返回 10</p>
</li>
<li>
<p><code>ceil(x)</code> ：返回数字的上入整数，如 <code>math.ceil(4.1)</code> 返回 5</p>
</li>
<li>
<p><code>exp(x)</code>	：返回e的x次幂(ex),如 <code>math.exp(1)</code> 返回2.718281828459045</p>
</li>
<li>
<p><code>fabs(x)</code> ：以浮点数形式返回数字的绝对值，如 <code>math.fabs(-10)</code> 返回10.0</p>
</li>
<li>
<p><code>floor(x)</code> ：返回数字的下舍整数，如 <code>math.floor(4.9)</code> 返回 4</p>
</li>
<li>
<p><code>log(x)</code>	：如 <code>math.log(math.e)</code> 返回1.0， <code>math.log(100,10)</code> 返回2.0</p>
</li>
<li>
<p><code>log10(x)</code> ：返回以10为基数的x的对数，如 <code>math.log10(100)</code> 返回 2.0</p>
</li>
<li>
<p><code>max(x1, x2,...)</code> ：返回给定参数的最大值，参数可以为序列。</p>
</li>
<li>
<p><code>min(x1, x2,...)</code> ：返回给定参数的最小值，参数可以为序列。</p>
</li>
<li>
<p><code>modf(x)</code> ：返回x的整数部分与小数部分，两部分的数值符号与x相同，整数部分以浮点型表示。</p>
</li>
<li>
<p><code>pow(x, y)</code> ：相当于 <code>x**y</code> 运算后的值。</p>
</li>
<li>
<p><code>round(x [,n])</code>	：返回浮点数 x 的四舍五入值，如给出 n 值，则代表舍入到小数点后的位数。其实准确的说是保留值将保留到离上一位更近的一端。</p>
</li>
<li>
<p><code>sqrt(x)</code> ：返回数字x的平方根。</p>
</li>
</ol>
<p>除此之外还有三角函数、随机数函数等……</p>
<h2 id="4-3-布尔值数据类型">4.3 布尔值数据类型</h2>
<ul>
<li>Python的布尔值（Boolean）数据类型具有两种值：True（真）或False（假）。数据类型代号是bool。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="literal">True</span></span><br><span class="line"><span class="built_in">type</span>(x) <span class="comment"># &lt;class &#x27;bool&#x27;&gt;</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>如果使用类型转换，True对应1，False对应0。</li>
</ul>
<h2 id="4-4-字符串数据类型">4.4 字符串数据类型</h2>
<h3 id="4-4-1-什么是字符串数据类型">4.4.1 什么是字符串数据类型</h3>
<ul>
<li>Python的字符串没有严格规定是单引号还是双引号，只要匹配即可。其数据类型代号是str。如果字符串中有单引号，为了避免出错，使用双引号。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="string">&#x27;python&#x27;</span></span><br><span class="line">y = <span class="string">&quot;Tom&#x27;s house&quot;</span></span><br><span class="line"><span class="built_in">type</span>(x) <span class="comment"># &lt;class &#x27;str&#x27;&gt;</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>如果字符串长度大于一行，可以使用三个单引号或三个双引号包夹。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="string">&#x27;&#x27;&#x27;xxxxxxxxxxxxxxxxx</span></span><br><span class="line"><span class="string">	xxxxxxxxxxxxxxxx&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>Python 不支持单字符类型，单字符在Python中也是作为一个字符串使用。</li>
</ul>
<h3 id="4-4-1-字符串的运算">4.4.1 字符串的运算</h3>
<ul>
<li>字符串的连接可以直接使用 <code>+</code> 运算。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="string">&#x27;1&#x27;</span></span><br><span class="line">y = <span class="string">&#x27;2&#x27;</span></span><br><span class="line">z = x + y <span class="comment"># z为12</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>字符串可以直接使用 <code>*</code> 运算，表示复制该字符串多少次</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="string">&#x27;1&#x27;</span></span><br><span class="line">z = x * <span class="number">5</span> <span class="comment"># z为11111，是字符串</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>字符串可以使用 <code>[]</code> 索引获取字符串中的字符，从0数起，-1 为从末尾的开始位置。</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">0</th>
<th style="text-align:center">1</th>
<th style="text-align:center">2</th>
<th style="text-align:center">3</th>
<th style="text-align:center">4</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">h</td>
<td style="text-align:center">e</td>
<td style="text-align:center">l</td>
<td style="text-align:center">l</td>
<td style="text-align:center">o</td>
</tr>
<tr>
<td style="text-align:center">-5</td>
<td style="text-align:center">-4</td>
<td style="text-align:center">-3</td>
<td style="text-align:center">-2</td>
<td style="text-align:center">-1</td>
</tr>
</tbody>
</table>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">str</span> = <span class="string">&quot;hello&quot;</span></span><br><span class="line"><span class="built_in">str</span>[<span class="number">2</span>] <span class="comment"># l</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>字符串可以使用 <code>[:]</code> 截取字符串的一部分，遵循左闭右开，-1 为从末尾的开始位置。。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">str</span> = <span class="string">&quot;hello&quot;</span></span><br><span class="line"><span class="built_in">str</span>[<span class="number">2</span>:<span class="number">4</span>] <span class="comment"># ll</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>可以使用 <code>in</code> 或 <code>not in</code> 判断某字符是否在字符串中。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">str</span> = <span class="string">&quot;hello&quot;</span></span><br><span class="line"><span class="string">&#x27;h&#x27;</span> <span class="keyword">in</span> <span class="built_in">str</span>		<span class="comment"># 为真</span></span><br><span class="line"><span class="string">&#x27;h&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> <span class="built_in">str</span>	<span class="comment"># 为假</span></span><br></pre></td></tr></table></figure></div>
<h3 id="4-4-2-字符串的类型转换">4.4.2 字符串的类型转换</h3>
<ul>
<li>强制转换为字符串： <code>str()</code> 函数。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="number">111</span>	<span class="comment"># x为111，是整型</span></span><br><span class="line">y = <span class="number">222</span>	<span class="comment"># y为222，是整型</span></span><br><span class="line">z = <span class="built_in">str</span>(<span class="number">111</span>) + <span class="built_in">str</span>(<span class="number">222</span>) <span class="comment"># z为111222，是字符串</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>字符串强制转换为整数： <code>int()</code> 函数。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="string">&#x27;111&#x27;</span>	<span class="comment"># x为111，是字符串</span></span><br><span class="line">y = <span class="string">&#x27;222&#x27;</span>	<span class="comment"># y为222，是字符串</span></span><br><span class="line">z = <span class="built_in">int</span>(<span class="number">111</span>) + <span class="built_in">int</span>(<span class="number">222</span>) <span class="comment"># z为333，是整型</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>字符串转换为码值： <code>chr(x)</code> 函数返回x的ASCII码值， <code>ord(x)</code> 函数返回x的Unicode码值。</li>
</ul>
<h3 id="4-4-3-转义字符">4.4.3 转义字符</h3>
<ul>
<li>转义字符</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">转义字符</th>
<th style="text-align:center">十六进制值</th>
<th style="text-align:center">意义</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>\'</code></td>
<td style="text-align:center">27</td>
<td style="text-align:center">单引号</td>
</tr>
<tr>
<td style="text-align:center"><code>\&quot;</code></td>
<td style="text-align:center">22</td>
<td style="text-align:center">双引号</td>
</tr>
<tr>
<td style="text-align:center"><code>\\</code></td>
<td style="text-align:center">5C</td>
<td style="text-align:center">反斜杠</td>
</tr>
<tr>
<td style="text-align:center"><code>\a</code></td>
<td style="text-align:center">07</td>
<td style="text-align:center">响铃</td>
</tr>
<tr>
<td style="text-align:center"><code>\b</code></td>
<td style="text-align:center">08</td>
<td style="text-align:center">BackSpace键</td>
</tr>
<tr>
<td style="text-align:center"><code>\f</code></td>
<td style="text-align:center">0C</td>
<td style="text-align:center">换页</td>
</tr>
<tr>
<td style="text-align:center"><code>\n</code></td>
<td style="text-align:center">0A</td>
<td style="text-align:center">换行</td>
</tr>
<tr>
<td style="text-align:center"><code>\o</code></td>
<td style="text-align:center"></td>
<td style="text-align:center">八进制表示</td>
</tr>
<tr>
<td style="text-align:center"><code>\x</code></td>
<td style="text-align:center"></td>
<td style="text-align:center">十六进制表示</td>
</tr>
<tr>
<td style="text-align:center"><code>\r</code></td>
<td style="text-align:center">0D</td>
<td style="text-align:center">光标移到最左</td>
</tr>
<tr>
<td style="text-align:center"><code>\t</code></td>
<td style="text-align:center">09</td>
<td style="text-align:center">Tab键</td>
</tr>
<tr>
<td style="text-align:center"><code>\v</code></td>
<td style="text-align:center">0B</td>
<td style="text-align:center">垂直定位</td>
</tr>
</tbody>
</table>
<ul>
<li>在字符串前加 <code>r</code> ，可以让转义字符不被转义。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">str1 = <span class="string">&quot;Hello\nWorld&quot;</span>	<span class="comment"># 换行符生效</span></span><br><span class="line">str2 = <span class="string">r&quot;Hello\nWorld&quot;</span>	<span class="comment"># 换行符不生效，原样输出</span></span><br></pre></td></tr></table></figure></div>
<h3 id="4-4-4-字符串的函数方法">4.4.4 字符串的函数方法</h3>
<p>字符串的函数方法有许多，此处列出常用的几个。</p>
<ol>
<li>
<p><code>count(str, beg=0,end=len(string))</code>，返回 str 在 string 里面出现的次数，如果 beg 或者 end 指定则返回指定范围内 str 出现的次数。</p>
</li>
<li>
<p><code>endswith(suffix, beg=0, end=len(string))</code>，检查字符串是否以 suffix 结束，如果 beg 或者 end 指定则检查指定的范围内是否以 suffix 结束，如果是，返回 True,否则返回 False。</p>
</li>
<li>
<p><code>expandtabs(tabsize=8)</code>，把字符串 string 中的 tab 符号转为空格，tab 符号默认的空格数是 8 。</p>
</li>
<li>
<p><code>find(str, beg=0, end=len(string))</code>，检测 str 是否包含在字符串中，如果指定范围 beg 和 end ，则检查是否包含在指定范围内，如果包含返回开始的索引值，否则返回-1。</p>
</li>
<li>
<p><code>index(str, beg=0, end=len(string))</code>，跟find()方法一样，只不过如果str不在字符串中会报一个异常。</p>
</li>
<li>
<p><code>isalnum()</code>，如果字符串至少有一个字符并且所有字符都是字母或数字则返 回 True，否则返回 False。</p>
</li>
<li>
<p><code>isalpha()</code>，如果字符串至少有一个字符并且所有字符都是字母或中文字则返回 True, 否则返回 False。</p>
</li>
<li>
<p><code>isdigit()</code>，如果字符串只包含数字则返回 True 否则返回 False。</p>
</li>
<li>
<p><code>isnumeric()</code>，如果字符串中只包含数字字符，则返回 True，否则返回 False。</p>
</li>
<li>
<p><code>isspace()</code>，如果字符串中只包含空白，则返回 True，否则返回 False。</p>
</li>
<li>
<p><code>join(seq)</code>，以指定字符串作为分隔符，将 seq 中所有的元素(的字符串表示)合并为一个新的字符串。</p>
</li>
<li>
<p><code>len(string)</code>，返回字符串长度。</p>
</li>
<li>
<p><code>ljust(width[, fillchar])</code>，返回一个原字符串左对齐,并使用 fillchar 填充至长度 width 的新字符串，fillchar 默认为空格。</p>
</li>
<li>
<p><code>lower()</code>，转换字符串中所有大写字符为小写。</p>
</li>
<li>
<p><code>max(str)</code>，返回字符串 str 中最大的字母。</p>
</li>
<li>
<p><code>min(str)</code>，返回字符串 str 中最小的字母。</p>
</li>
<li>
<p><code>replace(old, new [, max])</code>，把 将字符串中的 old 替换成 new,如果 max 指定，则替换不超过 max 次。</p>
</li>
<li>
<p><code>rfind(str, beg=0,end=len(string))</code>，类似于 find()函数，不过是从右边开始查找。</p>
</li>
<li>
<p><code>rindex( str, beg=0, end=len(string))</code>，类似于 index()，不过是从右边开始。</p>
</li>
<li>
<p><code>rjust(width,[, fillchar])</code>，返回一个原字符串右对齐,并使用fillchar(默认空格）填充至长度 width 的新字符串。</p>
</li>
<li>
<p><code>rstrip()</code>，删除字符串末尾的空格或指定字符。</p>
</li>
<li>
<p><code>split(str=&quot;&quot;, num=string.count(str))</code>，以 str 为分隔符截取字符串，如果 num 有指定值，则仅截取 num+1 个子字符串。</p>
</li>
<li>
<p><code>startswith(substr, beg=0,end=len(string))</code>，检查字符串是否是以指定子字符串 substr 开头，是则返回 True，否则返回 False。如果beg 和 end 指定值，则在指定范围内检查。</p>
</li>
<li>
<p><code>upper()</code>，转换字符串中的小写字母为大写</p>
</li>
</ol>
<p>具体的函数解释用法可以边用边搜索。</p>
<p><br><br><br></p>
<h1>五. Python的输入和输出</h1>
<h2 id="5-1-辅助帮助说明输出">5.1 辅助帮助说明输出</h2>
<ul>
<li>使用 <code>help()</code> 函数可以列出Python指令或函数的使用说明。</li>
</ul>
<h2 id="5-2-输出">5.2 输出</h2>
<h3 id="5-2-1-通过print-函数输出">5.2.1 通过print()函数输出</h3>
<p>该函数的语法格式为： <code>print(*args, sep=' ', end='\n', file=None, flush=False)</code></p>
<ul>
<li>
<p><code>*args</code> ：输出的数据，可以输出多个，使用逗号隔开。</p>
</li>
<li>
<p><code>sep</code> ：表示输出多个数据时的分隔字符，默认是空格。</p>
</li>
<li>
<p><code>end</code> ：当数据输出结束时插入的字符，默认是插入换行。</p>
</li>
<li>
<p><code>file</code> ：数据输出位置，默认是sys.stdout，也就是屏幕。</p>
</li>
<li>
<p><code>flush</code> ：是否清除数据流的缓冲区，默认是不清除。</p>
</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="number">10</span></span><br><span class="line">y = <span class="number">1.5</span></span><br><span class="line"><span class="built_in">print</span>(x * y, end=<span class="string">&#x27;\t&#x27;</span>)	<span class="comment"># 输出x乘y，以Tab作为结束</span></span><br><span class="line"><span class="built_in">print</span>(x, y, sep=<span class="string">&#x27;,&#x27;</span>)	<span class="comment"># 输出x和y，以“,”为分隔符</span></span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">输出结果：15.0    10,1.5</span><br></pre></td></tr></table></figure></div>
<h3 id="5-2-2-格式化print-的输出">5.2.2 格式化print()的输出</h3>
<p>可以使用这样的格式输出： <code>print(&quot;输出格式字符串&quot; % (变量))</code> ，输出格式字符串中，与C语言类似。</p>
<ul>
<li>
<p><code>%d</code> 表示格式化整数输出。</p>
</li>
<li>
<p><code>%f</code> 表示格式化浮点数输出。</p>
</li>
<li>
<p><code>%x</code> 表示格式化16进制数输出。</p>
</li>
<li>
<p><code>%o</code> 表示格式化8进制数输出。</p>
</li>
<li>
<p><code>%s</code> 表示格式化字符串输出。</p>
</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="number">10</span></span><br><span class="line">y = <span class="number">9.9</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;%d\t%f\t%s&quot;</span> % (x, x, x))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;%d\t%f\t%s&quot;</span> % (y, y, y))</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">输出结果：</span><br><span class="line">10      10.000000       10</span><br><span class="line">9       9.900000        9.9</span><br></pre></td></tr></table></figure></div>
<p>与C语言类似，在控制浮点数的输出时，有如下语法：</p>
<ul>
<li><code>%nd</code> ：格式化整数输出。若n不带符号表明保留n格空间，保留空间不足将完整输出数据。若n带正号表明输出在左边加上符号，若n带负号表示数据靠左输出。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="number">11111</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;|%2d| |%+2d| |%-2d| |%6d| |%+6d| |%-6d| &quot;</span> % (x, x, x, x, x, x))</span><br><span class="line"><span class="comment"># 输出结果：|11111| |+11111| |11111| | 11111| |+11111| |11111 |</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li>
<p><code>%no</code> ：格式化八进制输出。若n不带符号表明保留n格空间，保留空间不足将完整输出数据。若n带正号表明输出在左边加上符号，若n带负号表示数据靠左输出。</p>
</li>
<li>
<p><code>%nx</code> ：格式化十六进制输出。若n不带符号表明保留n格空间，保留空间不足将完整输出数据。若n带正号表明输出在左边加上符号，若n带负号表示数据靠左输出。</p>
</li>
<li>
<p><code>%ns</code> ：格式化八进制输出。若n不带符号表明保留n格空间，保留空间不足将完整输出数据。若n带负号表示数据靠左输出。</p>
</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="string">&quot;Hello&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;|%2s| |%-2s| |%6s| |%-6s|&quot;</span> % (x, x, x, x))</span><br><span class="line"><span class="comment"># 输出结果：|Hello| |Hello| | Hello| |Hello |</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li><code>%m.nf</code> ：格式化浮点数输出。m表示保留多少格数输出（包括小数点），n表示小数部分保留位数。若带上正号表明输出在左边加上符号，若带上符号表明数据靠左输出。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="number">3.14159</span></span><br><span class="line">x = <span class="number">3.14159</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;|%5f| |%10f| |%5.2f| |%+5.2f| |%-5.2f|&quot;</span> % (x, x, x, x, x))</span><br><span class="line"><span class="comment"># 输出结果：|3.141590| |  3.141590| | 3.14| |+3.14| |3.14 |</span></span><br></pre></td></tr></table></figure></div>
<h3 id="5-2-3-format-函数">5.2.3 format()函数</h3>
<p>使用 <code>format()</code> 函数的输出格式为： <code>print(&quot;输出格式字符串&quot; .format(变量, ...))</code></p>
<ul>
<li>
<p>输出格式字符串中输出变量的位置使用 <code>&#123;&#125;</code> 表示。</p>
</li>
<li>
<p><code>&#123;&#125;</code> 中填入 <code>!a</code> (使用 ascii()), <code>!s</code> (使用 str()) 和 <code>!r</code> (使用 repr()) 可以用于在格式化某个值之前对其进行转化。</p>
</li>
<li>
<p>格式内容如下</p>
</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">数字</th>
<th style="text-align:center">格式</th>
<th style="text-align:center">输出</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">3.1415926</td>
<td style="text-align:center"><code>&#123;:.2f&#125;</code></td>
<td style="text-align:center">3.14</td>
<td style="text-align:center">保留小数点后两位</td>
</tr>
<tr>
<td style="text-align:center">3.1415926</td>
<td style="text-align:center"><code>&#123;:+.2f&#125;</code></td>
<td style="text-align:center">+3.14</td>
<td style="text-align:center">带符号保留小数点后两位</td>
</tr>
<tr>
<td style="text-align:center">-1</td>
<td style="text-align:center"><code>&#123;:+.2f&#125;</code></td>
<td style="text-align:center">-1.00</td>
<td style="text-align:center">带符号保留小数点后两位</td>
</tr>
<tr>
<td style="text-align:center">2.71828</td>
<td style="text-align:center"><code>&#123;:.0f&#125;</code></td>
<td style="text-align:center">3</td>
<td style="text-align:center">不带小数</td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td style="text-align:center"><code>&#123;:0&gt;2d&#125;</code></td>
<td style="text-align:center">05</td>
<td style="text-align:center">数字补零（填充左边，宽度为2）</td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td style="text-align:center"><code>&#123;:x&lt;4d&#125;</code></td>
<td style="text-align:center">5xxx</td>
<td style="text-align:center">数字补x（填充右边，宽度为4）</td>
</tr>
<tr>
<td style="text-align:center">10</td>
<td style="text-align:center"><code>&#123;:x&lt;4d&#125;</code></td>
<td style="text-align:center">10xx</td>
<td style="text-align:center">数字补x（填充右边，宽度为4）</td>
</tr>
<tr>
<td style="text-align:center">1000000</td>
<td style="text-align:center"><code>&#123;:,&#125;</code></td>
<td style="text-align:center">1,000,000</td>
<td style="text-align:center">以逗号分隔的数字格式</td>
</tr>
<tr>
<td style="text-align:center">0.25</td>
<td style="text-align:center"><code>&#123;:.2%&#125;</code></td>
<td style="text-align:center">25.00%</td>
<td style="text-align:center">百分比格式</td>
</tr>
<tr>
<td style="text-align:center">1000000000</td>
<td style="text-align:center"><code>&#123;:.2e&#125;</code></td>
<td style="text-align:center">1.00e+09</td>
<td style="text-align:center">指数记法</td>
</tr>
<tr>
<td style="text-align:center">13</td>
<td style="text-align:center"><code>&#123;:10d&#125;</code></td>
<td style="text-align:center">13</td>
<td style="text-align:center">右对齐，宽度为10</td>
</tr>
<tr>
<td style="text-align:center">13</td>
<td style="text-align:center"><code>&#123;:&lt;10d&#125;</code></td>
<td style="text-align:center">13</td>
<td style="text-align:center">左对齐，宽度为10</td>
</tr>
<tr>
<td style="text-align:center">13</td>
<td style="text-align:center"><code>&#123;:^10d&#125;</code></td>
<td style="text-align:center">13</td>
<td style="text-align:center">中间对齐，宽度为10</td>
</tr>
<tr>
<td style="text-align:center">11</td>
<td style="text-align:center"><code>&#123;:b&#125;</code></td>
<td style="text-align:center">1011</td>
<td style="text-align:center">二进制表示</td>
</tr>
<tr>
<td style="text-align:center">11</td>
<td style="text-align:center"><code>&#123;:d&#125;</code></td>
<td style="text-align:center">11</td>
<td style="text-align:center">十进制表示</td>
</tr>
<tr>
<td style="text-align:center">11</td>
<td style="text-align:center"><code>&#123;:o&#125;</code></td>
<td style="text-align:center">13</td>
<td style="text-align:center">八进制表示</td>
</tr>
<tr>
<td style="text-align:center">11</td>
<td style="text-align:center"><code>&#123;:x&#125;</code></td>
<td style="text-align:center">b</td>
<td style="text-align:center">十六进制表示</td>
</tr>
<tr>
<td style="text-align:center">11</td>
<td style="text-align:center"><code>&#123;:#x&#125;</code></td>
<td style="text-align:center">0xb</td>
<td style="text-align:center">十六进制表示</td>
</tr>
<tr>
<td style="text-align:center">11</td>
<td style="text-align:center"><code>&#123;:#X&#125;</code></td>
<td style="text-align:center">0xB</td>
<td style="text-align:center">十六进制表示</td>
</tr>
</tbody>
</table>
<h3 id="5-2-4-dir-函数">5.2.4 dir()函数</h3>
<p>通过 <code>dir()</code> 函数可以列出Python的函数。</p>
<p>其格式为： <code>dir(__builtins__)</code> 。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="number">10</span></span><br><span class="line"><span class="built_in">print</span>(dit(a)) <span class="comment"># 列出int的所有函数</span></span><br></pre></td></tr></table></figure></div>
<p>再结合 <code>help()</code> 函数即可了解每个函数的意义。</p>
<h2 id="5-3-输入">5.3 输入</h2>
<p>通过 <code>input()</code> 函数输入一行文本。</p>
<p>该函数的格式为： <code>value = input(&quot;promt:&quot;)</code></p>
<ul>
<li>
<p>value：输入数据存入到该变量中，不论输入什么，value都是字符串数据类型，需要进行处理。</p>
</li>
<li>
<p>promt：输入提示词。</p>
</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="built_in">input</span>(<span class="string">&quot;请输入一个数字：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;输入的数字是&#123;&#125;，其类型是&#123;&#125;&quot;</span>.<span class="built_in">format</span>(a, <span class="built_in">type</span>(a)))</span><br><span class="line"></span><br><span class="line">b = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入一个数字：&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;输入的数字是&#123;&#125;，其类型是&#123;&#125;&quot;</span>.<span class="built_in">format</span>(b, <span class="built_in">type</span>(b)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行窗口：</span></span><br><span class="line"><span class="comment"># 请输入一个数字：6</span></span><br><span class="line"><span class="comment"># 输入的数字是6，其类型是&lt;class &#x27;str&#x27;&gt;</span></span><br><span class="line"><span class="comment"># 请输入一个数字：6</span></span><br><span class="line"><span class="comment"># 输入的数字是6，其类型是&lt;class &#x27;int&#x27;&gt;</span></span><br></pre></td></tr></table></figure></div>
<p><br><br><br></p>
<h1>六. Python的条件结构</h1>
<h2 id="6-1-if语句">6.1 if语句</h2>
<p>if语句的基本语法如下：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (条件判断):</span><br><span class="line">	程序代码块</span><br></pre></td></tr></table></figure></div>
<p>如果条件判断是True，则执行程序代码区块，如果条件判断是False,则不执行程序代码区块。如果程序代码区块只有一道指令，可将上述语法写成： <code>if(条件判断): 程序代码</code></p>
<p>实际上，Python的条件结构可以不带 <code>()</code> ，但此教程带上了 <code>()</code> ，为了看起来更清晰。</p>
<p>在Python内是使用缩进方式区隔if语句的程序代码区块，编辑程序时可以用Tab键内缩或是直接内缩4个字符空间，表示这是if语句的程序代码区块。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">age = <span class="number">18</span></span><br><span class="line"><span class="keyword">if</span> (age &gt;= <span class="number">18</span>):</span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;你成年了&quot;</span>)</span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;你的年龄是&#123;&#125;&quot;</span>.<span class="built_in">format</span>(age))</span><br></pre></td></tr></table></figure></div>
<p>实际上不一定非得缩进4格字符空间，任意相同缩进的连续语句都可看作是同一代码块。</p>
<h2 id="6-2-if-else语句">6.2 if-else语句</h2>
<p>程序设计时更常用的功能是条件判断为True时执行某一个程序代码区块，当条件判断为False时执行另一段程序代码区块，此时可以使用if…else语句，它的语法格式如下：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (条件判断):</span><br><span class="line">	程序代码块一</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">	程序代码块二</span><br></pre></td></tr></table></figure></div>
<p>如果条件判断是True,则执行程序代码区块一，如果条件判断是False,则执行程序代码区块二。</p>
<h2 id="6-3-if-elif-else语句">6.3 if-elif-else语句</h2>
<p>当程序进行多重判断时，可以使用if-elif-else语句，它的语法格式如下：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (条件判断一):</span><br><span class="line">	程序代码块一</span><br><span class="line"><span class="keyword">elif</span> (条件判断二):</span><br><span class="line">	程序代码块二</span><br><span class="line">……</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">	程序代码块n</span><br></pre></td></tr></table></figure></div>
<p>如果条件判断一是True则执行程序代码区块一，然后离开条件判断。否则检查条件判断二，如果是True则执行程序代码区块二，然后离开条件判断。如果条件判断是False则持续进行检查，上述elif的条件判断可以不断扩充，如果所有条件判断是False则执行程序代码区块。</p>
<p>举个例子，分数采取A、B、C、D、F，通常90-100分是A，80-89分是B，70-79分是C，60-69分是D，低于60分是F。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">score = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入你的分数：&quot;</span>))</span><br><span class="line"><span class="keyword">if</span> (score &gt;= <span class="number">90</span> <span class="keyword">and</span> score &lt;= <span class="number">100</span>):</span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;你的成绩是A&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> (score &gt;= <span class="number">80</span> <span class="keyword">and</span> score &lt;= <span class="number">89</span>):</span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;你的成绩是B&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> (score &gt;= <span class="number">70</span> <span class="keyword">and</span> score &lt;= <span class="number">79</span>):</span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;你的成绩是C&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> (score &gt;= <span class="number">60</span> <span class="keyword">and</span> score &lt;= <span class="number">69</span>):</span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;你的成绩是D&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;你的成绩是F&quot;</span>)</span><br></pre></td></tr></table></figure></div>
<h2 id="6-4-嵌套的if语句">6.4 嵌套的if语句</h2>
<p>if语句中有其他的if语句，称作if的嵌套。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (条件判断一):</span><br><span class="line">	<span class="keyword">if</span> (条件判断A):</span><br><span class="line">		程序代码块A</span><br><span class="line">	<span class="keyword">else</span>:</span><br><span class="line">		程序代码块B</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">	程序代码块二</span><br></pre></td></tr></table></figure></div>
<p><br><br><br></p>
<h1>七. Python的循环结构</h1>
<h2 id="7-1-for循环">7.1 for循环</h2>
<p>for循环的一般格式如下：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> variable <span class="keyword">in</span> sequence:</span><br><span class="line">    <span class="comment"># statements</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># statements</span></span><br></pre></td></tr></table></figure></div>
<p>for循环可以遍历任何可迭代对象，如一个列表、元组或者一个字符串。</p>
<p>这个“sequence”可以配合 <code>range()</code> 函数使用，完成一个计数作用：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> number <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">6</span>):</span><br><span class="line">	<span class="built_in">print</span>(number)</span><br><span class="line"><span class="comment"># 输出：</span></span><br><span class="line"><span class="comment"># 1</span></span><br><span class="line"><span class="comment"># 2</span></span><br><span class="line"><span class="comment"># 3</span></span><br><span class="line"><span class="comment"># 4</span></span><br><span class="line"><span class="comment"># 5</span></span><br></pre></td></tr></table></figure></div>
<p>注意， <code>range()</code> 函数区间左闭右开，其作用是生成一个数列，它有以下形式：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">range</span>(<span class="number">6</span>)	<span class="comment"># 生成0到5，步长为1的数列</span></span><br><span class="line"><span class="built_in">range</span>(<span class="number">1</span>, <span class="number">5</span>)	<span class="comment"># 生成1到4，步长为1的数列</span></span><br><span class="line"><span class="built_in">range</span>(<span class="number">0</span>, <span class="number">10</span>, <span class="number">3</span>)	<span class="comment"># 生成0到9，步长为3的数列</span></span><br></pre></td></tr></table></figure></div>
<p>同时，for循环可以使用else语句：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> iterable:</span><br><span class="line">    <span class="comment"># 循环主体</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># 循环结束后执行的代码</span></span><br></pre></td></tr></table></figure></div>
<p>当循环执行完毕（即遍历完 iterable 中的所有元素）后，会执行 <code>else</code> 子句中的代码，如果在循环过程中遇到了 <code>break</code> 语句，则会中断循环，此时不会执行 <code>else</code> 子句。可以查看下面这两个例子：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):</span><br><span class="line">  <span class="comment"># do Nothing</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;Finally finished!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):</span><br><span class="line">  <span class="keyword">if</span> x == <span class="number">6</span>: <span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;Finally finished!&quot;</span>)</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">输出结果：</span><br><span class="line">0</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">Finally finished!</span><br><span class="line">0</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td></tr></table></figure></div>
<h2 id="7-2-while循环">7.2 while循环</h2>
<p><code>while</code> 语句的一般形式如下：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>( condition <span class="keyword">is</span> true ):</span><br><span class="line">	sentences;</span><br></pre></td></tr></table></figure></div>
<p>此处 <code>condition</code> 为表达式，只有当循环条件为真，即表达式为真，就执行循环体语句。循环体可以是一条语句，也可以是一个语句块（用花括号包起来）。 <code>while</code> 循环的特点是先判断条件表达式，后执行循环体语句。</p>
<p><code>while</code> 语句的运行顺序是：从上至下，先判断条件表达式是否为真，为真则执行循环体。循环体运行完后再次判断条件表达式，为真则执行循环体。一直循环直至判断条件表达式为假。</p>
<p><code>while</code> 括号里的 <code>condition</code> 条件表达式实际上也会被执行的，如果条件表达式是赋值语句（赋值成功则表达式为真）、自增自减等也会生效。</p>
<p>同时，while循环也可以使用else语句：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> condition:</span><br><span class="line">    <span class="comment"># statements</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># statements</span></span><br></pre></td></tr></table></figure></div>
<p>举个栗子：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> count &lt; <span class="number">5</span>:</span><br><span class="line">   <span class="built_in">print</span> (count, <span class="string">&quot; 小于 5&quot;</span>)</span><br><span class="line">   count = count + <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="built_in">print</span> (count, <span class="string">&quot; 大于或等于 5&quot;</span>)</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">输出结果：</span><br><span class="line">0  小于 5</span><br><span class="line">1  小于 5</span><br><span class="line">2  小于 5</span><br><span class="line">3  小于 5</span><br><span class="line">4  小于 5</span><br><span class="line">5  大于或等于 5</span><br></pre></td></tr></table></figure></div>
<h2 id="7-3-break-continue和pass">7.3 break、continue和pass</h2>
<ul>
<li><code>break</code> 语句可以跳出 <code>for</code> 和 <code>while</code> 的循环体。如果从 <code>for</code> 或 <code>while</code> 循环中终止，任何对应的循环 else 块将不执行。</li>
</ul>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/py-language-leaning_break.png" alt="break的过程"><figcaption>break的过程</figcaption></figure></p>
<ul>
<li><code>continue</code> 语句被用来告诉Python跳过当前循环块中的剩余语句，然后继续进行下一轮循环。</li>
</ul>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/py-language-leaning_continue.png" alt="continue的过程"><figcaption>continue的过程</figcaption></figure></p>
<ul>
<li><code>pass</code> 语句不做任何事情，一般用做占位语句。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">	<span class="keyword">pass</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;finish&quot;</span>)</span><br><span class="line"><span class="comment"># 输出：finish</span></span><br></pre></td></tr></table></figure></div>
<p><br><br><br></p>
<h1>八. Python面向对象</h1>
<h2 id="8-1-面向对象的相关概念">8.1 面向对象的相关概念</h2>
<p>这里有一些关于面向对象的概念：</p>
<ul>
<li>
<p>类(Class): 用来描述具有相同的属性和方法的对象的集合。它定义了该集合中每个对象所共有的属性和方法。对象是类的实例。</p>
</li>
<li>
<p>方法：类中定义的函数。</p>
</li>
<li>
<p>类变量：类变量在整个实例化的对象中是公用的。类变量定义在类中且在函数体之外。类变量通常不作为实例变量使用。</p>
</li>
<li>
<p>数据成员：类变量或者实例变量用于处理类及其实例对象的相关的数据。</p>
</li>
<li>
<p>方法重写：如果从父类继承的方法不能满足子类的需求，可以对其进行改写，这个过程叫方法的覆盖（override），也称为方法的重写。</p>
</li>
<li>
<p>局部变量：定义在方法中的变量，只作用于当前实例的类。</p>
</li>
<li>
<p>实例变量：在类的声明中，属性是用变量来表示的，这种变量就称为实例变量，实例变量就是一个用 self 修饰的变量。</p>
</li>
<li>
<p>继承：即一个派生类（derived class）继承基类（base class）的字段和方法。继承也允许把一个派生类的对象作为一个基类对象对待。例如，有这样一个设计：一个Dog类型的对象派生自Animal类，这是模拟&quot;是一个（is-a）&quot;关系（例图，Dog是一个Animal）。</p>
</li>
<li>
<p>实例化：创建一个类的实例，类的具体对象。</p>
</li>
<li>
<p>对象：通过类定义的数据结构实例。对象包括两个数据成员（类变量和实例变量）和方法。</p>
</li>
</ul>
<h2 id="8-2-类的定义">8.2 类的定义</h2>
<p>语法格式如下：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ClassName</span>:</span><br><span class="line">    &lt;statement-<span class="number">1</span>&gt;</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">    &lt;statement-N&gt;</span><br></pre></td></tr></table></figure></div>
<p>比如，我有一个类，它是描述狗的：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>:</span><br><span class="line">	weight = <span class="literal">None</span>	<span class="comment"># 类的公有属性，此处是狗的体重</span></span><br><span class="line">	color = <span class="literal">None</span>	<span class="comment"># 类的公有属性，此处是狗的颜色</span></span><br><span class="line">	__name = <span class="literal">None</span>	<span class="comment"># 类的私有属性，此处是狗的名字</span></span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">sound</span>(<span class="params">self</span>):	<span class="comment"># 类的方法，此处是发出声音方法</span></span><br><span class="line">		<span class="built_in">print</span>(<span class="string">&quot;汪&quot;</span>)</span><br><span class="line"></span><br><span class="line">dog = Dog()	<span class="comment"># 类的实例化</span></span><br><span class="line">dog.sound()	<span class="comment"># 类的实例调用类的方法</span></span><br></pre></td></tr></table></figure></div>
<p>对于属性而言，公有属性一般是基本属性，在类外部可以直接访问（比如 <code>dog.weight</code> ）；私有属性不可以在类外部访问（比如 <code>dog.__name</code> 是不允许的），在类内部的属性中使用时 <code>self.__name</code> 。同理方法也有公有和私有之分，私有方法以两个下划线开头。</p>
<p>对于类的方法而言，与普通的函数只有一个特别的区别，就是类的方法必须有一个额外的第一个参数名称, 按照惯例它的名称是 <code>self</code> 。 <code>self</code> 代表了类的实例，代表当前对象的地址。</p>
<p>实际上也不非得是 <code>self</code> ，全部换成别的也行。</p>
<h2 id="8-3-类的方法">8.3 类的方法</h2>
<h3 id="8-3-1-构造方法">8.3.1 构造方法</h3>
<p>构造方法的函数名为 <code>__init__</code> ，语法像这样：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">	self.data = <span class="literal">None</span></span><br></pre></td></tr></table></figure></div>
<p>类定义了 <code>__init__()</code> 方法，类的实例化操作会自动调用 <code>__init__()</code> 方法。如上面的狗类，给他完善一下：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>:</span><br><span class="line">	weight = <span class="literal">None</span>	<span class="comment"># 类的属性，此处是狗的体重</span></span><br><span class="line">	color = <span class="literal">None</span>	<span class="comment"># 类的属性，此处是狗的颜色</span></span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, w, c</span>):</span><br><span class="line">		self.weight = w</span><br><span class="line">		self.color = c</span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">sound</span>(<span class="params">self</span>):	<span class="comment"># 类的方法，此处是发出声音方法</span></span><br><span class="line">		<span class="built_in">print</span>(<span class="string">&quot;汪&quot;</span>)</span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">about</span>(<span class="params">self</span>):</span><br><span class="line">		<span class="built_in">print</span>(<span class="string">&quot;这是一只&#123;&#125;色的狗，重量是&#123;&#125;kg&quot;</span>.<span class="built_in">format</span>(self.color, self.weight))</span><br><span class="line"></span><br><span class="line">dog = Dog(<span class="number">10</span>, <span class="string">&#x27;黑&#x27;</span>)	<span class="comment"># 类的实例化，并且实例化时设定属性值</span></span><br><span class="line">dog.about()	<span class="comment"># 输出关于狗狗的信息</span></span><br><span class="line">dog.sound()	<span class="comment"># 类的实例调用类的方法</span></span><br></pre></td></tr></table></figure></div>
<h3 id="8-3-2-其他方法">8.3.2 其他方法</h3>
<p>有构造方法，自然也有析构方法，他们是对立的。析构方法是释放对象时使用。一般隐式自动调用，函数名为 <code>__del__</code> 。</p>
<p>类还有一些方法：</p>
<ul>
<li>
<p><code>__repr__</code> : 打印，转换</p>
</li>
<li>
<p><code>__setitem__</code> : 按照索引赋值</p>
</li>
<li>
<p><code>__getitem__</code> : 按照索引获取值</p>
</li>
<li>
<p><code>__len__</code> : 获得长度</p>
</li>
<li>
<p><code>__cmp__</code> : 比较运算</p>
</li>
<li>
<p><code>__call__</code> : 函数调用</p>
</li>
<li>
<p><code>__add__</code> : 加运算</p>
</li>
<li>
<p><code>__sub__</code> : 减运算</p>
</li>
<li>
<p><code>__mul__</code>: 乘运算</p>
</li>
<li>
<p><code>__truediv__</code>: 除运算</p>
</li>
<li>
<p><code>__mod__</code>: 求余运算</p>
</li>
<li>
<p><code>__pow__</code>: 乘方</p>
</li>
</ul>
<h2 id="8-4-类的继承">8.4 类的继承</h2>
<p>类的继承允许一个子类继承另一个类（称作父类），继承父类的属性和方法。集成的语法如下：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">DerivedClassName</span>(<span class="title class_ inherited__">BaseClassName</span>):</span><br><span class="line">    &lt;statement-<span class="number">1</span>&gt;</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">    &lt;statement-N&gt;</span><br></pre></td></tr></table></figure></div>
<p>拿回上面的例子，狗类应该是继承自动物类的，因为狗包含在动物里。而动物都有重量这个属性；在狗类里，除了继承重量这一属性，还可以添加新的属性，比如颜色：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span>:</span><br><span class="line">	weight = <span class="literal">None</span>	<span class="comment"># 类的属性，此处是动物的体重，未知设为None</span></span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, w</span>):</span><br><span class="line">		self.weight = w</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>(<span class="title class_ inherited__">Animal</span>):	<span class="comment"># 狗类继承动物类</span></span><br><span class="line">	color = <span class="literal">None</span>	<span class="comment"># 类的属性，此处添加狗的颜色，未知设为None</span></span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, w, c</span>):</span><br><span class="line">		self.weight = w</span><br><span class="line">		self.color = c</span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">sound</span>(<span class="params">self</span>):	<span class="comment"># 类的方法，此处是发出声音方法</span></span><br><span class="line">		<span class="built_in">print</span>(<span class="string">&quot;汪&quot;</span>)</span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">about</span>(<span class="params">self</span>):</span><br><span class="line">		<span class="built_in">print</span>(<span class="string">&quot;这是一只&#123;&#125;色的狗，重量是&#123;&#125;kg&quot;</span>.<span class="built_in">format</span>(self.color, self.weight))</span><br><span class="line"></span><br><span class="line">dog = Dog(<span class="number">10</span>, <span class="string">&#x27;黑&#x27;</span>)	<span class="comment"># 类的实例化，并且实例化时设定属性值</span></span><br><span class="line">dog.about()	<span class="comment"># 输出关于狗狗的信息</span></span><br><span class="line">dog.sound()	<span class="comment"># 类的实例调用类的方法</span></span><br></pre></td></tr></table></figure></div>
<p>实际上，还可以继承多个父类，语法如下：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">DerivedClassName</span>(Base1, Base2, Base3):</span><br><span class="line">    &lt;statement-<span class="number">1</span>&gt;</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">    &lt;statement-N&gt;</span><br></pre></td></tr></table></figure></div>
<p>如狗类从动物类里继承得到重量这一属性，同时也可以从花类里继承得到颜色这一属性，虽然会有点怪，但这确实可以。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span>:</span><br><span class="line">	weight = <span class="literal">None</span>	<span class="comment"># 类的属性，此处是动物的体重，未知设为None</span></span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, w</span>):</span><br><span class="line">		self.weight = w</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Flower</span>:</span><br><span class="line">	color = <span class="literal">None</span>	<span class="comment"># 类的属性，此处是花的颜色，未知设为None</span></span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, c</span>):</span><br><span class="line">		self.color = c</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>(Animal, Flower):</span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, w, c</span>):</span><br><span class="line">		self.weight = w</span><br><span class="line">		self.color = c</span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">sound</span>(<span class="params">self</span>):	<span class="comment"># 类的方法，此处是发出声音方法</span></span><br><span class="line">		<span class="built_in">print</span>(<span class="string">&quot;汪&quot;</span>)</span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">about</span>(<span class="params">self</span>):</span><br><span class="line">		<span class="built_in">print</span>(<span class="string">&quot;这是一只&#123;&#125;色的狗，重量是&#123;&#125;kg&quot;</span>.<span class="built_in">format</span>(self.color, self.weight))</span><br><span class="line"></span><br><span class="line">dog = Dog(<span class="number">10</span>, <span class="string">&#x27;黑&#x27;</span>)	<span class="comment"># 类的实例化，并且实例化时设定属性值</span></span><br><span class="line">dog.about()	<span class="comment"># 输出关于狗狗的信息</span></span><br><span class="line">dog.sound()	<span class="comment"># 类的实例调用类的方法</span></span><br></pre></td></tr></table></figure></div>
<p>即使狗类里面没有属性，但是通过继承可以得到想要的属性。</p>
<p>但是如果继承太多，方法名字重复了或者父类提供的方法不能满足需求，可以进行方法重写。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span>:</span><br><span class="line">	weight = <span class="literal">None</span>	<span class="comment"># 类的属性，此处是动物的体重，未知设为None</span></span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, w</span>):</span><br><span class="line">		self.weight = w</span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">about</span>(<span class="params">self</span>):</span><br><span class="line">		<span class="built_in">print</span>(<span class="string">&quot;这只动物的重量是&#123;&#125;kg&quot;</span>.<span class="built_in">format</span>(self.weight))</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Flower</span>:</span><br><span class="line">	color = <span class="literal">None</span>	<span class="comment"># 类的属性，此处是花的颜色，未知设为None</span></span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, c</span>):</span><br><span class="line">		self.color = c</span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">about</span>(<span class="params">self</span>):</span><br><span class="line">		<span class="built_in">print</span>(<span class="string">&quot;这朵花的颜色是&#123;&#125;色&quot;</span>.<span class="built_in">format</span>(self.color))</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>(Animal, Flower):</span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, w, c</span>):</span><br><span class="line">		self.weight = w</span><br><span class="line">		self.color = c</span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">about</span>(<span class="params">self</span>):</span><br><span class="line">		<span class="built_in">print</span>(<span class="string">&quot;这是一只&#123;&#125;色的狗，重量是&#123;&#125;kg&quot;</span>.<span class="built_in">format</span>(self.color, self.weight))</span><br><span class="line"></span><br><span class="line">animal = Animal(<span class="number">20</span>)</span><br><span class="line">flower = Flower(<span class="string">&#x27;红&#x27;</span>)</span><br><span class="line">dog = Dog(<span class="number">10</span>, <span class="string">&#x27;黑&#x27;</span>)	<span class="comment"># 类的实例化，并且实例化时设定属性值</span></span><br><span class="line">animal.about()</span><br><span class="line">flower.about()</span><br><span class="line">dog.about()	<span class="comment"># 输出关于狗狗的信息</span></span><br></pre></td></tr></table></figure></div>
<p>上述代码则对 <code>about()</code> 函数进行了重写，以满足狗类的需求。</p>
<p>重写方法或者重写运算符可以实现一些特殊的功能。</p>
<p>但是对于构造函数，子类不重写 <code>__init__()</code> ，实例化子类时，会自动调用父类定义的 <code>__init__()</code> 。如果重写了 <code>__init__</code> 时，实例化子类，就不会调用父类已经定义的 <code>__init__</code> 。还有一种情况，如果重写了 <code>__init__()</code> 函数，仍想调用父类构造方法时，可以这样写：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">super</span>(子类, self).__init__(...)</span><br><span class="line"><span class="comment"># 或者是：父类名称.__init__(self, ...)</span></span><br></pre></td></tr></table></figure></div>
<p><br><br><br></p>
<h1>九. 列表 List</h1>
<h2 id="9-1-什么是列表">9.1 什么是列表</h2>
<p>Python的列表可以存储相同数据类型的数据，也可以存储不同数据类型的数据。</p>
<p>定义列表的语法格式为： <code>listName = [元素1, …, 元素n]</code></p>
<p>列表的每一个数据称作元素，置于括号 <code>[]</code> 中，用逗号隔开。</p>
<p>其中空列表为没有任何元素的列表。</p>
<p>同样，当我们不需要这个列表时，使用 <code>del</code> 删除列表。</p>
<h2 id="9-2-列表的运算和方法">9.2 列表的运算和方法</h2>
<h3 id="9-2-1-输出列表">9.2.1 输出列表</h3>
<p>当我们有一个列表时，直接使用print()函数即可输出整个列表。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>)</span><br><span class="line"><span class="comment"># 输出结果：[1, 2, 3]</span></span><br></pre></td></tr></table></figure></div>
<h3 id="9-2-2-读取-修改和删除列表元素">9.2.2 读取、修改和删除列表元素</h3>
<p>可以通过列表名称与索引读取列表元素的内容，元素的索引值从0开始。修改同理，只需要更改存储的数据即可。</p>
<p>当索引值为负值时，表示从列表结尾数起，-1为最后一个元素，-2为最后第2个元素。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>[<span class="number">2</span>]) 	<span class="comment"># 5</span></span><br><span class="line"><span class="built_in">list</span>[<span class="number">2</span>] = <span class="number">6</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>)		<span class="comment"># [1, 3, 6, 7]</span></span><br></pre></td></tr></table></figure></div>
<p>同时可以使用 <code>in</code> 运算符判断某元素是否在列表中：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="number">3</span> <span class="keyword">in</span> <span class="built_in">list</span>) 	<span class="comment"># True</span></span><br></pre></td></tr></table></figure></div>
<p>如果希望删除列表的元素，同样使用 <code>del</code> 进行。</p>
<ul>
<li>
<p><code>del list[i]</code> ：删除索引为i的元素。</p>
</li>
<li>
<p><code>del list[start:end]</code> ：删除索引从start到end-1的所有元素。</p>
</li>
<li>
<p><code>del list[start:end:step]</code> ：每隔step，删除索引从start到end-1的元素。</p>
</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>)	<span class="comment"># [1, 3, 5, 7, 9]</span></span><br><span class="line"><span class="keyword">del</span> <span class="built_in">list</span>[<span class="number">2</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>)	<span class="comment"># [1, 3, 7, 9]</span></span><br><span class="line"><span class="keyword">del</span> <span class="built_in">list</span>[<span class="number">2</span>:<span class="number">4</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>)	<span class="comment"># [1, 3]</span></span><br></pre></td></tr></table></figure></div>
<h3 id="9-2-3-列表切片">9.2.3 列表切片</h3>
<p>在设计程序时，常会需要取得列表前几个元素、后几个元素、某区间元素或是依照一定规则排序的元素，所取得的系列元素也可称子列表，这个过程也称列表切片(list slices)。</p>
<ul>
<li>
<p><code>list[start:end]</code> ：读取从索引start到(end-1)索引的列表元素。</p>
</li>
<li>
<p><code>list[:n]</code> ：取得列表前n个。</p>
</li>
<li>
<p><code>list[n:]</code> ：取得列表索引n到最后。</p>
</li>
<li>
<p><code>list[-n:]</code> ：取得列表后n名。</p>
</li>
<li>
<p><code>list[:]</code> ：取得所有元素。</p>
</li>
<li>
<p><code>list[start:end:step]</code> ：每隔step,读取从索引start到(end-l)<br>
索引的列表元素。</p>
</li>
</ul>
<h3 id="9-2-4-列表的统计方法">9.2.4 列表的统计方法</h3>
<ul>
<li><code>max()</code> ：取得列表的最大值。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">max</span>(<span class="built_in">list</span>)) <span class="comment"># 3</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li><code>min()</code> ：取得列表的最小值。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">min</span>(<span class="built_in">list</span>)) <span class="comment"># 1</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li><code>sum()</code> ：取得列表的总和。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sum</span>(<span class="built_in">list</span>)) <span class="comment"># 6</span></span><br></pre></td></tr></table></figure></div>
<h3 id="9-2-5-列表的元素个数">9.2.5 列表的元素个数</h3>
<ul>
<li><code>len()</code> ：判断列表中元素个数。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(<span class="built_in">list</span>)) <span class="comment"># 3</span></span><br></pre></td></tr></table></figure></div>
<p>也可通过 <code>len()</code> 函数判断列表是否为空。</p>
<h3 id="9-2-6-列表的加法-乘法">9.2.6 列表的加法、乘法</h3>
<p>列表与列表相加表示列表的结合。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">list1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">list2 = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line"><span class="built_in">print</span>(list1 + list2) <span class="comment"># [1, 2, 3, 4, 5, 6]</span></span><br></pre></td></tr></table></figure></div>
<p>列表与数字相乘表示列表元素重复多少次。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span> * <span class="number">3</span>) <span class="comment"># [1, 2, 3, 1, 2, 3, 1, 2, 3]</span></span><br></pre></td></tr></table></figure></div>
<h2 id="9-3-列表的其他方法">9.3 列表的其他方法</h2>
<ol>
<li>
<p><code>list.append(obj)</code> ：在列表末尾添加新的对象。</p>
</li>
<li>
<p><code>list.count(obj)</code> ：统计某个元素在列表中出现的次数。</p>
</li>
<li>
<p><code>list.extend(seq)</code> ：在列表末尾一次性追加另一个序列中的多个值（用新列表扩展原来的列表）。</p>
</li>
<li>
<p><code>list.index(obj)</code> ：从列表中找出某个值第一个匹配项的索引位置。</p>
</li>
<li>
<p><code>list.insert(index, obj)</code> ：将对象插入列表。</p>
</li>
<li>
<p><code>list.pop([index=-1])</code> ：移除列表中的一个元素（默认最后一个元素），并且返回该元素的值。</p>
</li>
<li>
<p><code>list.remove(obj)</code> ：移除列表中某个值的第一个匹配项。</p>
</li>
<li>
<p><code>list.reverse()</code> ：反向列表中元素。</p>
</li>
<li>
<p><code>list.sort(key=None, reverse=False)</code> ：对原列表进行排序。</p>
</li>
<li>
<p><code>list.clear()</code> ：清空列表。</p>
</li>
<li>
<p><code>list.copy()</code> ：返回复制后的新列表。有兴趣可了解深拷贝和浅拷贝。</p>
</li>
</ol>
<p>具体的函数解释用法可以边用边搜索。</p>
<p><br><br><br></p>
<h1>十. 元组 Tuple</h1>
<h2 id="10-1-什么是元组">10.1 什么是元组</h2>
<p>Python的元组与列表类似，不同之处在于元组的元素 <strong>不能修改</strong> 。元组使用小括号 <code>( )</code> ，列表使用方括号 <code>[ ]</code> 。</p>
<p>定义元组的语法格式为： <code>tupName = (元素1, 元素2, ...)</code></p>
<p>元组的每一个数据称作元素，置于括号 <code>()</code> 中，用逗号隔开。如果元组中只包含一个元素时，需要在元素后面添加逗号 <code>,</code> ，否则括号会被当作运算符使用。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">tup = (<span class="number">1</span>,)</span><br></pre></td></tr></table></figure></div>
<p>其中空元组为没有任何元素的元组。</p>
<p>同样，当我们不需要这个元组时，使用 <code>del</code> 删除元组。</p>
<h2 id="10-2-元组的运算和方法">10.2 元组的运算和方法</h2>
<h3 id="10-2-1-输出元组">10.2.1 输出元组</h3>
<p>当我们有一个元组时，直接使用print()函数即可输出整个元组。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">tup = (<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(tup)</span><br></pre></td></tr></table></figure></div>
<h3 id="10-2-2-读取元组元素">10.2.2 读取元组元素</h3>
<p>元组同样通过下标索引访问元组中的值。与列表类似。</p>
<p>但通过索引修改元组元素的操作是不被允许的，但是可以通过 <code>+</code> 进行元组的拼接。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">tup1 = (<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">tup2 = (<span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">tup3 = tup1 + tup2</span><br><span class="line"><span class="built_in">print</span>(tup3)</span><br></pre></td></tr></table></figure></div>
<p>同时也不允许删除元组中的元素值，只能通过 <code>del</code> 删除整个元组。</p>
<h3 id="10-2-3-元组截取">10.2.3 元组截取</h3>
<p>因为元组也是一个序列，所以我们可以访问元组中的指定位置的元素，也可以截取索引中的一段元素。</p>
<ul>
<li>
<p><code>tup[start:end]</code> ：读取从索引start到(end-1)索引的列表元素。</p>
</li>
<li>
<p><code>tup[:n]</code> ：取得列表前n个。</p>
</li>
<li>
<p><code>tup[n:]</code> ：取得列表索引n到最后。</p>
</li>
<li>
<p><code>tup[-n:]</code> ：取得列表后n名。</p>
</li>
<li>
<p><code>tup[:]</code> ：取得所有元素。</p>
</li>
<li>
<p><code>tup[start:end:step]</code> ：每隔step,读取从索引start到(end-l)<br>
索引的列表元素。</p>
</li>
</ul>
<h3 id="10-2-4-列表的统计函数">10.2.4 列表的统计函数</h3>
<ul>
<li><code>max()</code> ：取得元组的最大值。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">tup = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">max</span>(tup)) <span class="comment"># 3</span></span><br></pre></td></tr></table></figure></div>
<ul>
<li><code>min()</code> ：取得元组的最小值。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">tup = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">min</span>(tup)) <span class="comment"># 1</span></span><br></pre></td></tr></table></figure></div>
<h3 id="10-2-5-元组的元素个数">10.2.5 元组的元素个数</h3>
<p>函数 <code>len()</code> 计算元组中元素个数。</p>
<h3 id="10-2-6-元组的加法-乘法">10.2.6 元组的加法、乘法</h3>
<p>元组支持 <code>+</code> 、 <code>+=</code> 、 <code>*</code> 运算。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">tup1 = (<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">tup2 = (<span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">tup3 = tup1 + tup2</span><br><span class="line"><span class="built_in">print</span>(tup3)</span><br></pre></td></tr></table></figure></div>
<p>tup3 就是一个新的元组，它包含了 tup1 和 tup2 中的所有元素。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">tup1 = (<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">tup2 = (<span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">tup1 += tup2</span><br><span class="line"><span class="built_in">print</span>(tup1)</span><br></pre></td></tr></table></figure></div>
<p>tup1 就变成了一个新的元组，它包含了 tup1 和 tup2 中的所有元素。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">tup1 = (<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(tup1 * <span class="number">4</span>)</span><br></pre></td></tr></table></figure></div>
<p>乘法的作用依然是复制。</p>
<p><br><br><br></p>
<h1>十一. 字典 Dict</h1>
<h2 id="11-1-什么是字典">11.1 什么是字典</h2>
<p>字典是另一种可变容器模型，由键值对组成，且可存储任意类型对象。</p>
<p>字典的每个键值对用冒号 <code>:</code> 分割，每个对之间用逗号 <code>,</code> 分割，整个字典包括在花括号 <code>&#123;&#125;</code> 中 ,格式如下所示：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">d = &#123;key1 : value1, key2 : value2, ...&#125;</span><br></pre></td></tr></table></figure></div>
<p>需要注意的是，键值对的键必须是唯一的，值可以不唯一。 <strong>创建时如果同一个键被赋值两次，后一个值会被记住。</strong></p>
<p>键必须不可变，所以可以用数字，字符串或元组充当，而用列表就不行。</p>
<p>同时创建空字典时，可以使用 <code>d = &#123;&#125;</code> 直接创建，也可以使用 <code>d= dict()</code> 函数创建。所以字典的名字不能取dict。</p>
<h2 id="11-2-字典的运算和方法">11.2 字典的运算和方法</h2>
<h3 id="11-2-1-输出字典">11.2.1 输出字典</h3>
<p>直接使用 <code>print()</code> 输出：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">d = &#123;<span class="string">&#x27;apple&#x27;</span> : <span class="string">&#x27;苹果&#x27;</span>, <span class="string">&#x27;banana&#x27;</span> : <span class="string">&#x27;香蕉&#x27;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(d)</span><br></pre></td></tr></table></figure></div>
<h3 id="11-2-2-读取-修改和删除字典">11.2.2 读取、修改和删除字典</h3>
<p>与列表、元组使用索引值不同，字典需要把键放到方括号中。如果访问了字典里没有的键，就会报错。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">d = &#123;<span class="string">&#x27;apple&#x27;</span> : <span class="string">&#x27;苹果&#x27;</span>, <span class="string">&#x27;banana&#x27;</span> : <span class="string">&#x27;香蕉&#x27;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(d[<span class="string">&#x27;apple&#x27;</span>])</span><br></pre></td></tr></table></figure></div>
<p>修改字典内容也是直接使用键访问设定新值：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">d = &#123;<span class="string">&#x27;apple&#x27;</span> : <span class="string">&#x27;苹果&#x27;</span>, <span class="string">&#x27;banana&#x27;</span> : <span class="string">&#x27;香蕉&#x27;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(d)</span><br><span class="line">d[<span class="string">&#x27;apple&#x27;</span>] = <span class="string">&#x27;大苹果&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(d)</span><br></pre></td></tr></table></figure></div>
<p>向字典添加新内容的方法是增加新的键值对：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">d = &#123;<span class="string">&#x27;apple&#x27;</span> : <span class="string">&#x27;苹果&#x27;</span>, <span class="string">&#x27;banana&#x27;</span> : <span class="string">&#x27;香蕉&#x27;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(d)</span><br><span class="line">d[<span class="string">&#x27;mango&#x27;</span>] = <span class="string">&#x27;芒果&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(d)</span><br></pre></td></tr></table></figure></div>
<p>删除已有键值对如下：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">d = &#123;<span class="string">&#x27;apple&#x27;</span> : <span class="string">&#x27;苹果&#x27;</span>, <span class="string">&#x27;banana&#x27;</span> : <span class="string">&#x27;香蕉&#x27;</span>&#125;</span><br><span class="line"><span class="keyword">del</span> d[<span class="string">&#x27;apple&#x27;</span>]</span><br></pre></td></tr></table></figure></div>
<p>字典还有删除整个字典和清空字典的功能：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">d = &#123;<span class="string">&#x27;apple&#x27;</span> : <span class="string">&#x27;苹果&#x27;</span>, <span class="string">&#x27;banana&#x27;</span> : <span class="string">&#x27;香蕉&#x27;</span>&#125;</span><br><span class="line">d = clear()	<span class="comment"># 清空字典</span></span><br><span class="line"><span class="keyword">del</span> d	<span class="comment"># 删除字典</span></span><br></pre></td></tr></table></figure></div>
<h3 id="11-2-3-字典的键值对数">11.2.3 字典的键值对数</h3>
<p>函数 <code>len()</code> 计算字典中键值对数。</p>
<h2 id="11-3-字典的方法">11.3 字典的方法</h2>
<ol>
<li>
<p><code>dict.clear()</code> ：删除字典内所有元素</p>
</li>
<li>
<p><code>dict.copy()</code> ：返回一个字典的复制</p>
</li>
<li>
<p><code>dict.fromkeys()</code> ：创建一个新字典，以序列seq中元素做字典的键，val为字典所有键对应的初始值</p>
</li>
<li>
<p><code>dict.get(key, default=None)</code> ：返回指定键的值，如果键不在字典中返回 default 设置的默认值</p>
</li>
<li>
<p><code>key in dict</code> ：如果键在字典dict里返回true，否则返回false</p>
</li>
<li>
<p><code>dict.items()</code> ：以列表返回一个视图对象</p>
</li>
<li>
<p><code>dict.keys()</code> ：返回一个视图对象</p>
</li>
<li>
<p><code>dict.setdefault(key, default=None)</code> ：和get()类似, 但如果键不存在于字典中，将会添加键并将值设为default</p>
</li>
<li>
<p><code>dict.update(dict2)</code> ：把字典dict2的键/值对更新到dict里</p>
</li>
<li>
<p><code>dict.values()</code> ：返回一个视图对象</p>
</li>
<li>
<p><code>pop(key[,default])</code> ：删除字典key（键）所对应的值，返回被删除的值。</p>
</li>
<li>
<p><code>popitem()</code> ：返回并删除字典中的最后一对键和值。</p>
</li>
</ol>
<p><br><br><br></p>
<h1>十二. 集合 Set</h1>
<h2 id="12-1-什么是集合">12.1 什么是集合</h2>
<p>集合（set）是一个无序的不重复元素序列。集合中的元素不会重复，并且可以进行交集、并集、差集等常见的集合操作。</p>
<p>可以使用大括号 <code>&#123; &#125;</code> 创建集合，元素之间用逗号 , 分隔， 或者也可以使用 <code>set()</code> 函数创建集合。创建一个空集合必须用 <code>set()</code> ，因为 { } 是用来创建一个空字典。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">parame1 = &#123;value01,value02,...&#125;</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">parame2 = <span class="built_in">set</span>(value)</span><br></pre></td></tr></table></figure></div>
<h2 id="12-2-集合基本操作">12.2 集合基本操作</h2>
<h3 id="12-2-1-添加元素">12.2.1 添加元素</h3>
<p><code>s.add(x)</code> ，将元素 x 添加到集合 s 中，如果元素已存在，则不进行任何操作。</p>
<p><code>s.update(x)</code> 也可以添加元素，且参数可以是列表，元组，字典等。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">s = &#123;<span class="number">1</span>, <span class="number">3</span>&#125;</span><br><span class="line">s.add(<span class="number">2</span>)</span><br><span class="line">s.update([<span class="number">4</span>,<span class="number">6</span>], [<span class="number">5</span>])</span><br><span class="line"><span class="built_in">print</span>(s)</span><br></pre></td></tr></table></figure></div>
<h3 id="12-2-2-移除元素">12.2.2 移除元素</h3>
<p><code>s.remove(x)</code> ，将元素 x 从集合 s 中移除，如果元素不存在，则会发生错误。</p>
<p><code>s.discard(x)</code> ，将元素 x 从集合 s 中移除，如果元素不存在，不会发生错误。</p>
<p><code>s.pop()</code> ，随机删除集合中的一个元素。</p>
<h3 id="12-2-3-计算集合元素个数">12.2.3 计算集合元素个数</h3>
<p><code>len(s)</code> ，计算集合 s 元素的个数。</p>
<h3 id="12-2-4-清空集合">12.2.4 清空集合</h3>
<p><code>s.clear()</code> ，清空集合 s 。</p>
<h3 id="12-2-5-判断元素是否在集合中">12.2.5 判断元素是否在集合中</h3>
<p><code>x in s</code> ，存在返回True，不存在返回False。</p>
<h2 id="12-3-集合的方法">12.3 集合的方法</h2>
<ul>
<li>
<p><code>add()</code> ：为集合添加元素</p>
</li>
<li>
<p><code>clear()</code> ：移除集合中的所有元素</p>
</li>
<li>
<p><code>copy()</code> ：拷贝一个集合</p>
</li>
<li>
<p><code>difference()</code> ：返回多个集合的差集</p>
</li>
<li>
<p><code>difference_update()</code> ，移除集合中的元素，该元素在指定的集合也存在。</p>
</li>
<li>
<p><code>discard()</code> ，删除集合中指定的元素</p>
</li>
<li>
<p><code>intersection()</code> ，返回集合的交集</p>
</li>
<li>
<p><code>intersection_update()</code> ，返回集合的交集。</p>
</li>
<li>
<p><code>isdisjoint()</code> ，判断两个集合是否包含相同的元素，如果没有返回 True，否则返回 False。</p>
</li>
<li>
<p><code>issubset()</code> ，判断指定集合是否为该方法参数集合的子集。</p>
</li>
<li>
<p><code>issuperset()</code> ，判断该方法的参数集合是否为指定集合的子集</p>
</li>
<li>
<p><code>pop()</code> ，随机移除元素</p>
</li>
<li>
<p><code>remove()</code> ，移除指定元素</p>
</li>
<li>
<p><code>symmetric_difference()</code> ，返回两个集合中不重复的元素集合。</p>
</li>
<li>
<p><code>symmetric_difference_update()</code> ，移除当前集合中在另外一个指定集合相同的元素，并将另外一个指定集合中不同的元素插入到当前集合中。</p>
</li>
<li>
<p><code>union()</code> ，返回两个集合的并集</p>
</li>
<li>
<p><code>update()</code> ，给集合添加元素</p>
</li>
</ul>
<p>具体使用解释可自行搜索。</p>
<p><br><br><br></p>
<h1>十三. 迭代器和生成器</h1>
<h2 id="13-1-迭代器">13.1 迭代器</h2>
<p>迭代器是一个可以 <strong>记住遍历的位置</strong> 的对象。</p>
<p>迭代器对象从集合的第一个元素开始访问，直到所有的元素被访问完结束。迭代器只能往前不会后退。</p>
<p>迭代器有两个基本的方法：</p>
<ul>
<li>
<p><code>iter()</code> ：创建一个迭代器对象。</p>
</li>
<li>
<p><code>next()</code> ：返回下一个迭代器对象。</p>
</li>
</ul>
<p>字符串，列表或元组对象都可用于创建迭代器。</p>
<p>举个例子：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">it = <span class="built_in">iter</span>(<span class="built_in">list</span>)</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> it:</span><br><span class="line">	<span class="built_in">print</span>(x, end=<span class="string">&quot; &quot;</span>)</span><br><span class="line"><span class="comment">#输出结果：1 2 3 4</span></span><br></pre></td></tr></table></figure></div>
<p>还可以把一个类作为一个迭代器使用，需要实现 <code>__iter__()</code> 和 <code>__next__()</code> 方法。此处举例：创建一个返回数字的迭代器，初始值为 1，逐步递增 1。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyNumbers</span>:</span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">__iter__</span>(<span class="params">self</span>):</span><br><span class="line">		self.a = <span class="number">1</span></span><br><span class="line">		<span class="keyword">return</span> self</span><br><span class="line"> </span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">__next__</span>(<span class="params">self</span>):</span><br><span class="line">		x = self.a</span><br><span class="line">		self.a += <span class="number">1</span></span><br><span class="line">		<span class="keyword">return</span> x</span><br></pre></td></tr></table></figure></div>
<p>当迭代完成时，会触发 <code>StopIteration</code> ，可以在 <code>__next__()</code> 中设置。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyNumbers</span>:</span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">__iter__</span>(<span class="params">self</span>):</span><br><span class="line">		self.a = <span class="number">1</span></span><br><span class="line">		<span class="keyword">return</span> self</span><br><span class="line"> </span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">__next__</span>(<span class="params">self</span>):</span><br><span class="line">		<span class="keyword">if</span> self.a &lt;= <span class="number">20</span>:</span><br><span class="line">			x = self.a</span><br><span class="line">			self.a += <span class="number">1</span></span><br><span class="line">			<span class="keyword">return</span> x</span><br><span class="line">		<span class="keyword">else</span>:	<span class="comment"># 设置迭代完成条件</span></span><br><span class="line">			<span class="keyword">raise</span> StopIteration</span><br><span class="line"> </span><br><span class="line">myclass = MyNumbers()</span><br><span class="line">myiter = <span class="built_in">iter</span>(myclass)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> myiter:</span><br><span class="line">  <span class="built_in">print</span>(x)</span><br></pre></td></tr></table></figure></div>
<h2 id="13-2-生成器">13.2 生成器</h2>
<p>在 Python 中，使用了 <code>yield</code> 的函数被称为生成器（generator）。</p>
<p><code>yield</code>  是一个关键字，用于定义生成器函数，生成器函数是一种特殊的函数，可以在迭代过程中逐步产生值，而不是一次性返回所有结果。</p>
<p>跟普通函数不同的是，生成器是一个返回迭代器的函数，只能用于迭代操作，更简单点理解生成器就是一个迭代器。</p>
<p>当在生成器函数中使用 <code>yield</code> 语句时，函数的执行将会暂停，并将 <code>yield</code> 后面的表达式作为当前迭代的值返回。</p>
<p>然后，每次调用生成器的 <code>next()</code> 方法或使用 <code>for</code> 循环进行迭代时，函数会从上次暂停的地方继续执行，直到再次遇到 <code>yield</code>  语句。这样，生成器函数可以逐步产生值，而不需要一次性计算并返回所有结果。</p>
<p>调用一个生成器函数，返回的是一个迭代器对象。</p>
<p>下面是一个简单的示例，展示了生成器函数的使用：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">countdown</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">while</span> n &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">yield</span> n</span><br><span class="line">        n -= <span class="number">1</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 创建生成器对象</span></span><br><span class="line">generator = countdown(<span class="number">5</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 通过迭代生成器获取值</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(generator))  <span class="comment"># 输出: 5</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(generator))  <span class="comment"># 输出: 4</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(generator))  <span class="comment"># 输出: 3</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 使用 for 循环迭代生成器</span></span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> generator:</span><br><span class="line">    <span class="built_in">print</span>(value)  <span class="comment"># 输出: 2 1</span></span><br></pre></td></tr></table></figure></div>
<p>再举一个例子，计算斐波那契数列：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fibonacci</span>(<span class="params">n</span>): 	<span class="comment"># 生成器函数计算斐波那契</span></span><br><span class="line">    a, b, counter = <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">if</span> (counter &gt; n): </span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">yield</span> a		<span class="comment"># 在此返回数列的项 a</span></span><br><span class="line">        a, b = b, a + b</span><br><span class="line">        counter += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">f = fibonacci(<span class="number">10</span>) <span class="comment"># f 是一个迭代器，由生成器返回生成</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="built_in">print</span> (<span class="built_in">next</span>(f), end=<span class="string">&quot; &quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> StopIteration:</span><br><span class="line">        sys.exit()</span><br></pre></td></tr></table></figure></div>
<p><br><br><br></p>
<h1>十四. 推导式</h1>
<h2 id="14-1-列表推导式">14.1 列表推导式</h2>
<p>格式为：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># [表达式 for 变量 in 列表] </span></span><br><span class="line">[out_exp_res <span class="keyword">for</span> out_exp <span class="keyword">in</span> input_list]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [表达式 for 变量 in 列表 if 条件]</span></span><br><span class="line">[out_exp_res <span class="keyword">for</span> out_exp <span class="keyword">in</span> input_list <span class="keyword">if</span> condition]</span><br></pre></td></tr></table></figure></div>
<ul>
<li>
<p>out_exp_res：列表生成元素表达式，可以是有返回值的函数。</p>
</li>
<li>
<p>for out_exp in input_list：迭代input_list将out_exp传入到out_exp_res表达式中。</p>
</li>
<li>
<p>if condition: 条件语句，可以过滤列表中不符合条件的值。</p>
</li>
</ul>
<p>推导出来是一个列表。</p>
<p>举个例子，求30以内能被4整除的整数：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">ans = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>) <span class="keyword">if</span> i % <span class="number">4</span> == <span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(ans)</span><br></pre></td></tr></table></figure></div>
<p>再举个例子，求列表中长度大于3的字符串并大写：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="string">&quot;aaa&quot;</span>, <span class="string">&quot;aasdad&quot;</span>, <span class="string">&quot;asdw&quot;</span>, <span class="string">&quot;wadhjuio&quot;</span>]</span><br><span class="line"><span class="built_in">str</span> = [x.upper() <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">list</span> <span class="keyword">if</span> <span class="built_in">len</span>(x) &gt; <span class="number">3</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>)</span><br></pre></td></tr></table></figure></div>
<h2 id="14-2-字典推导式">14.2 字典推导式</h2>
<p>格式为：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">&#123; key_expr: value_expr <span class="keyword">for</span> value <span class="keyword">in</span> collection &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或</span></span><br><span class="line"></span><br><span class="line">&#123; key_expr: value_expr <span class="keyword">for</span> value <span class="keyword">in</span> collection <span class="keyword">if</span> condition &#125;</span><br></pre></td></tr></table></figure></div>
<p>原理与列表推导式类似，推导出来的是一个字典。看一个例子，给出三个数字作为键，以对应的平方作为值，创建字典：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="number">4</span>, <span class="number">2</span>, <span class="number">8</span>]</span><br><span class="line">d = &#123;i : i * i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">list</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(d)</span><br></pre></td></tr></table></figure></div>
<p>再来一个例子，以列表中偶数索引为键，奇数索引为值创建字典：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;苹果&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;香蕉&#x27;</span>]</span><br><span class="line">d = &#123;<span class="built_in">list</span>[i] : <span class="built_in">list</span>[i + <span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(<span class="built_in">list</span>), <span class="number">2</span>) <span class="keyword">if</span> i &lt; <span class="built_in">len</span>(<span class="built_in">list</span>) - <span class="number">1</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(d)	<span class="comment"># &#123;&#x27;apple&#x27;: &#x27;苹果&#x27;, &#x27;banana&#x27;: &#x27;香蕉&#x27;&#125;</span></span><br></pre></td></tr></table></figure></div>
<h2 id="14-3-集合推导式">14.3 集合推导式</h2>
<p>格式为：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">&#123; expression <span class="keyword">for</span> item <span class="keyword">in</span> <span class="type">Sequence</span> &#125;</span><br><span class="line"><span class="comment"># 或</span></span><br><span class="line">&#123; expression <span class="keyword">for</span> item <span class="keyword">in</span> <span class="type">Sequence</span> <span class="keyword">if</span> conditional &#125;</span><br></pre></td></tr></table></figure></div>
<p>原理类似，推导出来的是一个集合。</p>
<h2 id="14-4-元组推导式-生成器表达式">14.4 元组推导式（生成器表达式）</h2>
<p>元组推导式可以利用 range 区间、元组、列表、字典和集合等数据类型，快速生成一个满足指定需求的元组。</p>
<p>格式为：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">(expression <span class="keyword">for</span> item <span class="keyword">in</span> <span class="type">Sequence</span> )</span><br><span class="line"><span class="comment"># 或</span></span><br><span class="line">(expression <span class="keyword">for</span> item <span class="keyword">in</span> <span class="type">Sequence</span> <span class="keyword">if</span> conditional )</span><br></pre></td></tr></table></figure></div>
<p>元组推导式和列表推导式的用法也完全相同，只是元组推导式是用 <code>()</code> 圆括号将各部分括起来，而列表推导式用的是中括号 <code>[]</code> ，另外元组推导式返回的结果是一个生成器对象。需要使用 <code>tuple()</code> 函数，可以直接将生成器对象转换成元组。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">a = (x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>))</span><br><span class="line"><span class="built_in">print</span>(a)		<span class="comment"># &lt;generator object &lt;genexpr&gt; at 0x000002B53CC81FF0&gt;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a))	<span class="comment"># &lt;class &#x27;generator&#x27;&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">tuple</span>(a))	<span class="comment"># (1, 2, 3, 4, 5, 6, 7, 8, 9)</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="built_in">tuple</span>(a)))	<span class="comment"># &lt;class &#x27;tuple&#x27;&gt;</span></span><br></pre></td></tr></table></figure></div>
<p><br><br><br></p>
<h1>十五. 文件的读写</h1>
<h2 id="15-1-打开文件">15.1 打开文件</h2>
<p>Python的 <code>open()</code> 方法用于打开一个文件，并返回文件对象。注意打开文件使用完后记得关闭文件 <code>close()</code></p>
<p>在对文件进行处理过程都需要使用到这个函数，如果该文件无法被打开，会抛出 <code>OSError</code> 异常。</p>
<p>该函数的完整格式为：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">open</span>(file, mode=<span class="string">&#x27;r&#x27;</span>, buffering=-<span class="number">1</span>, encoding=<span class="literal">None</span>, errors=<span class="literal">None</span>, newline=<span class="literal">None</span>, closefd=<span class="literal">True</span>, opener=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure></div>
<ul>
<li>
<p>file: 必需，文件路径（相对或者绝对路径）。</p>
</li>
<li>
<p>mode: 可选，文件打开模式</p>
</li>
<li>
<p>buffering: 设置缓冲</p>
</li>
<li>
<p>encoding: 一般使用utf8</p>
</li>
<li>
<p>errors: 报错级别</p>
</li>
<li>
<p>newline: 区分换行符</p>
</li>
<li>
<p>closefd: 传入的file参数类型</p>
</li>
<li>
<p>opener: 设置自定义开启器，开启器的返回值必须是一个打开的文件描述符。</p>
</li>
</ul>
<p>一般情况下，只需传入file参数和mode参数即可。</p>
<p>mode参数有：</p>
<ul>
<li>
<p><code>t</code> ：文本模式 (默认)。</p>
</li>
<li>
<p><code>x</code> ：写模式，新建一个文件，如果该文件已存在则会报错。</p>
</li>
<li>
<p><code>b</code> ：二进制模式。</p>
</li>
<li>
<p><code>+</code> ：打开一个文件进行更新(可读可写)。</p>
</li>
<li>
<p><code>r</code> ：以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。</p>
</li>
<li>
<p><code>rb</code> ：以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。一般用于非文本文件如图片等。</p>
</li>
<li>
<p><code>r+</code> ：打开一个文件用于读写。文件指针将会放在文件的开头。</p>
</li>
<li>
<p><code>rb+</code> ：以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。一般用于非文本文件如图片等。</p>
</li>
<li>
<p><code>w</code> ：打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</p>
</li>
<li>
<p><code>wb</code> ：以二进制格式打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。一般用于非文本文件如图片等。</p>
</li>
<li>
<p><code>w+</code> ：打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</p>
</li>
<li>
<p><code>wb+</code> ：以二进制格式打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。一般用于非文本文件如图片等。</p>
</li>
<li>
<p><code>a</code> ：打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</p>
</li>
<li>
<p><code>ab</code> ：以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</p>
</li>
<li>
<p><code>a+</code> ：打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。</p>
</li>
<li>
<p><code>ab+</code> ：以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。</p>
</li>
</ul>
<h2 id="15-2-文件对象的方法">15.2 文件对象的方法</h2>
<p>使用 <code>open()</code> 函数会创建一个file对象，file对象有以下常用函数：</p>
<ol>
<li>
<p><code>file.close()</code> ：关闭文件。关闭后文件不能再进行读写操作。</p>
</li>
<li>
<p><code>file.flush()</code> ：刷新文件内部缓冲，直接把内部缓冲区的数据立刻写入文件, 而不是被动的等待输出缓冲区写入。</p>
</li>
<li>
<p><code>file.fileno()</code> ：返回一个整型的文件描述符(file descriptor FD 整型), 可以用在如os模块的read方法等一些底层操作上。</p>
</li>
<li>
<p><code>file.isatty()</code> ：如果文件连接到一个终端设备返回 True，否则返回 False。</p>
</li>
<li>
<p><code>file.read([size])</code> ：从文件读取指定的字节数，如果未给定或为负则读取所有。</p>
</li>
<li>
<p><code>file.readline([size])</code> ：读取整行，包括 “\n” 字符。</p>
</li>
<li>
<p><code>file.readlines([sizeint])</code> ：读取所有行并返回列表，若给定sizeint&gt;0，返回总和大约为sizeint字节的行, 实际读取值可能比 sizeint 较大, 因为需要填充缓冲区。</p>
</li>
<li>
<p><code>file.seek(offset[, whence])</code> ：移动文件读取指针到指定位置</p>
</li>
<li>
<p><code>file.tell()</code> ：返回文件当前位置，是从文件开头开始算起的字节数。</p>
</li>
<li>
<p><code>file.truncate([size])</code> ：从文件的首行首字符开始截断，截断文件为 size 个字符，无 size 表示从当前位置截断；截断之后后面的所有字符被删除，其中 windows 系统下的换行代表2个字符大小。</p>
</li>
<li>
<p><code>file.write(str)</code> ：将字符串写入文件，返回的是写入的字符长度。</p>
</li>
<li>
<p><code>file.writelines(sequence)</code> ：向文件写入一个序列字符串列表，如果需要换行则要自己加入每行的换行符。</p>
</li>
</ol>
<p>方法众多，需要时再查阅资料再学习。</p>
<h2 id="15-3-读取文件">15.3 读取文件</h2>
<p><code>file.read()</code> 方法：</p>
<ul>
<li>
<p>为了读取一个文件的内容，调用 <code>file.read(size)</code>, 这将读取一定数目的数据, 然后作为字符串或字节对象返回。</p>
</li>
<li>
<p><code>size</code> 是一个可选的数字类型的参数。 当 <code>size</code> 被忽略了或者为负, 那么该文件的所有内容都将被读取并且返回。</p>
</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># test.txt中内容：</span></span><br><span class="line"><span class="comment"># 111</span></span><br><span class="line"><span class="comment"># 222</span></span><br><span class="line"></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line"><span class="built_in">str</span> = f.read()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>)</span><br><span class="line"><span class="comment"># 输出结果：</span></span><br><span class="line"><span class="comment"># 111</span></span><br><span class="line"><span class="comment"># 222</span></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure></div>
<p><code>file.readline()</code> 方法：</p>
<ul>
<li><code>file.readline()</code> 会从文件中读取单独的一行。换行符为 ‘\n’。 <code>file.readline()</code> 如果返回一个空字符串, 说明已经已经读取到最后一行。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># test.txt中内容：</span></span><br><span class="line"><span class="comment"># 111</span></span><br><span class="line"><span class="comment"># 222</span></span><br><span class="line"></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line"><span class="built_in">str</span> = f.readline()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>)	<span class="comment"># 输出结果：111</span></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure></div>
<p><code>file.readlines()</code> 方法：</p>
<ul>
<li><code>f.readlines()</code> 将返回该文件中包含的所有行。如果设置可选参数 sizehint, 则读取指定长度的字节, 并且将这些字节按行分割。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># test.txt中内容：</span></span><br><span class="line"><span class="comment"># 111</span></span><br><span class="line"><span class="comment"># 222</span></span><br><span class="line"></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line"><span class="built_in">str</span> = f.readlines()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>)	<span class="comment"># 输出结果：[&#x27;111\n&#x27;, &#x27;222&#x27;]</span></span><br><span class="line"></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure></div>
<h2 id="15-4-文件写入">15.4 文件写入</h2>
<p><code>file.write()</code> 方法：</p>
<ul>
<li><code>f.write(string)</code> 将 string 写入到文件中, 然后返回写入的字符数。</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># test.txt中为空</span></span><br><span class="line"></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">num = f.write(<span class="string">&#x27;111\n222&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(num)	<span class="comment"># 7</span></span><br><span class="line"><span class="comment"># test.txt输出结果：</span></span><br><span class="line"><span class="comment"># 111</span></span><br><span class="line"><span class="comment"># 222</span></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>一个便捷的启动小工具</title>
    <url>/%E8%BD%AF%E4%BB%B6/tools2/</url>
    <content><![CDATA[<p>介绍一个便捷的启动工具、搜索工具——Flow Launcher</p>
<p>关键词：启动工具</p>
<span id="more"></span>
<hr>
<!-- toc -->
<h1>1. Flow Launcher</h1>
<p>Flow Launcher是一款快速启动软件或者打开文件的工具。</p>
<p>其特点有：</p>
<ul>
<li>整合了Everything搜索工具</li>
<li>日期时间显示</li>
<li>文件拖拽</li>
<li>支持缩写</li>
<li>可导入插件</li>
<li>……</li>
</ul>
<h1>2.使用体验</h1>
<p>软件界面简约，可设置多款主题、字体。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/tools2_%E6%95%B4%E4%BD%93%E9%A2%84%E8%A7%88.jpg" alt="软件界面"><figcaption>软件界面</figcaption></figure></p>
<p>设置面板条理清晰，支持自定义，配置一个适合自己的工具。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/tools2_%E8%AE%BE%E7%BD%AE%E9%9D%A2%E6%9D%BF.jpg" alt="设置面板"><figcaption>设置面板</figcaption></figure></p>
<p>搜索过程简单，直接输入马上得到结果，很适合文件太多不想一个个去翻的人。点击即可打开文件或打开应用。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/tools2_%E6%90%9C%E7%B4%A2%E4%BD%93%E9%AA%8C.jpg" alt="搜索过程"><figcaption>搜索过程</figcaption></figure></p>
<p>支持各种命令，支持缩写。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/tools2_%E6%8C%87%E4%BB%A4.jpg" alt="关机指令"><figcaption>关机指令</figcaption></figure></p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/tools2_%E6%8C%87%E4%BB%A42.jpg" alt="关机指令"><figcaption>关机指令</figcaption></figure></p>
<h1>3.软件下载</h1>
<p><a class="link" href="https://www.flowlauncher.com/">官网下载 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
<a class="link" href="https://github.com/Flow-Launcher/Flow.Launcher">Github源码 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h1>4.使用建议</h1>
<ul>
<li>开机自启，占用率不算很高，很是方便。</li>
<li>开启便携模式，增加结果显示个数。<br>
<figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/tools2_%E5%BB%BA%E8%AE%AE.jpg" alt="使用建议1"><figcaption>使用建议1</figcaption></figure></li>
<li>设置好默认文件管理器，默认浏览器。</li>
<li>自定义插件设置（如默认网页搜索引擎等）。<br>
<figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/tools2_%E5%BB%BA%E8%AE%AE2.jpg" alt="使用建议2"><figcaption>使用建议2</figcaption></figure></li>
</ul>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>启动工具</tag>
      </tags>
  </entry>
  <entry>
    <title>给大一的你</title>
    <url>/%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/tofreshman/</url>
    <content><![CDATA[<p>如今大二将完，给大一朋友的一些话。</p>
<p>关键词：经验</p>
<span id="more"></span>
<hr>
<!-- toc -->
<p><font face="kaiti">刚高考完就像是刚解放了一样，有的人安排得忙忙的：把好久没看的纪录片、电视剧、电影看个遍；有的人还不知道干什么，日复一日看手机无聊度过。</font></p>
<p><font face="kaiti">在我自己看来，大一的你可以是这样：</font></p>
<ul>
<li>
<p><font face="kaiti">广泛阅读，看看文学，看看历史等等；</font></p>
</li>
<li>
<p><font face="kaiti">广泛交友，识得良师益友；</font></p>
</li>
<li>
<p><font face="kaiti">进入一两个社团组织，培养技能，提高能力；</font></p>
</li>
<li>
<p><font face="kaiti">……</font></p>
</li>
</ul>
<p><font face="kaiti">大一其实还算处于一种很自由，很空闲的状态。这个时候拥有很多试错的机会，可以去长见识。</font></p>
<p><font face="kaiti">如果说你想拼搏努力地度过大一，那就去关注比赛等学术上的活动，同样也是获得经验的过程。如果说你想时而摆烂，不想逼得自己那么紧，那也完全可以，慢慢提升自己。你可以走得很慢，但绝不后退。</font></p>
<p><font face="kaiti">趁着大一，我觉得最好是提高广度。更重要的是，你是你，无需别人怎么样你也怎么样。有时候遇到的室友、同学摆烂或者很卷，你可以不受他们影响，自个过自个的。注意，这个观念很简单，做到其实很难。</font></p>
<p><font face="kaiti">其实还有一点，大一是视野逐渐开阔的过程，这个过程中也有很多骗子趁机而入，希望能够三思，能够谨慎，能够小心，谨防诈骗。</font></p>
<hr>
<p>接着，我想说一些计算机专业相关的建议。其实很多同学大一之前对于计算机的知识是不全面的，更不用说丰富，你可以当作从零开始慢慢积累。</p>
<p>计算机并不是一门单纯地如何如何敲代码的学科，它其实更多是一门综合学科。你不用担心高中怎么偏科带来的影响，你可以先把高中带来的放到一边。</p>
<p>我个人觉得，计算机专业大一应该学习与实践结合，多用电脑，养成计算机的大局观：</p>
<div class="tabs" id="tab-分类"><ul class="nav-tabs"><li class="tab active"><a class="#分类-1">学习方面</a></li><li class="tab"><a class="#分类-2">实践方面</a></li><li class="tab"><a class="#分类-3">比赛方面</a></li></ul><div class="tab-content"><div class="tab-pane active" id="分类-1"><ul>
<li>
<p>编程语言：C语言或C++或者Python等其他语言，这是你的基本能力之一，学会一门编程语言之后便可以用计算机语言去解决一些问题。本博客也有部分编程语言的教程，可参考学习。</p>
</li>
<li>
<p>计算机导论：关于计算机的部分术语和基本内容，开始慢慢了解计算机，便于养成计算机大局观。推荐两个课程，<a class="link" href="https://www.bilibili.com/video/BV1EW411u7th/">【计算机科学速成课】40集全/精校 - Crash Course Computer Science <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，<a class="link" href="https://www.bilibili.com/video/BV1Rb411378V/?spm_id_from=333.880.my_history.page.click&amp;vd_source=2accbe36e414045d5297e94e0d032887">【哈佛】计算机科学CS50-哈佛大学 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</li>
<li>
<p>计算机组成原理：关于计算机硬件方面的知识，慢慢知道从最小的逻辑门到整个CPU的组成原理，知道计算机的运作过程。</p>
</li>
<li>
<p>计算机网络：关于网络方面的知识，慢慢知道不同设备之间的连接通信的协议。</p>
</li>
<li>
<p>数据结构：关于编程基础的知识，用于进一步处理编程问题。</p>
</li>
<li>
<p>操作系统：关于计算机硬件和软件之间的内容，慢慢建立系统观念，了解如Windows系统和Linux系统。</p>
</li>
</ul>
<p>上面的这些内容可能大一的时候还没开始学，但是个人大一学是很好的机会。通过对这些方面的了解，会更好地认识计算机这一专业甚至行业。如果跟着学习的话，知识量上、方向上会超过同龄人很多。</p>
<p>还有一些很平常，学校不会怎么教学但很重要的内容：</p>
<ul>
<li>
<p>英语能力：尤其是阅读英语文章的能力，很多先进的理念知识都是由国外引进，直接阅读原文比别人翻译后喂到嘴里的感觉不一样的。很多国内的课程都可以找找国外大学有无网课，锻炼英语的同时也学到了技术。</p>
</li>
<li>
<p>学会使用Github和Gitee：<a class="link" href="https://www.github.com">Github（国外） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>和<a class="link" href="https://www.gitee.com">Gitee（国内） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>是较为出名的代码保管仓库，简单来说就是有很多大牛在上面发布他们的代码。</p>
</li>
<li>
<p>了解编程语言到程序的过程：比如知道C语言是怎么编程可执行文件，知道一些编译的事情。</p>
</li>
<li>
<p>了解编程工具的配置使用：编程工具的使用，比如Visual Studio，Visual Studio Code、Vim等工具。</p>
</li>
<li>
<p>养成良好的代码风格习惯：比如代码的格式，何时对齐，何时缩进。</p>
</li>
<li>
<p>程序项目和文件的管理：对于电脑上的文件敏感，懂得安排位置；对于项目知道大概的方向等等。</p>
</li>
</ul></div><div class="tab-pane" id="分类-2"><ul>
<li>
<p>光有理论还不行，在以上学习之余，也建议多去做一些小东西。哪怕是很简单的程序，哪怕就是一个黑窗口，都可以试着写一遍、运行一遍。有一些很简单的问题可以写程序解决，如一元二次方程求解、斐波那契数列求解等。</p>
</li>
<li>
<p>刷题：除了学校那一点的计算机作业，刷题是提高计算机代码能力的一个不错的途径，国内比较好的刷题网站有：<a class="link" href="https://ac.nowcoder.com/">牛客竞赛 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>、<a class="link" href="https://www.luogu.com.cn/">洛谷 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>、<a class="link" href="https://leetcode.cn/problemset/all/">力扣Leetcode <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>、<a class="link" href="https://www.acwing.com/problem/">Acwing <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，在刷题的过程中不断解决问题，学习到算法，渐渐找找算法比赛的兴趣。如果实在没有算法也可以保持每日刷个一两题。</p>
</li>
</ul></div><div class="tab-pane" id="分类-3"><ul>
<li>
<p>算法比赛/程序设计比赛：实际上与算法息息相关，如果你是有兴趣、或者对数学比较热爱，建议全身投入到算法的学习上，参加几个比赛看看成效。</p>
</li>
<li>
<p>常见的算法比赛有蓝桥杯、ACM等，可以关注学校、学院发布的消息。</p>
</li>
</ul></div></div></div>
<p>其实，大学里计算机的上课并不一定重要，要学会学习，不要盲目上课。如果你觉得老师授课模糊，理解不了，根本不能学习， <strong>上课时就坐到后排，及时上网找网课补救</strong> 。学校里的课程考试，考前突击、弄懂作业，一般及格就行（如果你是希望走保研、拿奖学金的方向，那还是得花功夫把考试考好），真正重要的是你是否学习到了知识。</p>
<p>如若你在大一结束时真能了解计算机组成原理、计算机网络、数据结构和操作系统这四门课，恭喜你，这是计算机考研408的专业课，你也比其他人提前了许多，后面做项目的意识也会改变许多。如果自己很忙，大一学不了学不完也无所谓，这本来就是比别人提前的课程。</p>
<p>希望在大一里扩宽自己的认识面，找到自己的发展方向。</p>
<hr>
<p>最后，如果想和我交流，或者是想要资料，欢迎<u>QQ：1192697361</u></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>经验之谈</category>
      </categories>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>一个小巧的Markdown编辑工具</title>
    <url>/%E8%BD%AF%E4%BB%B6/tools1/</url>
    <content><![CDATA[<p>介绍一个小巧方便的编写Markdown语言工具——MarkText。</p>
<p>关键词：Markdown工具</p>
<span id="more"></span>
<hr>
<!-- toc -->
<h1>什么是Markdown</h1>
<ul>
<li>
<p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。</p>
</li>
<li>
<p>Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。</p>
</li>
<li>
<p>Markdown可用于编写记录笔记、博客、电子书等电子文档。</p>
</li>
</ul>
<h1>MarkText</h1>
<ul>
<li>MarkText是一款开源的Markdown工具，可用于编辑输出Markdown文件。本人推荐的是英文语言软件，如何汉化自行研究。</li>
</ul>
<p>软件地址：建议安装到非系统盘（非C盘）</p>
<p><a class="link" href="https://github.com/marktext/marktext/releases">MarkText下载 - 官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link" href="https://www.aliyundrive.com/s/CoADkVDj1Sq">MarkText下载 - 个人网盘（Windows64位） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<ul>
<li>MarkText具有多个明暗主题选择，软件菜单内容明确，主打轻便，是一款很不错的小工具。</li>
</ul>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/tools1_%E4%B8%BB%E7%95%8C%E9%9D%A2.jpg" alt="软件界面（明亮主题）"><figcaption>软件界面（明亮主题）</figcaption></figure></p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/tools1_%E4%B8%BB%E7%95%8C%E9%9D%A22.jpg" alt="软件界面（灰暗主题）"><figcaption>软件界面（灰暗主题）</figcaption></figure></p>
<ul>
<li>使用方法</li>
</ul>
<p>输入<code>@</code>选择插入的模块，包括段落、分割线、标题、表格、数学公式、引用块、列表等。如果本身对于Markdown语言有一定基础的话，也可直接建立该模块。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/tools1_%E4%BD%BF%E7%94%A81.jpg" alt="使用过程"><figcaption>使用过程</figcaption></figure></p>
<p>在编写完内容后，可以直接保存为Markdown文件（<code>.md</code>后缀），也可以导出为PDF文件和HTML文件。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/tools1_%E4%BF%9D%E5%AD%98.jpg" alt="选择保存"><figcaption>选择保存</figcaption></figure></p>
<h1>进阶使用</h1>
<ul>
<li>有时候对于PDF文件，会有显示目录大纲的需求，但是该软件直接导出并不能设置，此时需要借助另一个工具：wkhtmltopdf。</li>
</ul>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/tools1_%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.jpg" alt="带目录的PDF文件"><figcaption>带目录的PDF文件</figcaption></figure></p>
<ul>
<li><strong>wkhtmltopdf</strong></li>
</ul>
<p>一款<strong>将HTML文件转化为PDF文件</strong>的小工具，但是其并没有软件UI界面，对小白不友好，但是万能的网络能搜到使用方法，此处针对如何导出带目录的PDF进行介绍。</p>
<ol>
<li>下载软件</li>
</ol>
<p>下载地址：可能提示有风险，建议安装到非系统盘（非C盘）</p>
<p><a class="link" href="https://wkhtmltopdf.org/downloads.html">wkhtmltopdf下载 - 官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link" href="https://www.aliyundrive.com/s/V4SBUcntBAv">wkhtmltopdf下载 - 个人网盘（Windows64位） <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<ol start="2">
<li>安装并配置</li>
</ol>
<p>安装后，需要记住安装的具体位置，比如我是安装在D盘，位置就是<code>D:\wkhtmltopdf</code>，接着进行系统环境变量的配置。在电脑设置中搜索环境变量，打开编辑页面。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/tools1_%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.jpg" alt="配置环境变量"><figcaption>配置环境变量</figcaption></figure></p>
<p>具体步骤：编辑→新建→输入安装的位置里面的bin文件夹即<code>D:\wkhtmltopdf\bin</code>→确定所有系统设置窗口。</p>
<p>（添加错误的环境变量并不会对电脑造成严重伤害，但不要胡乱删除环境变量）</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/tools1_%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E5%90%8E.jpg" alt="配置环境变量后"><figcaption>配置环境变量后</figcaption></figure></p>
<p>再接着确认环境变量是否配置成功：按快捷键<code>win+r</code>，输入cmd，打开黑窗口，在窗口内输入<code>wkhtmltopdf -V</code>（查询wkhtmltopdf的版本），如果出现类似于版本号的数字，则说明添加环境变量成功。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/tools1_cmd.jpg" alt="配置成功"><figcaption>配置成功</figcaption></figure></p>
<ol start="3">
<li>软件使用</li>
</ol>
<p>在cmd黑窗口切换到想要HTML文件转换为PDF文件的位置，直接输入<code>F:</code>切换到不同的盘，输入<code>cd xx</code>可以进入不同文件夹。如果不知道自己是什么路径，可以先进入所在盘，再打开文件所在文件夹，在地址栏点击获得路径，然后复制粘贴到黑窗口进入。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/tools1_%E8%BF%9B%E5%85%A5%E6%96%87%E4%BB%B6%E5%A4%B9.jpg" alt="进入工作文件夹"><figcaption>进入工作文件夹</figcaption></figure></p>
<p>接着回到MarkText软件，将文件导出为HTML文件，保存在特定文件夹，该文件夹应该跟cmd黑窗口进入的文件夹一样。举例时，我将该文件保存为<code>test.html</code>文件在<code>F:\14.Books</code>文件夹。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/tools1_%E5%AF%BC%E5%87%BAHTML.jpg" alt="导出HTML"><figcaption>导出HTML</figcaption></figure></p>
<p>再回到黑窗口，使用命令<code>wkhtmltopdf 目的文件名字 新文件名字</code>转换，我这里应该是<code>wkhtmltopdf test.html test.pdf</code>。等待转换成功。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/tools1_%E8%BD%AC%E6%8D%A2%E6%88%90%E5%8A%9F.jpg" alt="转换成功"><figcaption>转换成功</figcaption></figure></p>
<p>此时回到文件夹，就可以看到转换完成的带目录的PDF文件。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/tools1_test.jpg" alt="转换成功的PDF文件"><figcaption>转换成功的PDF文件</figcaption></figure></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>Markdown工具</tag>
      </tags>
  </entry>
  <entry>
    <title>基于YOLOv5的电瓶车识别入门级项目记录</title>
    <url>/%E7%AC%94%E8%AE%B0/yolov5/</url>
    <content><![CDATA[<p>一次基于YOLOv5的深度学习项目，在GPU服务器完成模型训练，在Windows 10下进行图像识别推理（C++）。</p>
<p>关键词：深度学习、YOLOv5、C++推演、TensorRT、OpenCV</p>
<span id="more"></span>
<hr>
<!-- toc -->
<h1>零 —— 前言</h1>
<p>此篇博客是我亲手做的一次项目记录（2023.7.3~2023.7.14），在GPU服务器完成基于YOLOv5的模型训练，在Windows 10下将训练得到的权重文件作基本处理转化为.onnx文件和.engine文件分别进行C++下的推理，最后并做了简单界面，效果如下图。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/yolov5_chengguo.jpg" alt="成品展示"><figcaption>成品展示</figcaption></figure></p>
<p>本人学术不精，此篇博客可能会因为一些深度学习上的知识不熟悉而造成的表达错误，此博客只是记录此次项目过程，并尽力使其有参考性、使其可复刻。</p>
<p>项目代码放在<a class="link" href="https://gitee.com/fingsinz/ele-bicycle-detection/">码云Gitee仓库 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><br><br><br></p>
<h1>壹 —— 环境准备</h1>
<p>本项目需要的环境：</p>
<ul>
<li><u>Python环境</u>：YOLOv5所需</li>
<li><u>CUDA环境</u>：调用显卡进行显存加速</li>
<li><u>OpenCV环境</u>：进行图像处理</li>
</ul>
<p>我的环境是CUDA12.0，OpenCV4.5.2，训练所用Python3.8.10，本机Windows 10所用Python3.11.4。</p>
<p>下载安装CUDA可参考<a class="link" href="https://fingsinz.space/%E6%97%A5%E5%B8%B8/5/#more">这篇博客 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>
配置OpenCV和CUDA环境可参考<a class="link" href="https://fingsinz.space/%E6%97%A5%E5%B8%B8/9/#more">这篇博客 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p>
<p><br><br><br></p>
<h1>贰 —— 数据准备</h1>
<h2 id="2-1-数据集结构">2.1 数据集结构</h2>
<p>本项目需要的数据集（不公开）：</p>
<ul>
<li><u>校园内电瓶车463张</u>：435张用于训练，28张用于验证</li>
</ul>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/yolov5_dataset.jpg" alt="数据集文件结构"><figcaption>数据集文件结构</figcaption></figure></p>
<p>这个数量上和比例上并不良好，也没有设测试集，建议照片尽量多，并按8:1:1的比例分配在训练集、验证集和测试集。</p>
<ul>
<li>训练集：用于YOLOv5模型调试神经网络；相当于学生的课本，学生根据课本里的内容来掌握知识。</li>
<li>验证集：验证集用来查看训练效果；相当于作业，通过作业可以知道不同学生学习情况、进步的速度快慢。</li>
<li>测试集：用来测试网络的实际学习能力；相当于考试，考的题是平常都没有见过，考察学生举一反三的能力。</li>
</ul>
<p>数据集的文件结构应如下：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">dataset</span><br><span class="line">|---images</span><br><span class="line">|   |---train</span><br><span class="line">|   |---val</span><br><span class="line">|   |---test</span><br><span class="line">|---labels</span><br><span class="line">|   |---train</span><br><span class="line">|   |---val</span><br><span class="line">|   |---test</span><br></pre></td></tr></table></figure></div>
<h2 id="2-2-处理数据集">2.2 处理数据集</h2>
<p>使用<a class="link" href="https://zhuanlan.zhihu.com/p/550021453">LabelImg <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>进行对图片标记。或自行搜索使用安装教程。</p>
<p>打标签时，选择YOLO格式，生成的是.txt文件，用于模型训练。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/yolov5_labeling.jpg" alt="使用LabelImg工具对数据集进行打标签"><figcaption>使用LabelImg工具对数据集进行打标签</figcaption></figure></p>
<p>打完标签后，在labels文件夹下的train文件夹、val文件夹和test文件夹会生成一个对应images各文件夹的.txt文件，还会生成一个classes.txt文件。故labels文件夹下的各个文件夹会多一个文件。</p>
<p>最后命名此数据集为<code>eleb</code>。</p>
<p><br><br><br></p>
<h1>叁 —— 模型训练及分析</h1>
<h2 id="3-1-部署yolov5">3.1 部署YOLOv5</h2>
<p>训练模型需要在专业的GPU加速服务器上运行， <strong>请勿尝试在自己的电脑上跑模型</strong>。</p>
<p>挑选GPU服务器可参考<a class="link" href="https://fingsinz.space/%E5%85%B6%E4%BB%96%E5%88%86%E4%BA%AB/gpuserver/#more">这篇博客 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p>
<h3 id="3-1-1-使用社区镜像自动部署yolov5">3.1.1 使用社区镜像自动部署YOLOv5</h3>
<p>我使用的是AutoDL算力云，其社区镜像默认安装了YOLOv5。在算力市场中寻找合适的地区，GPU型号尽量好，按量计费租用。我此次租用的是：<u>芜湖区-RTX3090</u>，1.58r/h，跑四百多张图片估计是四个小时左右。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/yolov5_ser.jpg" alt="租用GPU服务器"><figcaption>租用GPU服务器</figcaption></figure></p>
<p>租用实例后开机，我选择JupyterLab的方式连接服务器。为了方便，我把默认的<code>yolov5</code>文件夹转到（剪贴粘贴）数据盘。有文件如下：</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/yolov5_yolov5.jpg" alt="yolov5文件夹"><figcaption>yolov5文件夹</figcaption></figure></p>
<h3 id="3-1-2-手动部署yolov5">3.1.2 手动部署YOLOv5</h3>
<p>建议租用Ubuntu系统，在有Python、Git等环境下，服务器新建文件夹，使用git命令克隆<a class="link" href="https://github.com/ultralytics/yolov5">YOLOv5仓库 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>或者网页下载压缩包解压部署。如果有缺少的库可以<code>pip install</code>安装。</p>
<div class="highlight-container" data-rel="Cmd"><figure class="iseeu highlight cmd"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/ultralytics/yolov5.git</span><br></pre></td></tr></table></figure></div>
<p>至此YOLOv5部署完毕。</p>
<h2 id="3-2-上传数据">3.2 上传数据</h2>
<p>将我们准备好的数据集压缩成.zip压缩文件，上传到<code>yolov5/data/eleb</code>（数据集根目录，新建文件夹eleb），由于文件比较大，上传速度也比较慢，比较费时间，也可以在服务器上创建文件夹后多选文件上传。</p>
<p>在终端上进入<code>yolov5/data</code>运行下面的指令：</p>
<div class="highlight-container" data-rel="Cmd"><figure class="iseeu highlight cmd"><table><tr><td class="code"><pre><span class="line">unzip xx.zip</span><br></pre></td></tr></table></figure></div>
<p>如果提示有包没下载就去下载。</p>
<p>解压后，复制data文件夹下的<code>coco.yaml</code>，并命名为数据集的名字。在上面我将数据集名字命名为<code>eleb</code>，故复制并命名为<code>eleb.yaml</code>。</p>
<p>将eleb.yaml编辑如下：</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 训练集、验证集、测试集路径设置</span></span><br><span class="line"><span class="attr">path:</span> <span class="string">./data/eleb</span>    <span class="comment"># 数据集根目录</span></span><br><span class="line"><span class="attr">train:</span> <span class="string">images/train</span>  <span class="comment"># 训练集目录</span></span><br><span class="line"><span class="attr">val:</span> <span class="string">images/val</span>      <span class="comment"># 验证集目录</span></span><br><span class="line"><span class="attr">test:</span>                <span class="comment"># 测试集目录，此处没设立</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 标签的类，此项目只有一个类</span></span><br><span class="line"><span class="attr">names:</span></span><br><span class="line">  <span class="attr">0:</span> <span class="string">elebike</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Download script/URL (optional) 不管，默认</span></span><br><span class="line"><span class="attr">download:</span> <span class="comment">#https://ultralytics.com/assets/coco128-seg.zip</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<h2 id="3-3-配置训练参数">3.3 配置训练参数</h2>
<h3 id="3-3-1-修改train-py文件">3.3.1 修改train.py文件</h3>
<p><strong>回到<code>yolov5/</code>目录，找到<code>train.py</code>文件打开，找到<code>parse_opt()</code>函数，更改部分参数：</strong></p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ……</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># model.yaml是模型配置文件，在文件夹yolov5/models中，此处我使用yolov5l.yaml</span></span><br><span class="line">parser.add_argument(<span class="string">&#x27;--cfg&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, default=<span class="string">&#x27;&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;yolov5l.yaml path&#x27;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 配置数据集的yaml文件，即eleb.yaml</span></span><br><span class="line">parser.add_argument(<span class="string">&#x27;--data&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, default=ROOT / <span class="string">&#x27;data/eleb.yaml&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;dataset.yaml path&#x27;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 配置训练轮数，默认300轮</span></span><br><span class="line">parser.add_argument(<span class="string">&#x27;--epochs&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">300</span>, <span class="built_in">help</span>=<span class="string">&#x27;total training epochs&#x27;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 配置训练时所有GPU的总批量大小，为-1则自动</span></span><br><span class="line">parser.add_argument(<span class="string">&#x27;--batch-size&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">16</span>, <span class="built_in">help</span>=<span class="string">&#x27;所有GPU的总批量大小, -1 for autobatch&#x27;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 配置训练输入的照片大小，默认为640 × 640</span></span><br><span class="line">parser.add_argument(<span class="string">&#x27;--imgsz&#x27;</span>, <span class="string">&#x27;--img&#x27;</span>, <span class="string">&#x27;--img-size&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">640</span>, <span class="built_in">help</span>=<span class="string">&#x27;train, val image size (pixels)&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下面保持默认即可</span></span><br><span class="line">	</span><br><span class="line"><span class="comment"># ……</span></span><br></pre></td></tr></table></figure></div>
<h3 id="3-3-2-修改val-py文件">3.3.2 修改val.py文件</h3>
<p><strong>回到<code>yolov5/</code>目录，找到<code>val.py</code>文件打开，找到<code>parse_opt()</code>函数，更改部分参数：</strong></p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ……</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置数据集的yaml文件，即eleb.yaml</span></span><br><span class="line">parser.add_argument(<span class="string">&#x27;--data&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, default=ROOT / <span class="string">&#x27;data/eleb.yaml&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;dataset.yaml path&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ……</span></span><br></pre></td></tr></table></figure></div>
<h3 id="3-3-3-修改模型配置">3.3.3 修改模型配置</h3>
<p><strong>（3）进入<code>yolov5/models/</code>目录，找到<code>train.py</code>设置的模型配置.yaml文件，我这里使用的是yolov5l模型，打开yolov5l.yaml，修改<code>nc</code>（分类数），此项目修改为1：</strong></p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ……</span></span><br><span class="line"><span class="attr">nc:</span> <span class="number">1</span>  <span class="comment"># number of classes</span></span><br><span class="line"><span class="attr">depth_multiple:</span> <span class="number">1.0</span>  <span class="comment"># model depth multiple</span></span><br><span class="line"><span class="attr">width_multiple:</span> <span class="number">1.0</span>  <span class="comment"># layer channel multiple</span></span><br><span class="line"><span class="attr">anchors:</span></span><br><span class="line">  <span class="bullet">-</span> [<span class="number">10</span>,<span class="number">13</span>, <span class="number">16</span>,<span class="number">30</span>, <span class="number">33</span>,<span class="number">23</span>]  <span class="comment"># P3/8</span></span><br><span class="line">  <span class="bullet">-</span> [<span class="number">30</span>,<span class="number">61</span>, <span class="number">62</span>,<span class="number">45</span>, <span class="number">59</span>,<span class="number">119</span>]  <span class="comment"># P4/16</span></span><br><span class="line">  <span class="bullet">-</span> [<span class="number">116</span>,<span class="number">90</span>, <span class="number">156</span>,<span class="number">198</span>, <span class="number">373</span>,<span class="number">326</span>]  <span class="comment"># P5/32</span></span><br><span class="line"><span class="comment"># ……</span></span><br></pre></td></tr></table></figure></div>
<p>至此训练参数配置完毕。</p>
<p>启动终端，进入yolov5文件夹，我这里是进入<code>autodl-tmp/yolov5/</code>，输入命令启动训练：</p>
<div class="highlight-container" data-rel="Cmd"><figure class="iseeu highlight cmd"><table><tr><td class="code"><pre><span class="line">python train.py</span><br></pre></td></tr></table></figure></div>
<p>如下图即开始训练</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/yolov5_train2.jpg" alt="训练开始"><figcaption>训练开始</figcaption></figure></p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/yolov5_train.jpg" alt="训练结束"><figcaption>训练结束</figcaption></figure></p>
<h2 id="3-4-训练可能出现的问题">3.4 训练可能出现的问题</h2>
<p>如果出现训练过程长时间的<code>R</code>和<code>P</code>值为<code>0</code>或者<code>val/box_loss</code>和<code>val/obj_loss</code>为<code>nan</code>的情况，参考<a class="link" href="https://blog.csdn.net/weixin_55249340/article/details/125855686">此篇博客 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p>
<p>如果仍不能解决，可以考虑重新手动部署YOLOv5，接着修改参数运行train.py启动训练，如果缺少库就pip install安装。</p>
<h2 id="3-5-训练结果分析">3.5 训练结果分析</h2>
<p>等待训练结束，在 <code>yolov5/runs/train</code> 文件夹就存放在训练的数据，其中weights文件夹中还存放着此次训练的权重文件，用于后续推理。</p>
<h3 id="3-5-1-保存训练结果">3.5.1 保存训练结果</h3>
<p>在训练结果文件夹（我的是<code>runs/train/exp2</code>）中新建.py文件，输入下面代码，接着使用终端进入<code>runs/train/exp2</code>，使用命令<code>python save.py</code>可以变成压缩包，下载压缩包即下载全部训练结果。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># save.py</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> tarfile</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">recursive_files</span>(<span class="params">dir_name=<span class="string">&#x27;.&#x27;</span>, ignore=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">for</span> dir_name,subdirs,files <span class="keyword">in</span> os.walk(dir_name):</span><br><span class="line">        <span class="keyword">if</span> ignore <span class="keyword">and</span> os.path.basename(dir_name) <span class="keyword">in</span> ignore: </span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> file_name <span class="keyword">in</span> files:</span><br><span class="line">            <span class="keyword">if</span> ignore <span class="keyword">and</span> file_name <span class="keyword">in</span> ignore:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">yield</span> os.path.join(dir_name, file_name)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">make_tar_file</span>(<span class="params">dir_name=<span class="string">&#x27;.&#x27;</span>, tar_file_name=<span class="string">&#x27;tarfile.tar&#x27;</span>, ignore=<span class="literal">None</span></span>):</span><br><span class="line">    tar = tarfile.<span class="built_in">open</span>(tar_file_name, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> file_name <span class="keyword">in</span> recursive_files(dir_name, ignore):</span><br><span class="line">        tar.add(file_name)</span><br><span class="line"></span><br><span class="line">    tar.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dir_name = <span class="string">&#x27;.&#x27;</span></span><br><span class="line">tar_file_name = <span class="string">&#x27;train.tar&#x27;</span></span><br><span class="line">ignore = &#123;<span class="string">&#x27;.ipynb_checkpoints&#x27;</span>, <span class="string">&#x27;__pycache__&#x27;</span>, tar_file_name&#125;</span><br><span class="line">make_tar_file(dir_name, tar_file_name, ignore)</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>将训练结果下载到电脑上，解压有如下文件：</p>
<p><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/yolov5_results.jpg" alt></p>
<h3 id="3-5-2-曲线类分析">3.5.2 曲线类分析</h3>
<ul>
<li>P_curve：准确率Precision和置信度Confidence的关系图，当设置某置信度时对应某个类别的识别准确率。随着置信度设置越高，某个类别识别准确率越高。</li>
</ul>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/yolov5_P_curve.png" alt="P曲线"><figcaption>P曲线</figcaption></figure></p>
<ul>
<li>R_curve：召回率Recall和置信度Confidence的关系图，当设置某置信度时对应某个类别的查找完全的概率。随着置信度设置越高，某个类别能被查找完全的概率越低。</li>
</ul>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/yolov5_R_curve.png" alt="R曲线"><figcaption>R曲线</figcaption></figure></p>
<ul>
<li>PR_cruve：准确率Precision和召回率Recall的关系图，尽可能希望准确率高的同时召回率也高，即曲线与坐标轴围成的面积越大，模型越好。</li>
</ul>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/yolov5_PR_curve.png" alt="PR曲线"><figcaption>PR曲线</figcaption></figure></p>
<ul>
<li>F1_curve：精确率和召回率的调和平均数，某个分类对应F1的值，1为最好，0为最差。</li>
</ul>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/yolov5_F1_curve.png" alt="F1曲线"><figcaption>F1曲线</figcaption></figure></p>
<h3 id="3-5-3-混淆矩阵分析">3.5.3 混淆矩阵分析</h3>
<ul>
<li>confusion_matrix：矩阵的每一列代表一个类的实例预测，而每一行表示一个实际的类的实例，可以方便地看出机器是否将两个不同的类混淆。</li>
</ul>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/yolov5_confusion_matrix.png" alt="混淆矩阵"><figcaption>混淆矩阵</figcaption></figure></p>
<h3 id="3-5-4-标签相关分析">3.5.4 标签相关分析</h3>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/yolov5_labels.jpg" alt="标签相关labels.jpg"><figcaption>标签相关labels.jpg</figcaption></figure></p>
<ul>
<li>左上角为训练集的数据量；</li>
<li>右上角是框的尺寸和数量；</li>
<li>左下角是打标签目标框中心点位置，由图可知中心点多为中心偏上。</li>
<li>右下角是打标签目标框的高和宽，由图可知多聚集在0.2×0.2</li>
</ul>
<h3 id="3-5-5-训练验证结果分析">3.5.5 训练验证结果分析</h3>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/yolov5_results.png" alt="results.png"><figcaption>results.png</figcaption></figure></p>
<p>前面加<code>train</code>为训练集的情况，加<code>val</code>表示验证集的情况。</p>
<ul>
<li>
<p>定位损失box_loss：预测框与标定框之间的误差。</p>
</li>
<li>
<p>置信度损失obj_loss：计算网络的置信度。</p>
</li>
<li>
<p>分类损失cls_loss：计算锚框与对应标定分类是否正确。</p>
</li>
<li>
<p>precision：模型精度。</p>
</li>
<li>
<p>recall：真实为positive的准确率，即正样本有多少被找出来了。</p>
</li>
<li>
<p>mAP：Mean Average Precision，均值平均精度，mAP_0.5表示阈值大于0.5的平均mAP。</p>
</li>
<li>
<p>mAP_0.5:0.95：表示不同<a class="link" href="https://blog.csdn.net/gaoyu1253401563/article/details/86484851">IoU <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>阈值（从0.5到0.95，步长0.05）上的平均mAP。</p>
</li>
</ul>
<h3 id="3-5-6-其余分析">3.5.6 其余分析</h3>
<ul>
<li>
<p><code>train_batch</code>、 <code>val_batch</code>表示一批次读取的照片数。</p>
</li>
<li>
<p><code>results.csv</code>存放着每轮训练的数据。</p>
</li>
</ul>
<p><br><br><br></p>
<h1>肆 —— 模型转化处理（基于.onnx文件推理）</h1>
<h2 id="4-1-转化为-onnx文件">4.1 转化为.onnx文件</h2>
<p>将我们的.pt文件经过服务器上YOLOv5自带的<code>export.py</code>处理后即可得到.onnx文件。即下面的命令格式：</p>
<div class="highlight-container" data-rel="Cmd"><figure class="iseeu highlight cmd"><table><tr><td class="code"><pre><span class="line">python export.py --weights yolov5s.pt --include onnx</span><br></pre></td></tr></table></figure></div>
<p>我输入的是（位于yolov5文件夹）：</p>
<div class="highlight-container" data-rel="Cmd"><figure class="iseeu highlight cmd"><table><tr><td class="code"><pre><span class="line">python export.py --weights runs/train/exp2/weights/best.pt --include onnx</span><br></pre></td></tr></table></figure></div>
<h2 id="4-2-通过c-利用-onnx文件进行推理识别">4.2 通过C++利用.onnx文件进行推理识别</h2>
<h3 id="4-2-1-记录处理的数据结构">4.2.1 记录处理的数据结构</h3>
<p>将置信度阈值<code>confThreshold</code>、NMS非极大值抑制阈值<code>nmsThreshold</code>、目标置信度阈值<code>objThreshold</code>和识别模型路径<code>modelpath</code>打包成结构体，用于识别时参数的配置。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 自定义配置结构</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Configuration</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="type">float</span> confThreshold; <span class="comment">// Confidence threshold</span></span><br><span class="line">	<span class="type">float</span> nmsThreshold;  <span class="comment">// Non-maximum suppression threshold</span></span><br><span class="line">	<span class="type">float</span> objThreshold;  <span class="comment">// Object Confidence threshold</span></span><br><span class="line">	string modelpath;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div>
<p>创建<code>YOLOv5</code>类，其成员变量有置信度阈值<code>confThreshold</code>、NMS非极大值抑制阈值<code>nmsThreshold</code>、目标置信度阈值<code>objThreshold</code>，以及输入图片宽度<code>inpWidth</code>、输入图片高度<code>inpHeight</code>两个照片参数，识别种类数<code>num_classes</code>，类名<code>classes</code>；</p>
<p>主要函数为检测函数<code>detect</code>，辅助函数为预测画框函数<code>drawPred</code>和调整图片大小函数<code>resize_image</code>。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 模型</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">YOLOv5</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="comment">// 初始化</span></span><br><span class="line">	<span class="built_in">YOLOv5</span>(Configuration config, <span class="type">bool</span> isCuda);</span><br><span class="line">	<span class="function"><span class="type">void</span> <span class="title">detect</span><span class="params">(Mat &amp;frame)</span></span>;  <span class="comment">// 检测函数</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="type">float</span> confThreshold;</span><br><span class="line">	<span class="type">float</span> nmsThreshold;</span><br><span class="line">	<span class="type">float</span> objThreshold;</span><br><span class="line">	<span class="type">int</span> inpWidth;</span><br><span class="line">	<span class="type">int</span> inpHeight;</span><br><span class="line">	<span class="type">int</span> num_classes;</span><br><span class="line">	string classes[<span class="number">1</span>] = &#123; <span class="string">&quot;eleb&quot;</span> &#125;;</span><br><span class="line">	<span class="comment">//vector&lt;string&gt; class_names;</span></span><br><span class="line">	<span class="type">const</span> <span class="type">bool</span> keep_ratio = <span class="literal">true</span>;</span><br><span class="line">	Net net;   <span class="comment">// dnn里的</span></span><br><span class="line">	<span class="function"><span class="type">void</span> <span class="title">drawPred</span><span class="params">(<span class="type">float</span> conf, <span class="type">int</span> left, <span class="type">int</span> top, <span class="type">int</span> right, <span class="type">int</span> bottom, Mat &amp;frame, <span class="type">int</span> classid)</span></span>;</span><br><span class="line">	<span class="function">Mat <span class="title">resize_image</span><span class="params">(Mat srcimg, <span class="type">int</span> *newh, <span class="type">int</span> *neww, <span class="type">int</span> *top, <span class="type">int</span> *left)</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div>
<h3 id="4-2-2-检测识别函数">4.2.2 检测识别函数</h3>
<ol>
<li>进行预处理：对输入图像（帧）进行大小调整和归一化处理，以便为模型做准备。调整后的图像会被转换为Blob，一个具有NCHW 维度（图像数、通道数、高度、宽度）的 4D 矩阵。</li>
</ol>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">Mat dstimg = <span class="keyword">this</span>-&gt;<span class="built_in">resize_image</span>(frame, &amp;newh, &amp;neww, &amp;padh, &amp;padw);</span><br><span class="line">Mat blob = <span class="built_in">blobFromImage</span>(dstimg, <span class="number">1</span> / <span class="number">255.0</span>, <span class="built_in">Size</span>(<span class="keyword">this</span>-&gt;inpWidth, <span class="keyword">this</span>-&gt;inpHeight), <span class="built_in">Scalar</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="literal">true</span>, <span class="literal">false</span>);</span><br><span class="line"><span class="keyword">this</span>-&gt;net.<span class="built_in">setInput</span>(blob);</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>模型推理：在Blob上运行模型以获得输出，即边界框和类别概率列表。</li>
</ol>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">vector&lt;Mat&gt; outs;</span><br><span class="line"><span class="keyword">this</span>-&gt;net.forward(outs, <span class="keyword">this</span>-&gt;net.<span class="built_in">getUnconnectedOutLayersNames</span>());</span><br></pre></td></tr></table></figure></div>
<ol start="3">
<li>进行后处理：如果输出超过2维，则会对其进行重塑。对于每个边界框，它会检查对象的置信度是否高于阈值。计算最大类得分，同时检查其是否高于置信度阈值。如果超过了，就会保存边界框、置信度和类ID。</li>
</ol>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; num_proposal; ++i) </span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">if</span> (obj_conf &gt; <span class="keyword">this</span>-&gt;objThreshold)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">        <span class="keyword">if</span> (max_class_socre &gt; <span class="keyword">this</span>-&gt;confThreshold)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// ...</span></span><br><span class="line">            confidences.<span class="built_in">push_back</span>((<span class="type">float</span>) max_class_socre);</span><br><span class="line">            boxes.<span class="built_in">push_back</span>(<span class="built_in">Rect</span>(left, top, (<span class="type">int</span>) (w * ratiow), (<span class="type">int</span>) (h * ratioh)));</span><br><span class="line">            classIds.<span class="built_in">push_back</span>(class_idx);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<ol start="4">
<li>非最大值抑制 (NMS)：NMS用于移除重叠的边界框。剩余的边界框在原始图像上绘制。</li>
</ol>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">vector&lt;<span class="type">int</span>&gt; indices;</span><br><span class="line">dnn::<span class="built_in">NMSBoxes</span>(boxes, confidences, <span class="keyword">this</span>-&gt;confThreshold, <span class="keyword">this</span>-&gt;nmsThreshold, indices);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; indices.<span class="built_in">size</span>(); ++i)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">drawPred</span>(confidences[idx], box.x, box.y, box.x + box.width, box.y + box.height, frame, classIds[idx]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h3 id="4-2-3-预测画框函数">4.2.3 预测画框函数</h3>
<p>预测画框函数用于将预测函数所得到的目标区域，经OpenCV的工具在图片上绘制出方框。首先传入的参数有置信度，图片的四个角落点，Mat类型图片和类id，接着借助OpenCV的<code>rectangle</code>函数和<code>putText</code>函数绘制。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 绘制预测目标的边界框</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">YOLOv5::drawPred</span><span class="params">(<span class="type">float</span> conf, <span class="type">int</span> left, <span class="type">int</span> top, <span class="type">int</span> right, <span class="type">int</span> bottom, Mat &amp;frame, <span class="type">int</span> classid)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">// 绘制一个显示边界框的矩形</span></span><br><span class="line">	<span class="built_in">rectangle</span>(frame, <span class="built_in">Point</span>(left, top), <span class="built_in">Point</span>(right, bottom), <span class="built_in">Scalar</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 得到目标的类名和置信度</span></span><br><span class="line">	string label = cv::format(<span class="string">&quot;%.2f&quot;</span>, conf);</span><br><span class="line">	label = <span class="keyword">this</span>-&gt;classes[classid] + <span class="string">&quot;:&quot;</span> + label;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 绘制目标的类名和置信度文本</span></span><br><span class="line">	<span class="type">int</span> baseLine;</span><br><span class="line">	Size labelSize = <span class="built_in">getTextSize</span>(label, FONT_HERSHEY_SIMPLEX, <span class="number">0.5</span>, <span class="number">1</span>, &amp;baseLine);</span><br><span class="line">	top = <span class="built_in">max</span>(top, labelSize.height);</span><br><span class="line">	<span class="built_in">putText</span>(frame, label, <span class="built_in">Point</span>(left, top), FONT_HERSHEY_SIMPLEX, <span class="number">0.75</span>, <span class="built_in">Scalar</span>(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h3 id="4-2-4-主函数">4.2.4 主函数</h3>
<p>本程序通过<code>main</code>函数的参数进行传参。如C/C++语言语法， <code>argc</code> 是argument count的缩写，表示传入main函数中的参数个数，包括这个程序本身； <code>argv</code> 是 argument vector的缩写，表示传入 <code>main</code> 函数中的参数列表，其中 <code>argv[0]</code> 表示这个程序的名字。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//yolov5-onnx.cpp</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (argc != <span class="number">3</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		std::cout &lt;&lt; <span class="string">&quot;Run like this:\n    &quot;</span> &lt;&lt; argv[<span class="number">0</span>] &lt;&lt; <span class="string">&quot; yolov5s.onnx input.jpg&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	Configuration yolo_nets = &#123; <span class="number">0.3</span>, <span class="number">0.5</span>, <span class="number">0.3</span>, argv[<span class="number">1</span>] &#125;; <span class="comment">// 初始化数据</span></span><br><span class="line">	<span class="function">YOLOv5 <span class="title">yolo_model</span><span class="params">(yolo_nets, <span class="literal">false</span>)</span></span>;</span><br><span class="line">	Mat srcimg = <span class="built_in">imread</span>(argv[<span class="number">2</span>]);  <span class="comment">// 读入图片</span></span><br><span class="line">	yolo_model.<span class="built_in">detect</span>(srcimg);     <span class="comment">// 进行推理</span></span><br><span class="line">	<span class="built_in">imwrite</span>(<span class="string">&quot;result.jpg&quot;</span>, srcimg); <span class="comment">// 输出图片</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>所以当调用该程序时，只需在命令提示符的当前目录下，输入指令格式：</p>
<div class="highlight-container" data-rel="Cmd"><figure class="iseeu highlight cmd"><table><tr><td class="code"><pre><span class="line">yolov5-onnx.exe best.onnx input.jpg</span><br></pre></td></tr></table></figure></div>
<p><br><br><br></p>
<h1>伍 —— 模型转化加速处理（基于.engine文件推理）</h1>
<h2 id="5-1-转化为-engine文件">5.1 转化为.engine文件</h2>
<h3 id="5-1-1-通过yolov5自带的export-py转换">5.1.1 通过YOLOv5自带的export.py转换</h3>
<p>将我们的.pt文件经过服务器上YOLOv5自带的<code>export.py</code>处理后即可得到.engine文件（可能会自动下载TensorRT）。即下面的命令格式：</p>
<div class="highlight-container" data-rel="Cmd"><figure class="iseeu highlight cmd"><table><tr><td class="code"><pre><span class="line">python export.py --weights yolov5s.pt --include engine</span><br></pre></td></tr></table></figure></div>
<p>我输入的是（位于yolov5文件夹）：</p>
<div class="highlight-container" data-rel="Cmd"><figure class="iseeu highlight cmd"><table><tr><td class="code"><pre><span class="line">python export.py --weights runs/train/exp2/weights/best.pt --include engine</span><br></pre></td></tr></table></figure></div>
<h3 id="5-1-2-通过自己下载安装的tensorrt转换">5.1.2 通过自己下载安装的TensorRT转换</h3>
<p>在<a class="link" href="https://fingsinz.space/%E6%97%A5%E5%B8%B8/5/#more">安装TensorRT <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>后，在TensorRT文件夹下有一个名为 <code>bin</code> 的文件夹，里面存在一个<code>trtexec.exe</code>文件。可以通过这个文件进行文件转换。在 <code>bin</code> 目录启动命令提示符，命令格式如下：</p>
<div class="highlight-container" data-rel="Cmd"><figure class="iseeu highlight cmd"><table><tr><td class="code"><pre><span class="line">trtexec --onnx=best.onnx --saveEngine=best.engine</span><br></pre></td></tr></table></figure></div>
<h2 id="5-2-通过c-利用-engine文件进行推理识别">5.2 通过C++利用.engine文件进行推理识别</h2>
<h3 id="5-2-1-记录识别结果的数据结构">5.2.1 记录识别结果的数据结构</h3>
<p>一个记录识别结果的结构体，包括检测物体置信度 <code>score</code>，目标预测框 <code>box</code> 和类ID <code>class_id</code> 。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Result</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">float</span> score;</span><br><span class="line">	cv::Rect box;</span><br><span class="line">	<span class="type">int</span> class_id;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div>
<h3 id="5-2-2-日志模块">5.2.2 日志模块</h3>
<p>在构建TensorRT Runtime时需要作为参数传入。日志模块必须继承自<code>nvinfer1::ILogger</code>类。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// TensorRT需要日志</span></span><br><span class="line"><span class="comment">// 参考: https://github.com/cyrusbehr/tensorrt-cpp-api</span></span><br><span class="line"><span class="keyword">using</span> Severity = nvinfer1::ILogger::Severity;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Logger</span> : <span class="keyword">public</span> nvinfer1::ILogger</span><br><span class="line">&#123;</span><br><span class="line">	<span class="function"><span class="type">void</span> <span class="title">log</span><span class="params">(Severity severity, <span class="type">const</span> <span class="type">char</span> *msg)</span> <span class="keyword">noexcept</span> <span class="keyword">override</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Logger::log</span><span class="params">(Severity severity, <span class="type">const</span> <span class="type">char</span> *msg)</span> <span class="keyword">noexcept</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (severity &lt;= Severity::kWARNING)</span><br><span class="line">	&#123;</span><br><span class="line">		std::cout &lt;&lt; msg &lt;&lt; std::endl;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Logger logger;</span><br></pre></td></tr></table></figure></div>
<h3 id="5-2-3-计算内存大小模块">5.2.3 计算内存大小模块</h3>
<p>一个计算内存大小的辅助函数。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">size_t</span> <span class="title">get_memory_size</span><span class="params">(<span class="type">const</span> nvinfer1::Dims &amp;dims, <span class="type">const</span> <span class="type">int32_t</span> elem_size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> std::<span class="built_in">accumulate</span>(dims.d, dims.d + dims.nbDims, <span class="number">1</span>, std::<span class="built_in">multiplies</span>&lt;<span class="type">int64_t</span>&gt;()) * <span class="built_in">static_cast</span>&lt;<span class="type">size_t</span>&gt;(elem_size);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h3 id="5-2-4-检测识别模块">5.2.4 检测识别模块</h3>
<p>基于.engine文件的推理识别涉及到显卡的调用，故需用到CUDA的Context。</p>
<p>CUDA的Context是由CUDA驱动程序创建的数据结构，包含执行CUDA操作所需的所有信息，如设备代码、数据以及线程、内存和硬件设置等资源。每个线程都有一个当前Context，该线程上的所有CUDA操作都在该Context中执行。</p>
<ol>
<li>初始化YOLOv5模型</li>
</ol>
<ul>
<li>首先从<code>engine_file_path</code>指定的文件中加载TensorRT引擎。</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 读取TensorRT引擎</span></span><br><span class="line"><span class="function">std::ifstream <span class="title">engine_file</span><span class="params">(engine_file_path, std::ios::binary)</span></span>;</span><br><span class="line"><span class="keyword">if</span> (engine_file.<span class="built_in">fail</span>())</span><br><span class="line">&#123;</span><br><span class="line">	std::cout &lt;&lt; <span class="string">&quot;Failed to read model file.&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line">engine_file.<span class="built_in">seekg</span>(<span class="number">0</span>, std::ifstream::end);</span><br><span class="line"><span class="keyword">auto</span> fsize = engine_file.<span class="built_in">tellg</span>();</span><br><span class="line">engine_file.<span class="built_in">seekg</span>(<span class="number">0</span>, std::ifstream::beg);</span><br><span class="line"><span class="function">std::vector&lt;<span class="type">char</span>&gt; <span class="title">engineData</span><span class="params">(fsize)</span></span>;</span><br><span class="line">engine_file.<span class="built_in">read</span>(engineData.<span class="built_in">data</span>(), fsize);</span><br></pre></td></tr></table></figure></div>
<ul>
<li>其次，推演运行时 <code>nvinfer1::IRuntime</code> 是一切资源的源头，是第一个需要被初始化的对象，注意运行时的初始化需要将辅助模块中定义好的 <code>logger</code> 作为传入参数。同时这段代码使用 <code>unique_ptr</code> 来跟踪初始化后的运行时对象。引擎 <code>nvinfer1::ICudaEngine</code> 存储了模型的权重参数，它的初始化分2步：首先将模型文件读入内存，然后使用运行时的 <code>deserializeCudaEngine</code> 方法初始化引擎对象。</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 初始化IRuntime和ICudaEngine</span></span><br><span class="line">std::unique_ptr&lt;nvinfer1::IRuntime&gt; runtime&#123; nvinfer1::<span class="built_in">createInferRuntime</span>(logger) &#125;;</span><br><span class="line">std::unique_ptr&lt;nvinfer1::ICudaEngine&gt; mEngine&#123; runtime-&gt;<span class="built_in">deserializeCudaEngine</span>(engineData.<span class="built_in">data</span>(), fsize) &#125;;</span><br><span class="line"><span class="keyword">if</span> (mEngine.<span class="built_in">get</span>() == <span class="literal">nullptr</span>)</span><br><span class="line">&#123;</span><br><span class="line">	std::cout &lt;&lt; <span class="string">&quot;Failed to deserialize CUDA engine.&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>最后创建CUDA的context，并为输入和输出绑定分配CUDA内存。引擎的本质是专为TensorRT优化后的模型。可使用<code>createExecutionContext</code> 方法来构建推演环境 <code>nvinfer1::IExecutionContext</code> 。</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">std::unique_ptr&lt;nvinfer1::IExecutionContext&gt; context&#123; mEngine-&gt;<span class="built_in">createExecutionContext</span>() &#125;;</span><br><span class="line"><span class="keyword">if</span> (context.<span class="built_in">get</span>() == <span class="literal">nullptr</span>)</span><br><span class="line">&#123;</span><br><span class="line">	std::cout &lt;&lt; <span class="string">&quot;Failed to create CUDA context.&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<ol start="2">
<li>准备模型输入</li>
</ol>
<ul>
<li>了解模型结构，通过<a class="link" href="https://netron.app">netron.app <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>输入.onnx文件查看自己的神经网络结构。我这里输入名字为 <code>images</code> ，尺寸为3×640×640；输出名字为 <code>output0</code> ，尺寸为1×25200×6。</li>
</ul>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/yolov5_model.jpg" alt="模型结构"><figcaption>模型结构</figcaption></figure></p>
<ul>
<li>TensorRT的模型推演在GPU上进行，需要在显存上为用于计算的数据申请空间。输入尺寸为3×640×640，使用内存大小计算函数得到显存中应当开辟的空间大小，然后使用 <code>cudaMalloc</code> 申请显存。其中 <code>cuda_mem_input</code> 为指向该显存区域的指针。为了方便后续推演，这里使用一个指针数组 <code>bindings</code> 记录下与推演有关的内存区域。</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 记录与推演相关的内存区域</span></span><br><span class="line"><span class="type">void</span> *bindings[<span class="number">5</span>];</span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *input_name = <span class="string">&quot;images&quot;</span>;</span><br><span class="line"><span class="type">int32_t</span> input_idx = mEngine-&gt;<span class="built_in">getBindingIndex</span>(input_name);</span><br><span class="line"><span class="keyword">if</span> (input_idx == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">	std::cout &lt;&lt; <span class="string">&quot;ERROR: failed to get input by name: &quot;</span> &lt;&lt; input_name &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 计算显存大小并开辟</span></span><br><span class="line"><span class="type">int32_t</span> channels = <span class="number">3</span>, height = <span class="number">640</span>, width = <span class="number">640</span>;</span><br><span class="line">nvinfer1::Dims4 input_dims &#123; <span class="number">1</span>, channels, height, width &#125;;</span><br><span class="line"><span class="type">size_t</span> input_mem_size = <span class="built_in">get_memory_size</span>(input_dims, <span class="built_in">sizeof</span>(<span class="type">float</span>));</span><br><span class="line"><span class="type">void</span>* cuda_mem_input &#123; <span class="literal">nullptr</span> &#125;;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">cudaMalloc</span>(&amp;cuda_mem_input, input_mem_size) != cudaSuccess) </span><br><span class="line">&#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;ERROR: input cuda memory allocation failed, size = &quot;</span> &lt;&lt; input_mem_size &lt;&lt; <span class="string">&quot; bytes&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bindings[<span class="number">0</span>] = cuda_mem_input;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>同时还需为输出区域计算并开辟内存。模型的输出包含一个或多个对象，必须为每个输出对象分配独立的显存区域。在循环体中，首先通过 <code>getBindingDimensions</code> 获得输出每个对象的维度，然后计算其占据的显存区域大小，并调用 <code>cudaMalloc</code> 函数分配显存，最后将指向该存储区域的指针存入之前创建好的 <code>bindings</code> 。</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">std::vector&lt;std::string&gt; output_node_names&#123; <span class="string">&quot;output0&quot;</span> &#125;;</span><br><span class="line">std::vector&lt;<span class="type">size_t</span>&gt; output_mem_sizes;</span><br><span class="line"><span class="type">bool</span> output_mem_initialized = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; output_node_names.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int32_t</span> output_idx = mEngine-&gt;<span class="built_in">getBindingIndex</span>(output_node_names[i].<span class="built_in">c_str</span>());</span><br><span class="line">	<span class="keyword">if</span> (output_idx == <span class="number">-1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		std::cout &lt;&lt; <span class="string">&quot;ERROR: failed to get output by name: &quot;</span> &lt;&lt; output_node_names[i] &lt;&lt; std::endl;</span><br><span class="line">		output_mem_initialized = <span class="literal">false</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">auto</span> output_dims = context-&gt;<span class="built_in">getBindingDimensions</span>(output_idx);</span><br><span class="line">	<span class="keyword">auto</span> output_size = <span class="built_in">get_memory_size</span>(output_dims, <span class="built_in">sizeof</span>(<span class="type">float</span>));</span><br><span class="line">	output_mem_sizes.<span class="built_in">push_back</span>(output_size);</span><br><span class="line">	<span class="type">void</span> *cuda_mem_output&#123; <span class="literal">nullptr</span> &#125;;</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">cudaMalloc</span>(&amp;cuda_mem_output, output_size) != cudaSuccess)</span><br><span class="line">	&#123;</span><br><span class="line">		std::cout &lt;&lt; <span class="string">&quot;ERROR: output cuda memory allocation failed, size = &quot;</span> &lt;&lt; output_size &lt;&lt; <span class="string">&quot; bytes&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">		output_mem_initialized = <span class="literal">false</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		bindings[<span class="number">1</span> + i] = cuda_mem_output;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>显存空间初始化完成后，还需要初始化最后一个对象 <code>cudaStream</code> 。它用来在异步操作中同步结果。</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">cudaStream_t stream&#123; <span class="literal">nullptr</span> &#125;;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">cudaStreamCreate</span>(&amp;stream) != cudaSuccess)</span><br><span class="line">&#123;</span><br><span class="line">	std::cout &lt;&lt; <span class="string">&quot;ERROR: cuda stream creation failed.&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>从<code>image_file_path</code>中读取图像，将其调整为所需尺寸，并复制到GPU内存中。输入图像在进入神经网络之前，首先会进行预处理操作。典型的预处理操作包括：缩放到指定尺寸、减去均值、归一化、除方差。另外如果模型对输入通道的顺序有要求，预处理也会调整通道顺序。YOLOv5的输入大小为640x640像素，通道顺序为RGB， 预处理也非常简单，像素值除以255即可。</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">cv::Mat img_bgr = cv::<span class="built_in">imread</span>(image_file_path);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 预处理</span></span><br><span class="line">cv::<span class="built_in">resize</span>(img_bgr, img_bgr, cv::<span class="built_in">Size</span>(width, height));</span><br><span class="line"><span class="type">int32_t</span> tmp = height * width * channels;</span><br><span class="line"><span class="type">float</span> *input_buffer = <span class="keyword">new</span> <span class="type">float</span>[tmp]();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> c = <span class="number">0</span>; c &lt; channels; c++)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>, HW = height * width; j &lt; HW; ++j)</span><br><span class="line">	&#123;</span><br><span class="line">		input_buffer[c * HW + j] = <span class="built_in">static_cast</span>&lt;<span class="type">float</span>&gt;(img_bgr.data[j * channels + <span class="number">2</span> - c]) / <span class="number">255.0f</span>;</span><br><span class="line">		<span class="comment">// 其中 img_bgr.data 为指向像素存储区域的指针，而括号内下表运算中的 +2 实现了BGR数据到RGB的转换。</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>数据预处理的操作是在HOST（CPU）侧完成，在推演之前还需要将预处理后的数据拷贝到GPU一侧。</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="built_in">cudaMemcpyAsync</span>(cuda_mem_input, input_buffer, input_mem_size, cudaMemcpyHostToDevice, stream) != cudaSuccess)</span><br><span class="line">&#123;</span><br><span class="line">	std::cout &lt;&lt; <span class="string">&quot;ERROR: CUDA memory copy of input failed, size = &quot;</span> &lt;&lt; input_mem_size &lt;&lt; <span class="string">&quot; bytes&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<ol start="3">
<li>运行推理</li>
</ol>
<ul>
<li>使用执行Context的 <code>enqueueV2</code> 方法异步运行模型。 <code>enqueueV2</code> 是真正触发模型推演的操作。参数中的 <code>bindings</code> 是之前记录的指向输入与输出显存的指针数组。 <code>stream</code> 是在初始化资源章节创建的 <code>cudaStream</code> 对象，用于同步数据。</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">bool</span> status = context-&gt;<span class="built_in">enqueueV2</span>(bindings, stream, <span class="literal">nullptr</span>);</span><br><span class="line"><span class="keyword">if</span> (!status)</span><br><span class="line">&#123;</span><br><span class="line">	std::cout &lt;&lt; <span class="string">&quot;ERROR: TensorRT inference failed.&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<ol start="4">
<li>模型输出后处理</li>
</ol>
<ul>
<li>首先按照输出数据的规格申请输出内存空间。为输出结果 <code>output0</code> 申请了一份内存空间，并将指向这些内存区域的指针存储在 <code>output_buffers</code> 指针数组中。</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">std::vector&lt;<span class="type">float</span> *&gt; output_buffers;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; output_mem_sizes.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">float</span> *buf = <span class="keyword">new</span> <span class="type">float</span>[output_mem_sizes[i] / <span class="built_in">sizeof</span>(<span class="type">float</span>)];</span><br><span class="line">	output_buffers.<span class="built_in">push_back</span>(buf);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>接着将输出从GPU内存复制到CPU内存。使用 <code>cudaMemcpyAsync</code> 函数。其中参数 <code>output_buffers</code> 为刚才申请好的内存空间， <code>bindings</code> 为GPU一侧的显存空间， <code>output_mem_sizes</code> 为输出结果所占据的内存大小， <code>cudaMemcpyDeviceToHost</code> 指定了拷贝操作的方向，由于这是一个异步操作，所以要使用 <code>stream</code> 作为同步数据的依据。</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; output_mem_sizes.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">auto</span> mem_to_host_result = <span class="built_in">cudaMemcpyAsync</span>(output_buffers[i], bindings[<span class="number">1</span> + i], output_mem_sizes[i], cudaMemcpyDeviceToHost, stream);</span><br><span class="line">	<span class="keyword">if</span> (mem_to_host_result != cudaSuccess)</span><br><span class="line">	&#123;</span><br><span class="line">		std::cout &lt;&lt; <span class="string">&quot;ERROR: CUDA memory copy of output &quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot; failed, size = &quot;</span> &lt;&lt; output_mem_sizes[i] &lt;&lt; <span class="string">&quot; bytes&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>等待同步，已经调用了3个异步操作函数，因此这里需要使用同步操作来等待执行真正完成。同步之后，模型推演的结果才真正存储在了内存 <code>output_buffers</code> 中。</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cudaStreamSynchronize</span>(stream);</span><br></pre></td></tr></table></figure></div>
<ul>
<li>对输出进行后处理。首先定义三个向量分别存储检测获得的物体边界框 <code>boxes</code> 、分值 <code>scores</code> 与类别ID <code>class_ids</code> 。此次训练的YOLOv5模型有1个输出，即 <code>output0</code> 。 其本身是一个巨大的矩阵，其行数为25200，代表模型给出的物体检测结果。为此，可以定义一个指针 <code>p</code> 指向 <code>output0</code> ，然后通过一个循环来轮询结果。 此次训练中， <code>output0</code> 每行具有6个元素：第0~3个元素为物体边界框中心x，物体边界框中心y，物体边界框宽度和物体边界框高度；第4个元素为预测框分值；第5个元素是物体类别ID的概率，可以按照最大值获取到分类结果。</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">std::vector&lt;<span class="type">float</span>&gt; scores;</span><br><span class="line">std::vector&lt;cv::Rect&gt; boxes;</span><br><span class="line">std::vector&lt;<span class="type">int</span>&gt; class_ids;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> *p = output_buffers[<span class="number">0</span>]; <span class="comment">// 指向output0的第一个元素</span></span><br><span class="line"><span class="type">int</span> step = <span class="number">6</span>, proposal_count = <span class="number">25200</span>;</span><br><span class="line"><span class="type">float</span> score_threshold = <span class="number">0.5</span>, nms_threshold = <span class="number">0.45</span>; <span class="comment">// 分支阈值和NMS阈值</span></span><br><span class="line"><span class="type">float</span> scale = <span class="number">1.0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; proposal_count; i++)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// 置信度低于分数阈值</span></span><br><span class="line">	<span class="type">float</span> obj_score = p[<span class="number">4</span>]; <span class="comment">// 第4个元素是预测框分值</span></span><br><span class="line">	<span class="keyword">if</span> (obj_score &lt; score_threshold)</span><br><span class="line">	&#123;</span><br><span class="line">		p += step;</span><br><span class="line">		<span class="keyword">continue</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 判断对象分类</span></span><br><span class="line">	<span class="type">int</span> c_id = <span class="number">-1</span>;</span><br><span class="line">	<span class="type">float</span> c_score = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">size_t</span> j = <span class="number">1</span>; j &lt; step; j++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (p[j] &gt; c_score)</span><br><span class="line">		&#123;</span><br><span class="line">			c_score = p[j];</span><br><span class="line">			c_id = j - <span class="number">2</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	scores.<span class="built_in">push_back</span>(c_score * obj_score);</span><br><span class="line">	class_ids.<span class="built_in">push_back</span>(c_id);</span><br><span class="line">	boxes.<span class="built_in">push_back</span>(cv::<span class="built_in">Rect</span>((p[<span class="number">0</span>] - p[<span class="number">2</span>] / <span class="number">2</span>) / scale, (p[<span class="number">1</span>] - p[<span class="number">3</span>] / <span class="number">2</span>) / scale, p[<span class="number">2</span>] / scale, p[<span class="number">3</span>] / scale));</span><br><span class="line">	p += step; <span class="comment">// 指向下一行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>使用了OpenCV提供的NMS方法 <code>cv::dnn::NMSBoxes</code> 。其中 <code>boxes</code> 为存储了 <code>Rect</code> 类的向量， <code>scores</code> 为存储了分值的向量， <code>score_threshold</code> 为检测分值阈值， <code>nms_threshold</code> 为NMS操作的阈值， <code>indices</code> 为一个空向量，用来存储NMS的结果。最后按照 <code>indices</code> 给出的物体序号提取最终结果。</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 执行非最大值抑制以消除具有较低置信度的冗余重叠框</span></span><br><span class="line">std::vector&lt;<span class="type">int</span>&gt; indices;</span><br><span class="line">cv::dnn::<span class="built_in">NMSBoxes</span>(boxes, scores, score_threshold, nms_threshold, indices);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 收集检测结果</span></span><br><span class="line">std::vector&lt;Result&gt; results;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> i : indices) </span><br><span class="line">&#123;</span><br><span class="line">    results.<span class="built_in">push_back</span>(Result &#123; scores[i], boxes[i], class_ids[i] &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<ol start="5">
<li>保存结果：它将包含绘制结果的图像保存下来。</li>
</ol>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> &amp;r : results)</span><br><span class="line">&#123;</span><br><span class="line">	cv::<span class="built_in">rectangle</span>(img_bgr, r.box, cv::<span class="built_in">Scalar</span>(<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cv::<span class="built_in">imwrite</span>(<span class="string">&quot;result.jpg&quot;</span>, img_bgr);</span><br></pre></td></tr></table></figure></div>
<h3 id="5-2-5-主函数设计">5.2.5 主函数设计</h3>
<p>此程序主函数与基于.onnx文件推理程序类似，通过<code>main</code>函数的参数进行传参。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//yolov5-engine.cpp</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (argc != <span class="number">3</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		std::cout &lt;&lt; <span class="string">&quot;Run like this:\n    &quot;</span> &lt;&lt; argv[<span class="number">0</span>] &lt;&lt; <span class="string">&quot; yolov5s.engine input.jpg&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//...</span></span><br><span class="line">	<span class="built_in">run</span>(argv[<span class="number">1</span>], argv[<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>所以当调用该程序时，只需在命令提示符的当前目录下，输入指令格式：</p>
<div class="highlight-container" data-rel="Cmd"><figure class="iseeu highlight cmd"><table><tr><td class="code"><pre><span class="line">yolov5-engine.exe best.engine input.jpg</span><br></pre></td></tr></table></figure></div>
<p><br><br><br></p>
<h1>陆 —— 打包软件</h1>
<h2 id="6-1-基于-onnx文件图像推理程序打包">6.1 基于.onnx文件图像推理程序打包</h2>
<p>打包程序考虑其可用性，在输出文件的时候做了处理：在当前目录输出一张照片，在<code>output/</code>文件夹也输出一张照片并做名字冲突处理。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//导出名冲突</span></span><br><span class="line"><span class="function">string <span class="title">getUniqueFileName</span><span class="params">(<span class="type">const</span> std::string &amp;fileName, <span class="type">const</span> std::string &amp;outputDirectory)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	string baseName, extension;</span><br><span class="line">	<span class="type">size_t</span> dotIndex = fileName.<span class="built_in">rfind</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">	<span class="keyword">if</span> (dotIndex != string::npos)</span><br><span class="line">	&#123;</span><br><span class="line">		baseName = fileName.<span class="built_in">substr</span>(<span class="number">0</span>, dotIndex);</span><br><span class="line">		extension = fileName.<span class="built_in">substr</span>(dotIndex);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		baseName = fileName;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	string newFileName = fileName;</span><br><span class="line">	<span class="type">int</span> counter = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span> (ifstream(outputDirectory + newFileName).<span class="built_in">good</span>())</span><br><span class="line">	&#123;</span><br><span class="line">		newFileName = baseName + <span class="string">&quot;_&quot;</span> + <span class="built_in">to_string</span>(counter) + extension;</span><br><span class="line">		counter++;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> newFileName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 备份存储</span></span><br><span class="line">string dir = <span class="string">&quot;output/&quot;</span>; <span class="comment">//文件夹路径</span></span><br><span class="line"><span class="keyword">if</span> (_access(dir.<span class="built_in">c_str</span>(), <span class="number">0</span>) == <span class="number">-1</span>)<span class="comment">//判断该文件夹是否存在</span></span><br><span class="line">&#123;</span><br><span class="line">	_mkdir(dir.<span class="built_in">c_str</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">imwrite</span>(<span class="string">&quot;result.jpg&quot;</span>, srcimg);</span><br><span class="line">string newname = <span class="built_in">getUniqueFileName</span>(<span class="string">&quot;result.jpg&quot;</span>, <span class="string">&quot;output/&quot;</span>);</span><br><span class="line"><span class="built_in">imwrite</span>(<span class="string">&quot;output/&quot;</span> + newname, srcimg);</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
<p>由于主函数设计为可用命令提示符运行，故只需使用Visual Studio的Release版本生成.exe文件，再参考<a class="link" href="https://fingsinz.space/%E6%97%A5%E5%B8%B8/11/#more">此博客 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>进行打包即可。</p>
<p>打包之后即可移植到其他PC设备使用。</p>
<h2 id="6-2-基于-engine文件图像推理程序打包">6.2 基于.engine文件图像推理程序打包</h2>
<p>同理，打包程序考虑其可用性，在输出文件的时候做了处理：在当前目录输出一张照片，在<code>output/</code>文件夹也输出一张照片并做名字冲突处理。</p>
<p>由于主函数设计为可用命令提示符运行，故只需使用Visual Studio的Release版本生成.exe文件，再参考<a class="link" href="https://fingsinz.space/%E6%97%A5%E5%B8%B8/11/#more">此博客 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>进行打包即可。</p>
<p>注意一点，由于.engine文件需要调用显卡驱动，故不能移植到别的电脑使用（暂时我是没成功）。</p>
<h2 id="6-3-整体打包">6.3 整体打包</h2>
<p>此次项目整体打包采用Qt作为前端页面，将上面两个打包好的程序结合，使用时只需调用指定程序模块即可。具体Qt打包可参考<a class="link" href="https://fingsinz.space/%E6%97%A5%E5%B8%B8/10/">此博客 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>具体代码不细展开，分享于<a class="link" href="https://gitee.com/fingsinz/ele-bicycle-detection/">码云仓库 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p>
<p><br><br><br></p>
<h1>柒 —— 总结及后话</h1>
<p>实际上，如5.1的步骤，将参数改为.trt，即可导出.trt文件。</p>
<div class="highlight-container" data-rel="Cmd"><figure class="iseeu highlight cmd"><table><tr><td class="code"><pre><span class="line">trtexec --onnx=best.onnx --saveEngine=best.trt</span><br></pre></td></tr></table></figure></div>
<p>至于如何根据.trt文件设计算法进一步进行推测识别，此次项目未能完成，有待补充，深度学习很多方面的知识也有待补充。故此次项目仅能作为一个带有启发性的入门级别的项目。</p>
<p>深度学习是机器学习领域中的一个新的研究方向，旨在让机器能够像人一样具有分析学习能力，能够识别文字、图像和声音等数据。深度学习试图为数据的高层次摘要进行建模，通过使用多个处理层和对这些层的结果进行线性和非线性的转换，来实现对数据的识别和理解。深度学习在搜索技术、数据挖掘、机器翻译、自然语言处理、多媒体学习、语音、推荐和个性化技术等领域都取得了了很多成果。经过这次项目，我感受到了深度学习的有趣，写下这篇博客，用于记录与分享。</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>YOLOv5</tag>
        <tag>TensorRT</tag>
        <tag>C++推演</tag>
        <tag>OpenCV</tag>
      </tags>
  </entry>
  <entry>
    <title>两个用过的导航页</title>
    <url>/%E7%BD%91%E9%A1%B5/%E5%AF%BC%E8%88%AA%E9%A1%B5/</url>
    <content><![CDATA[<p>介绍两个我常用的导航页——果汁导航页和青柠起始页。导航页就是一个网站的目录，其包含了很多常用其他网站的快捷方式。</p>
<p>关键词：导航页</p>
<span id="more"></span>
<hr>
<ol>
<li>果汁导航</li>
</ol>
<p>果汁导航页包括互联网搜索功能，还有各种生活学习用到的网页快捷方式。每层目录下还收纳了很多相关网站，包括影视、知识、新闻、等网站，丰富度很高，也很容易因为内容太多眼花缭乱忘记了有这么样的功能。更多功能可以自己探索发现收藏。可登录使用也可不登录使用。</p>
<p>地址：<a class="link" href="http://guozhivip.com">果汁导航 - guozhivip.com <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/%E5%AF%BC%E8%88%AA%E9%A1%B5_%E6%9E%9C%E6%B1%81%E8%B5%84%E6%BA%90%E5%AF%BC%E8%88%AA.png" alt="果汁导航"><figcaption>果汁导航</figcaption></figure></p>
<ol start="2">
<li>青柠起始页</li>
</ol>
<p>一个简约的起始页，具有搜索功能，当搜索框聚焦时，背景具有毛玻璃效果。点击时钟可以到达另一页，此页可以添加一些常用的网站快捷方式（需登录），自定义程度高。丰富度不高，简约型网站。</p>
<p>地址：<a class="link" href="https://limestart.cn/">青柠起始页 - limestart.cn <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/%E5%AF%BC%E8%88%AA%E9%A1%B5_%E9%9D%92%E6%9F%A0%E8%B5%B7%E5%A7%8B%E9%A1%B5.jpg" alt="青柠起始页主页"><figcaption>青柠起始页主页</figcaption></figure></p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/%E5%AF%BC%E8%88%AA%E9%A1%B5_%E9%9D%92%E6%9F%A0%E8%B5%B7%E5%A7%8B%E9%A1%B51.jpg" alt="青柠起始页附页"><figcaption>青柠起始页附页</figcaption></figure></p>
<ul>
<li>附：设置为浏览器起始页</li>
</ul>
<p>以Edge浏览器为例，打开设置页面，选择<code>开始、主页和新建标签页</code>，将启动时页面改为想要的导航页，更方便自己浏览器使用。</p>
<p><figure class="image-caption"><img src="https://fblog-img.oss-cn-hangzhou.aliyuncs.com/blog/%E5%AF%BC%E8%88%AA%E9%A1%B5_%E8%AE%BE%E7%BD%AE.jpg" alt="设置"><figcaption>设置</figcaption></figure></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>网页</category>
      </categories>
      <tags>
        <tag>导航页</tag>
      </tags>
  </entry>
</search>
